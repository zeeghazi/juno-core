{
  "version": 3,
  "sources": ["../../node_modules/@dfinity/principal/src/utils/base32.ts", "../../node_modules/@dfinity/principal/src/utils/getCrc.ts", "../../node_modules/@noble/hashes/src/_assert.ts", "../../node_modules/@noble/hashes/src/cryptoNode.ts", "../../node_modules/@noble/hashes/src/utils.ts", "../../node_modules/@noble/hashes/src/_md.ts", "../../node_modules/@noble/hashes/src/sha256.ts", "../../node_modules/@dfinity/principal/src/utils/sha224.ts", "../../node_modules/@dfinity/principal/src/index.ts", "../../node_modules/base64-js/index.js", "../../node_modules/ieee754/index.js", "../../node_modules/buffer/index.js", "../../node_modules/@dfinity/agent/src/agent/api.ts", "../../node_modules/@dfinity/agent/src/errors.ts", "../../node_modules/@dfinity/candid/src/utils/buffer.ts", "../../node_modules/@dfinity/candid/src/utils/hash.ts", "../../node_modules/@dfinity/candid/src/utils/leb128.ts", "../../node_modules/@dfinity/candid/src/utils/bigint-math.ts", "../../node_modules/@dfinity/candid/src/idl.ts", "../../node_modules/@dfinity/candid/src/candid-core.ts", "../../node_modules/@dfinity/candid/src/candid-ui.ts", "../../node_modules/@dfinity/candid/lib/cjs/types.js", "../../node_modules/@dfinity/candid/src/index.ts", "../../node_modules/bignumber.js/bignumber.js", "../../node_modules/borc/src/decoder.asm.js", "../../node_modules/borc/src/constants.js", "../../node_modules/borc/src/utils.js", "../../node_modules/borc/src/simple.js", "../../node_modules/borc/src/tagged.js", "../../node_modules/iso-url/src/url.js", "../../node_modules/iso-url/src/relative.js", "../../node_modules/iso-url/index.js", "../../node_modules/borc/src/decoder.js", "../../node_modules/borc/src/diagnose.js", "../../node_modules/borc/src/encoder.js", "../../node_modules/borc/src/index.js", "../../node_modules/@dfinity/agent/src/utils/buffer.ts", "../../node_modules/@dfinity/agent/src/request_id.ts", "../../node_modules/@dfinity/agent/src/auth.ts", "../../node_modules/simple-cbor/src/value.ts", "../../node_modules/simple-cbor/src/serializer.ts", "../../node_modules/simple-cbor/src/index.ts", "../../node_modules/@dfinity/agent/src/cbor.ts", "../../node_modules/@dfinity/agent/src/utils/random.ts", "../../node_modules/@dfinity/agent/src/agent/http/types.ts", "../../node_modules/@dfinity/agent/src/agent/http/transforms.ts", "../../node_modules/@dfinity/agent/src/agent/http/errors.ts", "../../node_modules/@noble/curves/src/abstract/utils.ts", "../../node_modules/@noble/curves/src/abstract/modular.ts", "../../node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../../node_modules/@noble/curves/src/abstract/curve.ts", "../../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../node_modules/@noble/curves/src/abstract/bls.ts", "../../node_modules/@noble/curves/src/bls12-381.ts", "../../node_modules/@dfinity/agent/src/utils/bls.ts", "../../node_modules/@dfinity/agent/src/utils/leb.ts", "../../node_modules/@dfinity/agent/src/certificate.ts", "../../node_modules/@dfinity/agent/src/canisterStatus/index.ts", "../../node_modules/@noble/hashes/src/_u64.ts", "../../node_modules/@noble/hashes/src/sha512.ts", "../../node_modules/@noble/curves/src/abstract/edwards.ts", "../../node_modules/@noble/curves/src/abstract/montgomery.ts", "../../node_modules/@noble/curves/src/ed25519.ts", "../../node_modules/@dfinity/agent/src/utils/expirableMap.ts", "../../node_modules/@dfinity/agent/src/der.ts", "../../node_modules/@dfinity/agent/src/public_key.ts", "../../node_modules/@dfinity/agent/src/observable.ts", "../../node_modules/@dfinity/agent/src/agent/http/index.ts", "../../node_modules/@dfinity/agent/src/agent/proxy.ts", "../../node_modules/@dfinity/agent/src/agent/index.ts", "../../node_modules/@dfinity/agent/src/polling/strategy.ts", "../../node_modules/@dfinity/agent/src/polling/index.ts", "../../node_modules/@dfinity/agent/src/canisters/management_idl.ts", "../../node_modules/@dfinity/agent/src/actor.ts", "../../node_modules/@dfinity/agent/src/canisters/asset_idl.ts", "../../node_modules/@dfinity/agent/src/canisters/asset.ts", "../../node_modules/@dfinity/agent/src/fetch_candid.ts", "../../node_modules/@dfinity/agent/src/index.ts", "../../node_modules/@dfinity/identity/src/identity/ed25519.ts", "../../node_modules/@dfinity/identity/src/identity/ecdsa.ts", "../../node_modules/@dfinity/identity/src/identity/partial.ts", "../../node_modules/@dfinity/identity/src/identity/delegation.ts", "../../node_modules/@dfinity/identity/src/identity/webauthn.ts", "../../node_modules/@dfinity/identity/src/index.ts", "../../node_modules/@dfinity/auth-client/src/idleManager.ts", "../../node_modules/idb/build/wrap-idb-value.js", "../../node_modules/idb/build/index.js", "../../node_modules/@dfinity/auth-client/src/db.ts", "../../node_modules/@dfinity/auth-client/src/storage.ts", "../../node_modules/@dfinity/auth-client/src/index.ts", "../../node_modules/@junobuild/utils/src/utils/debounce.utils.ts", "../../node_modules/@junobuild/utils/src/utils/json.utils.ts", "../../node_modules/@junobuild/utils/src/utils/null.utils.ts", "../../node_modules/@junobuild/utils/src/utils/did.utils.ts", "../../node_modules/@junobuild/utils/src/utils/env.utils.ts", "../../src/stores/store.ts", "../../src/stores/auth.store.ts", "../../src/utils/events.utils.ts", "../../src/constants/auth.constants.ts", "../../src/constants/container.constants.ts", "../../src/stores/env.store.ts", "../../src/utils/window.utils.ts", "../../src/providers/auth.providers.ts", "../../src/utils/auth.utils.ts", "../../src/utils/data.utils.ts", "../../src/utils/doc.utils.ts", "../../src/utils/list.utils.ts", "../../declarations/satellite/satellite.factory.did.js", "../../src/utils/actor.utils.ts", "../../src/utils/env.utils.ts", "../../src/api/actor.api.ts", "../../src/api/doc.api.ts", "../../src/services/identity.services.ts", "../../src/services/doc.services.ts", "../../src/services/user.services.ts", "../../src/services/auth.services.ts", "../../src/services/auth-timout.services.ts", "../../src/api/storage.api.ts", "../../src/utils/crypto.utils.ts", "../../src/services/storage.services.ts", "../../src/index.ts"],
  "sourcesContent": ["const alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\n\n// Build a lookup table for decoding.\nconst lookupTable: Record<string, number> = Object.create(null);\nfor (let i = 0; i < alphabet.length; i++) {\n  lookupTable[alphabet[i]] = i;\n}\n\n// Add aliases for rfc4648.\nlookupTable['0'] = lookupTable.o;\nlookupTable['1'] = lookupTable.i;\n\n/**\n * @param input The input array to encode.\n * @returns A Base32 string encoding the input.\n */\nexport function encode(input: Uint8Array): string {\n  // How many bits will we skip from the first byte.\n  let skip = 0;\n  // 5 high bits, carry from one byte to the next.\n  let bits = 0;\n\n  // The output string in base32.\n  let output = '';\n\n  function encodeByte(byte: number) {\n    if (skip < 0) {\n      // we have a carry from the previous byte\n      bits |= byte >> -skip;\n    } else {\n      // no carry\n      bits = (byte << skip) & 248;\n    }\n\n    if (skip > 3) {\n      // Not enough data to produce a character, get us another one\n      skip -= 8;\n      return 1;\n    }\n\n    if (skip < 4) {\n      // produce a character\n      output += alphabet[bits >> 3];\n      skip += 5;\n    }\n\n    return 0;\n  }\n\n  for (let i = 0; i < input.length; ) {\n    i += encodeByte(input[i]);\n  }\n\n  return output + (skip < 0 ? alphabet[bits >> 3] : '');\n}\n\n/**\n * @param input The base32 encoded string to decode.\n */\nexport function decode(input: string): Uint8Array {\n  // how many bits we have from the previous character.\n  let skip = 0;\n  // current byte we're producing.\n  let byte = 0;\n\n  const output = new Uint8Array(((input.length * 4) / 3) | 0);\n  let o = 0;\n\n  function decodeChar(char: string) {\n    // Consume a character from the stream, store\n    // the output in this.output. As before, better\n    // to use update().\n    let val = lookupTable[char.toLowerCase()];\n    if (val === undefined) {\n      throw new Error(`Invalid character: ${JSON.stringify(char)}`);\n    }\n\n    // move to the high bits\n    val <<= 3;\n    byte |= val >>> skip;\n    skip += 5;\n\n    if (skip >= 8) {\n      // We have enough bytes to produce an output\n      output[o++] = byte;\n      skip -= 8;\n\n      if (skip > 0) {\n        byte = (val << (5 - skip)) & 255;\n      } else {\n        byte = 0;\n      }\n    }\n  }\n\n  for (const c of input) {\n    decodeChar(c);\n  }\n\n  return output.slice(0, o);\n}\n", "// This file is translated to JavaScript from\n// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/\nconst lookUpTable: Uint32Array = new Uint32Array([\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n]);\n\n/**\n * Calculate the CRC32 of an ArrayBufferLike.\n * @param buf The BufferLike to calculate the CRC32 of.\n */\nexport function getCrc32(buf: ArrayBufferLike): number {\n  const b = new Uint8Array(buf);\n  let crc = -1;\n\n  for (let i = 0; i < b.length; i++) {\n    const byte = b[i];\n    const t = (byte ^ crc) & 0xff;\n    crc = lookUpTable[t] ^ (crc >>> 8);\n  }\n\n  return (crc ^ -1) >>> 0;\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto =\n  nc && typeof nc === 'object' && 'webcrypto' in nc ? (nc.webcrypto as any) : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "import { sha224 as jsSha224 } from '@noble/hashes/sha256';\n\n/**\n * Returns the SHA224 hash of the buffer.\n * @param data Arraybuffer to encode\n */\nexport function sha224(data: ArrayBuffer): Uint8Array {\n  return jsSha224.create().update(new Uint8Array(data)).digest();\n}\n", "import { decode, encode } from './utils/base32';\nimport { getCrc32 } from './utils/getCrc';\nimport { sha224 } from './utils/sha224';\n\nexport const JSON_KEY_PRINCIPAL = '__principal__';\nconst SELF_AUTHENTICATING_SUFFIX = 2;\nconst ANONYMOUS_SUFFIX = 4;\n\nconst MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR = 'aaaaa-aa';\n\nconst fromHexString = (hexString: string) =>\n  new Uint8Array((hexString.match(/.{1,2}/g) ?? []).map(byte => parseInt(byte, 16)));\n\nconst toHexString = (bytes: Uint8Array) =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nexport type JsonnablePrincipal = {\n  [JSON_KEY_PRINCIPAL]: string;\n};\n\nexport class Principal {\n  public static anonymous(): Principal {\n    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));\n  }\n\n  /**\n   * Utility method, returning the principal representing the management canister, decoded from the hex string `'aaaaa-aa'`\n   * @returns {Principal} principal of the management canister\n   */\n  public static managementCanister(): Principal {\n    return this.fromHex(MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR);\n  }\n\n  public static selfAuthenticating(publicKey: Uint8Array): Principal {\n    const sha = sha224(publicKey);\n    return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));\n  }\n\n  public static from(other: unknown): Principal {\n    if (typeof other === 'string') {\n      return Principal.fromText(other);\n    } else if (Object.getPrototypeOf(other) === Uint8Array.prototype) {\n      return new Principal(other as Uint8Array);\n    } else if (\n      typeof other === 'object' &&\n      other !== null &&\n      (other as Principal)._isPrincipal === true\n    ) {\n      return new Principal((other as Principal)._arr);\n    }\n\n    throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);\n  }\n\n  public static fromHex(hex: string): Principal {\n    return new this(fromHexString(hex));\n  }\n\n  public static fromText(text: string): Principal {\n    let maybePrincipal = text;\n    // If formatted as JSON string, parse it first\n    if (text.includes(JSON_KEY_PRINCIPAL)) {\n      const obj = JSON.parse(text);\n      if (JSON_KEY_PRINCIPAL in obj) {\n        maybePrincipal = obj[JSON_KEY_PRINCIPAL];\n      }\n    }\n\n    const canisterIdNoDash = maybePrincipal.toLowerCase().replace(/-/g, '');\n\n    let arr = decode(canisterIdNoDash);\n    arr = arr.slice(4, arr.length);\n\n    const principal = new this(arr);\n    if (principal.toText() !== maybePrincipal) {\n      throw new Error(\n        `Principal \"${principal.toText()}\" does not have a valid checksum (original value \"${maybePrincipal}\" may not be a valid Principal ID).`,\n      );\n    }\n\n    return principal;\n  }\n\n  public static fromUint8Array(arr: Uint8Array): Principal {\n    return new this(arr);\n  }\n\n  public readonly _isPrincipal = true;\n\n  protected constructor(private _arr: Uint8Array) {}\n\n  public isAnonymous(): boolean {\n    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;\n  }\n\n  public toUint8Array(): Uint8Array {\n    return this._arr;\n  }\n\n  public toHex(): string {\n    return toHexString(this._arr).toUpperCase();\n  }\n\n  public toText(): string {\n    const checksumArrayBuf = new ArrayBuffer(4);\n    const view = new DataView(checksumArrayBuf);\n    view.setUint32(0, getCrc32(this._arr));\n    const checksum = new Uint8Array(checksumArrayBuf);\n\n    const bytes = Uint8Array.from(this._arr);\n    const array = new Uint8Array([...checksum, ...bytes]);\n\n    const result = encode(array);\n    const matches = result.match(/.{1,5}/g);\n    if (!matches) {\n      // This should only happen if there's no character, which is unreachable.\n      throw new Error();\n    }\n    return matches.join('-');\n  }\n\n  public toString(): string {\n    return this.toText();\n  }\n\n  /**\n   * Serializes to JSON\n   * @returns {JsonnablePrincipal} a JSON object with a single key, {@link JSON_KEY_PRINCIPAL}, whose value is the principal as a string\n   */\n  public toJSON(): JsonnablePrincipal {\n    return { [JSON_KEY_PRINCIPAL]: this.toText() };\n  }\n\n  /**\n   * Utility method taking a Principal to compare against. Used for determining canister ranges in certificate verification\n   * @param {Principal} other - a {@link Principal} to compare\n   * @returns {'lt' | 'eq' | 'gt'} `'lt' | 'eq' | 'gt'` a string, representing less than, equal to, or greater than\n   */\n  public compareTo(other: Principal): 'lt' | 'eq' | 'gt' {\n    for (let i = 0; i < Math.min(this._arr.length, other._arr.length); i++) {\n      if (this._arr[i] < other._arr[i]) return 'lt';\n      else if (this._arr[i] > other._arr[i]) return 'gt';\n    }\n    // Here, at least one principal is a prefix of the other principal (they could be the same)\n    if (this._arr.length < other._arr.length) return 'lt';\n    if (this._arr.length > other._arr.length) return 'gt';\n    return 'eq';\n  }\n\n  /**\n   * Utility method checking whether a provided Principal is less than or equal to the current one using the {@link Principal.compareTo} method\n   * @param other a {@link Principal} to compare\n   * @returns {boolean} boolean\n   */\n  public ltEq(other: Principal): boolean {\n    const cmp = this.compareTo(other);\n    return cmp == 'lt' || cmp == 'eq';\n  }\n\n  /**\n   * Utility method checking whether a provided Principal is greater than or equal to the current one using the {@link Principal.compareTo} method\n   * @param other a {@link Principal} to compare\n   * @returns {boolean} boolean\n   */\n  public gtEq(other: Principal): boolean {\n    const cmp = this.compareTo(other);\n    return cmp == 'gt' || cmp == 'eq';\n  }\n}\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "import { Principal } from '@dfinity/principal';\nimport { RequestId } from '../request_id';\nimport { JsonObject } from '@dfinity/candid';\nimport { Identity } from '../auth';\nimport { HttpHeaderField } from './http/types';\n\n/**\n * Codes used by the replica for rejecting a message.\n * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.\n */\nexport enum ReplicaRejectCode {\n  SysFatal = 1,\n  SysTransient = 2,\n  DestinationInvalid = 3,\n  CanisterReject = 4,\n  CanisterError = 5,\n}\n\n/**\n * Options when doing a {@link Agent.readState} call.\n */\nexport interface ReadStateOptions {\n  /**\n   * A list of paths to read the state of.\n   */\n  paths: ArrayBuffer[][];\n}\n\n/**\n *\n */\nexport type QueryResponse = QueryResponseReplied | QueryResponseRejected;\n\nexport const enum QueryResponseStatus {\n  Replied = 'replied',\n  Rejected = 'rejected',\n}\n\nexport interface HttpDetailsResponse {\n  ok: boolean;\n  status: number;\n  statusText: string;\n  headers: HttpHeaderField[];\n}\n\nexport type ApiQueryResponse = QueryResponse & {\n  httpDetails: HttpDetailsResponse;\n  requestId: RequestId;\n};\n\nexport interface QueryResponseBase {\n  status: QueryResponseStatus;\n}\n\nexport type NodeSignature = {\n  // the batch time\n  timestamp: bigint;\n  // the signature\n  signature: Uint8Array;\n  // the ID of the node that created the signature\n  identity: Uint8Array;\n};\n\nexport interface QueryResponseReplied extends QueryResponseBase {\n  status: QueryResponseStatus.Replied;\n  reply: { arg: ArrayBuffer };\n  signatures?: NodeSignature[];\n}\n\nexport interface QueryResponseRejected extends QueryResponseBase {\n  status: QueryResponseStatus.Rejected;\n  reject_code: ReplicaRejectCode;\n  reject_message: string;\n  error_code: string;\n  signatures?: NodeSignature[];\n}\n\n/**\n * Options when doing a {@link Agent.query} call.\n */\nexport interface QueryFields {\n  /**\n   * The method name to call.\n   */\n  methodName: string;\n\n  /**\n   * A binary encoded argument. This is already encoded and will be sent as is.\n   */\n  arg: ArrayBuffer;\n\n  /**\n   * Overrides canister id for path to fetch. This is used for management canister calls.\n   */\n  effectiveCanisterId?: Principal;\n}\n\n/**\n * Options when doing a {@link Agent.call} call.\n */\nexport interface CallOptions {\n  /**\n   * The method name to call.\n   */\n  methodName: string;\n\n  /**\n   * A binary encoded argument. This is already encoded and will be sent as is.\n   */\n  arg: ArrayBuffer;\n\n  /**\n   * An effective canister ID, used for routing. This should only be mentioned if\n   * it's different from the canister ID.\n   */\n  effectiveCanisterId: Principal | string;\n}\n\nexport interface ReadStateResponse {\n  certificate: ArrayBuffer;\n}\n\nexport interface SubmitResponse {\n  requestId: RequestId;\n  response: {\n    ok: boolean;\n    status: number;\n    statusText: string;\n    body: {\n      error_code?: string;\n      reject_code: number;\n      reject_message: string;\n    } | null;\n    headers: HttpHeaderField[];\n  };\n}\n\n/**\n * An Agent able to make calls and queries to a Replica.\n */\nexport interface Agent {\n  readonly rootKey: ArrayBuffer | null;\n  /**\n   * Returns the principal ID associated with this agent (by default). It only shows\n   * the principal of the default identity in the agent, which is the principal used\n   * when calls don't specify it.\n   */\n  getPrincipal(): Promise<Principal>;\n\n  /**\n   * Create the request for the read state call.\n   * `readState` uses this internally.\n   * Useful to avoid signing the same request multiple times.\n   */\n  createReadStateRequest?(\n    options: ReadStateOptions,\n    identity?: Identity,\n    // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  ): Promise<any>;\n\n  /**\n   * Send a read state query to the replica. This includes a list of paths to return,\n   * and will return a Certificate. This will only reject on communication errors,\n   * but the certificate might contain less information than requested.\n   * @param effectiveCanisterId A Canister ID related to this call.\n   * @param options The options for this call.\n   * @param identity Identity for the call. If not specified, uses the instance identity.\n   * @param request The request to send in case it has already been created.\n   */\n  readState(\n    effectiveCanisterId: Principal | string,\n    options: ReadStateOptions,\n    identity?: Identity,\n    // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n    request?: any,\n  ): Promise<ReadStateResponse>;\n\n  call(canisterId: Principal | string, fields: CallOptions): Promise<SubmitResponse>;\n\n  /**\n   * Query the status endpoint of the replica. This normally has a few fields that\n   * corresponds to the version of the replica, its root public key, and any other\n   * information made public.\n   * @returns A JsonObject that is essentially a record of fields from the status\n   *     endpoint.\n   */\n  status(): Promise<JsonObject>;\n\n  /**\n   * Send a query call to a canister. See\n   * {@link https://sdk.dfinity.org/docs/interface-spec/#http-query | the interface spec}.\n   * @param canisterId The Principal of the Canister to send the query to. Sending a query to\n   *     the management canister is not supported (as it has no meaning from an agent).\n   * @param options Options to use to create and send the query.\n   * @param identity Sender principal to use when sending the query.\n   * @returns The response from the replica. The Promise will only reject when the communication\n   *     failed. If the query itself failed but no protocol errors happened, the response will\n   *     be of type QueryResponseRejected.\n   */\n  query(\n    canisterId: Principal | string,\n    options: QueryFields,\n    identity?: Identity | Promise<Identity>,\n  ): Promise<ApiQueryResponse>;\n\n  /**\n   * By default, the agent is configured to talk to the main Internet Computer,\n   * and verifies responses using a hard-coded public key.\n   *\n   * This function will instruct the agent to ask the endpoint for its public\n   * key, and use that instead. This is required when talking to a local test\n   * instance, for example.\n   *\n   * Only use this when you are  _not_ talking to the main Internet Computer,\n   * otherwise you are prone to man-in-the-middle attacks! Do not call this\n   * function by default.\n   */\n  fetchRootKey(): Promise<ArrayBuffer>;\n  /**\n   * If an application needs to invalidate an identity under certain conditions, an `Agent` may expose an `invalidateIdentity` method.\n   * Invoking this method will set the inner identity used by the `Agent` to `null`.\n   *\n   * A use case for this would be - after a certain period of inactivity, a secure application chooses to invalidate the identity of any `HttpAgent` instances. An invalid identity can be replaced by `Agent.replaceIdentity`\n   */\n  invalidateIdentity?(): void;\n  /**\n   * If an application needs to replace an identity under certain conditions, an `Agent` may expose a `replaceIdentity` method.\n   * Invoking this method will set the inner identity used by the `Agent` to a newly provided identity.\n   *\n   * A use case for this would be - after authenticating using `@dfinity/auth-client`, you can replace the `AnonymousIdentity` of your `Actor` with a `DelegationIdentity`.\n   *\n   * ```Actor.agentOf(defaultActor).replaceIdentity(await authClient.getIdentity());```\n   */\n  replaceIdentity?(identity: Identity): void;\n}\n", "/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n *\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n  constructor(public readonly message: string) {\n    super(message);\n    Object.setPrototypeOf(this, AgentError.prototype);\n  }\n}\n", "/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers: ArrayBuffer[]): ArrayBuffer {\n  const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n  let index = 0;\n  for (const b of buffers) {\n    result.set(new Uint8Array(b), index);\n    index += b.byteLength;\n  }\n  return result;\n}\n\n/**\n * Returns an hexadecimal representation of an array buffer.\n * @param bytes The array buffer.\n */\nexport function toHexString(bytes: ArrayBuffer): string {\n  return new Uint8Array(bytes).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n}\n\n/**\n * Return an array buffer from its hexadecimal representation.\n * @param hexString The hexadecimal string.\n */\nexport function fromHexString(hexString: string): ArrayBuffer {\n  return new Uint8Array((hexString.match(/.{1,2}/g) ?? []).map(byte => parseInt(byte, 16)));\n}\n\n/**\n * A class that abstracts a pipe-like ArrayBuffer.\n */\nexport class PipeArrayBuffer {\n  /**\n   * The reading view. It's a sliding window as we read and write, pointing to the buffer.\n   * @private\n   */\n  private _view: Uint8Array;\n\n  /**\n   * The actual buffer containing the bytes.\n   * @private\n   */\n  private _buffer: ArrayBuffer;\n\n  /**\n   * Creates a new instance of a pipe\n   * @param buffer an optional buffer to start with\n   * @param length an optional amount of bytes to use for the length.\n   */\n  constructor(buffer?: ArrayBuffer, length = buffer?.byteLength || 0) {\n    this._buffer = bufFromBufLike(buffer || new ArrayBuffer(0));\n    this._view = new Uint8Array(this._buffer, 0, length);\n  }\n\n  get buffer(): ArrayBuffer {\n    // Return a copy of the buffer.\n    return bufFromBufLike(this._view.slice());\n  }\n\n  get byteLength(): number {\n    return this._view.byteLength;\n  }\n\n  /**\n   * Read `num` number of bytes from the front of the pipe.\n   * @param num The number of bytes to read.\n   */\n  public read(num: number): ArrayBuffer {\n    const result = this._view.subarray(0, num);\n    this._view = this._view.subarray(num);\n    return result.slice().buffer;\n  }\n\n  public readUint8(): number | undefined {\n    const result = this._view[0];\n    this._view = this._view.subarray(1);\n    return result;\n  }\n\n  /**\n   * Write a buffer to the end of the pipe.\n   * @param buf The bytes to write.\n   */\n  public write(buf: ArrayBuffer): void {\n    const b = new Uint8Array(buf);\n    const offset = this._view.byteLength;\n    if (this._view.byteOffset + this._view.byteLength + b.byteLength >= this._buffer.byteLength) {\n      // Alloc grow the view to include the new bytes.\n      this.alloc(b.byteLength);\n    } else {\n      // Update the view to include the new bytes.\n      this._view = new Uint8Array(\n        this._buffer,\n        this._view.byteOffset,\n        this._view.byteLength + b.byteLength,\n      );\n    }\n\n    this._view.set(b, offset);\n  }\n\n  /**\n   * Whether or not there is more data to read from the buffer\n   */\n  public get end(): boolean {\n    return this._view.byteLength === 0;\n  }\n\n  /**\n   * Allocate a fixed amount of memory in the buffer. This does not affect the view.\n   * @param amount A number of bytes to add to the buffer.\n   */\n  public alloc(amount: number) {\n    // Add a little bit of exponential growth.\n    const b = new ArrayBuffer(((this._buffer.byteLength + amount) * 1.2) | 0);\n    const v = new Uint8Array(b, 0, this._view.byteLength + amount);\n    v.set(this._view);\n    this._buffer = b;\n    this._view = v;\n  }\n}\n\n/**\n * Returns a true ArrayBuffer from a Uint8Array, as Uint8Array.buffer is unsafe.\n * @param {Uint8Array} arr Uint8Array to convert\n * @returns ArrayBuffer\n */\nexport function uint8ToBuf(arr: Uint8Array): ArrayBuffer {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength).buffer;\n}\n\n/**\n * Returns a true ArrayBuffer from an ArrayBufferLike object.\n * @param bufLike a buffer-like object\n * @returns ArrayBuffer\n */\nexport function bufFromBufLike(\n  bufLike:\n    | ArrayBuffer\n    | Uint8Array\n    | DataView\n    | ArrayBufferView\n    | ArrayBufferLike\n    | [number]\n    | number[]\n    | { buffer: ArrayBuffer },\n): ArrayBuffer {\n  if (bufLike instanceof Uint8Array) {\n    return uint8ToBuf(bufLike);\n  }\n  if (bufLike instanceof ArrayBuffer) {\n    return bufLike;\n  }\n  if (Array.isArray(bufLike)) {\n    return uint8ToBuf(new Uint8Array(bufLike));\n  }\n  if ('buffer' in bufLike) {\n    return bufFromBufLike(bufLike.buffer);\n  }\n  return uint8ToBuf(new Uint8Array(bufLike));\n}\n", "/**\n * Hashes a string to a number. Algorithm can be found here:\n * https://caml.inria.fr/pub/papers/garrigue-polymorphic_variants-ml98.pdf\n * @param s - string to hash\n * @returns number representing hashed string\n */\nfunction idlHash(s: string): number {\n  const utf8encoder = new TextEncoder();\n  const array = utf8encoder.encode(s);\n\n  let h = 0;\n  for (const c of array) {\n    h = (h * 223 + c) % 2 ** 32;\n  }\n  return h;\n}\n\n/**\n *\n * @param label string\n * @returns number representing hashed label\n */\nexport function idlLabelToId(label: string): number {\n  if (/^_\\d+_$/.test(label) || /^_0x[0-9a-fA-F]+_$/.test(label)) {\n    const num = +label.slice(1, -1);\n    if (Number.isSafeInteger(num) && num >= 0 && num < 2 ** 32) {\n      return num;\n    }\n  }\n  return idlHash(label);\n}\n", "/* eslint-disable no-constant-condition */\n// Note: this file uses buffer-pipe, which on Node only, uses the Node Buffer\n//       implementation, which isn't compatible with the NPM buffer package\n//       which we use everywhere else. This means that we have to transform\n//       one into the other, hence why every function that returns a Buffer\n//       actually return `new Buffer(pipe.buffer)`.\n// TODO: The best solution would be to have our own buffer type around\n//       Uint8Array which is standard.\nimport { PipeArrayBuffer as Pipe } from './buffer';\n\nfunction eob(): never {\n  throw new Error('unexpected end of buffer');\n}\n\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param num number\n * @returns Buffer\n */\nexport function safeRead(pipe: Pipe, num: number): ArrayBuffer {\n  if (pipe.byteLength < num) {\n    eob();\n  }\n  return pipe.read(num);\n}\n\n/**\n * @param pipe - PipeArrayBuffer simulating buffer-pipe api\n */\nexport function safeReadUint8(pipe: Pipe): number {\n  const byte = pipe.readUint8();\n  if (byte === undefined) {\n    eob();\n  }\n  return byte;\n}\n\n/**\n * Encode a positive number (or bigint) into a Buffer. The number will be floored to the\n * nearest integer.\n * @param value The number to encode.\n */\nexport function lebEncode(value: bigint | number): ArrayBuffer {\n  if (typeof value === 'number') {\n    value = BigInt(value);\n  }\n\n  if (value < BigInt(0)) {\n    throw new Error('Cannot leb encode negative values.');\n  }\n\n  const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n  const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n  while (true) {\n    const i = Number(value & BigInt(0x7f));\n    value /= BigInt(0x80);\n    if (value === BigInt(0)) {\n      pipe.write(new Uint8Array([i]));\n      break;\n    } else {\n      pipe.write(new Uint8Array([i | 0x80]));\n    }\n  }\n\n  return pipe.buffer;\n}\n\n/**\n * Decode a leb encoded buffer into a bigint. The number will always be positive (does not\n * support signed leb encoding).\n * @param pipe A Buffer containing the leb encoded bits.\n */\nexport function lebDecode(pipe: Pipe): bigint {\n  let weight = BigInt(1);\n  let value = BigInt(0);\n  let byte;\n\n  do {\n    byte = safeReadUint8(pipe);\n    value += BigInt(byte & 0x7f).valueOf() * weight;\n    weight *= BigInt(128);\n  } while (byte >= 0x80);\n\n  return value;\n}\n\n/**\n * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number\n * will be floored to the nearest integer.\n * @param value The number to encode.\n */\nexport function slebEncode(value: bigint | number): ArrayBuffer {\n  if (typeof value === 'number') {\n    value = BigInt(value);\n  }\n\n  const isNeg = value < BigInt(0);\n  if (isNeg) {\n    value = -value - BigInt(1);\n  }\n  const byteLength = (value === BigInt(0) ? 0 : Math.ceil(Math.log2(Number(value)))) + 1;\n  const pipe = new Pipe(new ArrayBuffer(byteLength), 0);\n  while (true) {\n    const i = getLowerBytes(value);\n    value /= BigInt(0x80);\n\n    // prettier-ignore\n    if (   ( isNeg && value === BigInt(0) && (i & 0x40) !== 0)\n          || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {\n        pipe.write(new Uint8Array([i]));\n        break;\n      } else {\n        pipe.write(new Uint8Array([i | 0x80]));\n      }\n  }\n\n  function getLowerBytes(num: bigint): number {\n    const bytes = num % BigInt(0x80);\n    if (isNeg) {\n      // We swap the bits here again, and remove 1 to do two's complement.\n      return Number(BigInt(0x80) - bytes - BigInt(1));\n    } else {\n      return Number(bytes);\n    }\n  }\n  return pipe.buffer;\n}\n\n/**\n * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative\n * signed-leb encoding.\n * @param pipe A Buffer containing the signed leb encoded bits.\n */\nexport function slebDecode(pipe: Pipe): bigint {\n  // Get the size of the buffer, then cut a buffer of that size.\n  const pipeView = new Uint8Array(pipe.buffer);\n  let len = 0;\n  for (; len < pipeView.byteLength; len++) {\n    if (pipeView[len] < 0x80) {\n      // If it's a positive number, we reuse lebDecode.\n      if ((pipeView[len] & 0x40) === 0) {\n        return lebDecode(pipe);\n      }\n      break;\n    }\n  }\n\n  const bytes = new Uint8Array(safeRead(pipe, len + 1));\n  let value = BigInt(0);\n  for (let i = bytes.byteLength - 1; i >= 0; i--) {\n    value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);\n  }\n  return -value - BigInt(1);\n}\n\n/**\n *\n * @param value bigint or number\n * @param byteLength number\n * @returns Buffer\n */\nexport function writeUIntLE(value: bigint | number, byteLength: number): ArrayBuffer {\n  if (BigInt(value) < BigInt(0)) {\n    throw new Error('Cannot write negative values.');\n  }\n  return writeIntLE(value, byteLength);\n}\n\n/**\n *\n * @param value - bigint or number\n * @param byteLength - number\n * @returns ArrayBuffer\n */\nexport function writeIntLE(value: bigint | number, byteLength: number): ArrayBuffer {\n  value = BigInt(value);\n\n  const pipe = new Pipe(new ArrayBuffer(Math.min(1, byteLength)), 0);\n  let i = 0;\n  let mul = BigInt(256);\n  let sub = BigInt(0);\n  let byte = Number(value % mul);\n  pipe.write(new Uint8Array([byte]));\n  while (++i < byteLength) {\n    if (value < 0 && sub === BigInt(0) && byte !== 0) {\n      sub = BigInt(1);\n    }\n    byte = Number((value / mul - sub) % BigInt(256));\n    pipe.write(new Uint8Array([byte]));\n    mul *= BigInt(256);\n  }\n\n  return pipe.buffer;\n}\n\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readUIntLE(pipe: Pipe, byteLength: number): bigint {\n  let val = BigInt(safeReadUint8(pipe));\n  let mul = BigInt(1);\n  let i = 0;\n  while (++i < byteLength) {\n    mul *= BigInt(256);\n    const byte = BigInt(safeReadUint8(pipe));\n    val = val + mul * byte;\n  }\n  return val;\n}\n\n/**\n *\n * @param pipe Pipe from buffer-pipe\n * @param byteLength number\n * @returns bigint\n */\nexport function readIntLE(pipe: Pipe, byteLength: number): bigint {\n  let val = readUIntLE(pipe, byteLength);\n  const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));\n  if (val >= mul) {\n    val -= mul * BigInt(2);\n  }\n  return val;\n}\n", "/**\n * Equivalent to `Math.log2(n)` with support for `BigInt` values\n * @param n bigint or integer\n * @returns integer\n */\nexport function ilog2(n: bigint | number): number {\n  const nBig = BigInt(n);\n  if (n <= 0) {\n    throw new RangeError('Input must be positive');\n  }\n  return nBig.toString(2).length - 1;\n}\n\n/**\n * Equivalent to `2 ** n` with support for `BigInt` values\n * (necessary for browser preprocessors which replace the `**` operator with `Math.pow`)\n * @param n bigint or integer\n * @returns bigint\n */\nexport function iexp2(n: bigint | number): bigint {\n  const nBig = BigInt(n);\n  if (n < 0) {\n    throw new RangeError('Input must be non-negative');\n  }\n  return BigInt(1) << nBig;\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Principal as PrincipalId } from '@dfinity/principal';\nimport { JsonValue } from './types';\nimport { concat, PipeArrayBuffer as Pipe } from './utils/buffer';\nimport { idlLabelToId } from './utils/hash';\nimport {\n  lebDecode,\n  lebEncode,\n  readIntLE,\n  readUIntLE,\n  safeRead,\n  safeReadUint8,\n  slebDecode,\n  slebEncode,\n  writeIntLE,\n  writeUIntLE,\n} from './utils/leb128';\nimport { iexp2 } from './utils/bigint-math';\n\n/**\n * This module provides a combinator library to create serializers/deserializers\n * between JavaScript values and IDL used by canisters on the Internet Computer,\n * as documented at https://github.com/dfinity/candid/blob/119703ba342d2fef6ab4972d2541b9fe36ae8e36/spec/Candid.md\n */\n\nconst enum IDLTypeIds {\n  Null = -1,\n  Bool = -2,\n  Nat = -3,\n  Int = -4,\n  Float32 = -13,\n  Float64 = -14,\n  Text = -15,\n  Reserved = -16,\n  Empty = -17,\n  Opt = -18,\n  Vector = -19,\n  Record = -20,\n  Variant = -21,\n  Func = -22,\n  Service = -23,\n  Principal = -24,\n}\n\nconst magicNumber = 'DIDL';\nconst toReadableString_max = 400; // will not display arguments after 400chars. Makes sure 2mb blobs don't get inside the error\n\nfunction zipWith<TX, TY, TR>(xs: TX[], ys: TY[], f: (a: TX, b: TY) => TR): TR[] {\n  return xs.map((x, i) => f(x, ys[i]));\n}\n\n/**\n * An IDL Type Table, which precedes the data in the stream.\n */\nclass TypeTable {\n  // List of types. Needs to be an array as the index needs to be stable.\n  private _typs: ArrayBuffer[] = [];\n  private _idx = new Map<string, number>();\n\n  public has(obj: ConstructType) {\n    return this._idx.has(obj.name);\n  }\n\n  public add<T>(type: ConstructType<T>, buf: ArrayBuffer) {\n    const idx = this._typs.length;\n    this._idx.set(type.name, idx);\n    this._typs.push(buf);\n  }\n\n  public merge<T>(obj: ConstructType<T>, knot: string) {\n    const idx = this._idx.get(obj.name);\n    const knotIdx = this._idx.get(knot);\n    if (idx === undefined) {\n      throw new Error('Missing type index for ' + obj);\n    }\n    if (knotIdx === undefined) {\n      throw new Error('Missing type index for ' + knot);\n    }\n    this._typs[idx] = this._typs[knotIdx];\n\n    // Delete the type.\n    this._typs.splice(knotIdx, 1);\n    this._idx.delete(knot);\n  }\n\n  public encode() {\n    const len = lebEncode(this._typs.length);\n    const buf = concat(...this._typs);\n    return concat(len, buf);\n  }\n\n  public indexOf(typeName: string) {\n    if (!this._idx.has(typeName)) {\n      throw new Error('Missing type index for ' + typeName);\n    }\n    return slebEncode(this._idx.get(typeName) || 0);\n  }\n}\n\nexport abstract class Visitor<D, R> {\n  public visitType<T>(t: Type<T>, data: D): R {\n    throw new Error('Not implemented');\n  }\n  public visitPrimitive<T>(t: PrimitiveType<T>, data: D): R {\n    return this.visitType(t, data);\n  }\n  public visitEmpty(t: EmptyClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitBool(t: BoolClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitNull(t: NullClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitReserved(t: ReservedClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitText(t: TextClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitNumber<T>(t: PrimitiveType<T>, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitInt(t: IntClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitNat(t: NatClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitFloat(t: FloatClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n  public visitFixedInt(t: FixedIntClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitFixedNat(t: FixedNatClass, data: D): R {\n    return this.visitNumber(t, data);\n  }\n  public visitPrincipal(t: PrincipalClass, data: D): R {\n    return this.visitPrimitive(t, data);\n  }\n\n  public visitConstruct<T>(t: ConstructType<T>, data: D): R {\n    return this.visitType(t, data);\n  }\n  public visitVec<T>(t: VecClass<T>, ty: Type<T>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitOpt<T>(t: OptClass<T>, ty: Type<T>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitRecord(t: RecordClass, fields: Array<[string, Type]>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitTuple<T extends any[]>(t: TupleClass<T>, components: Type[], data: D): R {\n    const fields: Array<[string, Type]> = components.map((ty, i) => [`_${i}_`, ty]);\n    return this.visitRecord(t, fields, data);\n  }\n  public visitVariant(t: VariantClass, fields: Array<[string, Type]>, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitRec<T>(t: RecClass<T>, ty: ConstructType<T>, data: D): R {\n    return this.visitConstruct(ty, data);\n  }\n  public visitFunc(t: FuncClass, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n  public visitService(t: ServiceClass, data: D): R {\n    return this.visitConstruct(t, data);\n  }\n}\n\n/**\n * Represents an IDL type.\n */\nexport abstract class Type<T = any> {\n  public abstract readonly name: string;\n  public abstract accept<D, R>(v: Visitor<D, R>, d: D): R;\n\n  /* Display type name */\n  public display(): string {\n    return this.name;\n  }\n\n  public valueToString(x: T): string {\n    return toReadableString(x);\n  }\n\n  /* Implement `T` in the IDL spec, only needed for non-primitive types */\n  public buildTypeTable(typeTable: TypeTable): void {\n    if (!typeTable.has(this)) {\n      this._buildTypeTableImpl(typeTable);\n    }\n  }\n\n  /**\n   * Assert that JavaScript's `x` is the proper type represented by this\n   * Type.\n   */\n  public abstract covariant(x: any): x is T;\n\n  /**\n   * Encode the value. This needs to be public because it is used by\n   * encodeValue() from different types.\n   * @internal\n   */\n  public abstract encodeValue(x: T): ArrayBuffer;\n\n  /**\n   * Implement `I` in the IDL spec.\n   * Encode this type for the type table.\n   */\n  public abstract encodeType(typeTable: TypeTable): ArrayBuffer;\n\n  public abstract checkType(t: Type): Type;\n  public abstract decodeValue(x: Pipe, t: Type): T;\n\n  protected abstract _buildTypeTableImpl(typeTable: TypeTable): void;\n}\n\nexport abstract class PrimitiveType<T = any> extends Type<T> {\n  public checkType(t: Type): Type {\n    if (this.name !== t.name) {\n      throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n    }\n    return t;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public _buildTypeTableImpl(typeTable: TypeTable): void {\n    // No type table encoding for Primitive types.\n    return;\n  }\n}\n\nexport abstract class ConstructType<T = any> extends Type<T> {\n  public checkType(t: Type): ConstructType<T> {\n    if (t instanceof RecClass) {\n      const ty = t.getType();\n      if (typeof ty === 'undefined') {\n        throw new Error('type mismatch with uninitialized type');\n      }\n      return ty;\n    }\n    throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n  }\n  public encodeType(typeTable: TypeTable) {\n    return typeTable.indexOf(this.name);\n  }\n}\n\n/**\n * Represents an IDL Empty, a type which has no inhabitants.\n * Since no values exist for this type, it cannot be serialised or deserialised.\n * Result types like `Result<Text, Empty>` should always succeed.\n */\nexport class EmptyClass extends PrimitiveType<never> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitEmpty(this, d);\n  }\n\n  public covariant(x: any): x is never {\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(): never {\n    throw new Error('Empty cannot appear as a function argument');\n  }\n\n  public valueToString(): never {\n    throw new Error('Empty cannot appear as a value');\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Empty);\n  }\n\n  public decodeValue(): never {\n    throw new Error('Empty cannot appear as an output');\n  }\n\n  get name() {\n    return 'empty';\n  }\n}\n\n/**\n * Represents an IDL Unknown, a placeholder type for deserialization only.\n * When decoding a value as Unknown, all fields will be retained but the names are only available in\n * hashed form.\n * A deserialized unknown will offer it's actual type by calling the `type()` function.\n * Unknown cannot be serialized and attempting to do so will throw an error.\n */\nexport class UnknownClass extends Type {\n  public checkType(t: Type): Type {\n    throw new Error('Method not implemented for unknown.');\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    throw v.visitType(this, d);\n  }\n\n  public covariant(x: any): x is any {\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(): never {\n    throw new Error('Unknown cannot appear as a function argument');\n  }\n\n  public valueToString(): never {\n    throw new Error('Unknown cannot appear as a value');\n  }\n\n  public encodeType(): never {\n    throw new Error('Unknown cannot be serialized');\n  }\n\n  public decodeValue(b: Pipe, t: Type): any {\n    let decodedValue = t.decodeValue(b, t);\n\n    if (Object(decodedValue) !== decodedValue) {\n      // decodedValue is primitive. Box it, otherwise we cannot add the type() function.\n      // The type() function is important for primitives because otherwise we cannot tell apart the\n      // different number types.\n      decodedValue = Object(decodedValue);\n    }\n\n    let typeFunc;\n    if (t instanceof RecClass) {\n      typeFunc = () => t.getType();\n    } else {\n      typeFunc = () => t;\n    }\n    // Do not use 'decodedValue.type = typeFunc' because this would lead to an enumerable property\n    // 'type' which means it would be serialized if the value would be candid encoded again.\n    // This in turn leads to problems if the decoded value is a variant because these values are\n    // only allowed to have a single property.\n    Object.defineProperty(decodedValue, 'type', {\n      value: typeFunc,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n    return decodedValue;\n  }\n\n  protected _buildTypeTableImpl(): void {\n    throw new Error('Unknown cannot be serialized');\n  }\n\n  get name() {\n    return 'Unknown';\n  }\n}\n\n/**\n * Represents an IDL Bool\n */\nexport class BoolClass extends PrimitiveType<boolean> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitBool(this, d);\n  }\n\n  public covariant(x: any): x is boolean {\n    if (typeof x === 'boolean') return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: boolean): ArrayBuffer {\n    return new Uint8Array([x ? 1 : 0]);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Bool);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    switch (safeReadUint8(b)) {\n      case 0:\n        return false;\n      case 1:\n        return true;\n      default:\n        throw new Error('Boolean value out of range');\n    }\n  }\n\n  get name() {\n    return 'bool';\n  }\n}\n\n/**\n * Represents an IDL Null\n */\nexport class NullClass extends PrimitiveType<null> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitNull(this, d);\n  }\n\n  public covariant(x: any): x is null {\n    if (x === null) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue() {\n    return new ArrayBuffer(0);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Null);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    return null;\n  }\n\n  get name() {\n    return 'null';\n  }\n}\n\n/**\n * Represents an IDL Reserved\n */\nexport class ReservedClass extends PrimitiveType<any> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitReserved(this, d);\n  }\n\n  public covariant(x: any): x is any {\n    return true;\n  }\n\n  public encodeValue() {\n    return new ArrayBuffer(0);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Reserved);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    if (t.name !== this.name) {\n      t.decodeValue(b, t);\n    }\n    return null;\n  }\n\n  get name() {\n    return 'reserved';\n  }\n}\n\n/**\n * Represents an IDL Text\n */\nexport class TextClass extends PrimitiveType<string> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitText(this, d);\n  }\n\n  public covariant(x: any): x is string {\n    if (typeof x === 'string') return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: string) {\n    const buf = new TextEncoder().encode(x);\n    const len = lebEncode(buf.byteLength);\n    return concat(len, buf);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Text);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const len = lebDecode(b);\n    const buf = safeRead(b, Number(len));\n    const decoder = new TextDecoder('utf8', { fatal: true });\n    return decoder.decode(buf);\n  }\n\n  get name() {\n    return 'text';\n  }\n\n  public valueToString(x: string) {\n    return '\"' + x + '\"';\n  }\n}\n\n/**\n * Represents an IDL Int\n */\nexport class IntClass extends PrimitiveType<bigint> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitInt(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    // We allow encoding of JavaScript plain numbers.\n    // But we will always decode to bigint.\n    if (typeof x === 'bigint' || Number.isInteger(x)) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return slebEncode(x);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Int);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    return slebDecode(b);\n  }\n\n  get name() {\n    return 'int';\n  }\n\n  public valueToString(x: bigint) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL Nat\n */\nexport class NatClass extends PrimitiveType<bigint> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitNat(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    // We allow encoding of JavaScript plain numbers.\n    // But we will always decode to bigint.\n    if ((typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0)) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return lebEncode(x);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Nat);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    return lebDecode(b);\n  }\n\n  get name() {\n    return 'nat';\n  }\n\n  public valueToString(x: bigint) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL Float\n */\nexport class FloatClass extends PrimitiveType<number> {\n  constructor(private _bits: number) {\n    super();\n    if (_bits !== 32 && _bits !== 64) {\n      throw new Error('not a valid float type');\n    }\n  }\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFloat(this, d);\n  }\n\n  public covariant(x: any): x is number {\n    if (typeof x === 'number' || x instanceof Number) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: number) {\n    const buf = new ArrayBuffer(this._bits / 8);\n    const view = new DataView(buf);\n    if (this._bits === 32) {\n      view.setFloat32(0, x, true);\n    } else {\n      view.setFloat64(0, x, true);\n    }\n    return buf;\n  }\n\n  public encodeType() {\n    const opcode = this._bits === 32 ? IDLTypeIds.Float32 : IDLTypeIds.Float64;\n    return slebEncode(opcode);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const bytes = safeRead(b, this._bits / 8);\n    const view = new DataView(bytes);\n    if (this._bits === 32) {\n      return view.getFloat32(0, true);\n    } else {\n      return view.getFloat64(0, true);\n    }\n  }\n\n  get name() {\n    return 'float' + this._bits;\n  }\n\n  public valueToString(x: number) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL fixed-width Int(n)\n */\nexport class FixedIntClass extends PrimitiveType<bigint | number> {\n  constructor(public readonly _bits: number) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFixedInt(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    const min = iexp2(this._bits - 1) * BigInt(-1);\n    const max = iexp2(this._bits - 1) - BigInt(1);\n    let ok = false;\n    if (typeof x === 'bigint') {\n      ok = x >= min && x <= max;\n    } else if (Number.isInteger(x)) {\n      const v = BigInt(x);\n      ok = v >= min && v <= max;\n    } else {\n      ok = false;\n    }\n\n    if (ok) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return writeIntLE(x, this._bits / 8);\n  }\n\n  public encodeType() {\n    const offset = Math.log2(this._bits) - 3;\n    return slebEncode(-9 - offset);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const num = readIntLE(b, this._bits / 8);\n    if (this._bits <= 32) {\n      return Number(num);\n    } else {\n      return num;\n    }\n  }\n\n  get name() {\n    return `int${this._bits}`;\n  }\n\n  public valueToString(x: bigint | number) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL fixed-width Nat(n)\n */\nexport class FixedNatClass extends PrimitiveType<bigint | number> {\n  constructor(public readonly _bits: number) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFixedNat(this, d);\n  }\n\n  public covariant(x: any): x is bigint {\n    const max = iexp2(this._bits);\n    let ok = false;\n    if (typeof x === 'bigint' && x >= BigInt(0)) {\n      ok = x < max;\n    } else if (Number.isInteger(x) && x >= 0) {\n      const v = BigInt(x);\n      ok = v < max;\n    } else {\n      ok = false;\n    }\n    if (ok) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: bigint | number) {\n    return writeUIntLE(x, this._bits / 8);\n  }\n\n  public encodeType() {\n    const offset = Math.log2(this._bits) - 3;\n    return slebEncode(-5 - offset);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    this.checkType(t);\n    const num = readUIntLE(b, this._bits / 8);\n    if (this._bits <= 32) {\n      return Number(num);\n    } else {\n      return num;\n    }\n  }\n\n  get name() {\n    return `nat${this._bits}`;\n  }\n\n  public valueToString(x: bigint | number) {\n    return x.toString();\n  }\n}\n\n/**\n * Represents an IDL Array\n *\n * Arrays of fixed-sized nat/int type (e.g. nat8), are encoded from and decoded to TypedArrays (e.g. Uint8Array).\n * Arrays of float or other non-primitive types are encoded/decoded as untyped array in Javascript.\n * @param {Type} t\n */\nexport class VecClass<T> extends ConstructType<T[]> {\n  // If true, this vector is really a blob and we can just use memcpy.\n  //\n  // NOTE:\n  // With support of encoding/dencoding of TypedArrays, this optimization is\n  // only used when plain array of bytes are passed as encoding input in order\n  // to be backward compatible.\n  private _blobOptimization = false;\n\n  constructor(protected _type: Type<T>) {\n    super();\n    if (_type instanceof FixedNatClass && _type._bits === 8) {\n      this._blobOptimization = true;\n    }\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitVec(this, this._type, d);\n  }\n\n  public covariant(x: any): x is T[] {\n    // Special case for ArrayBuffer\n    const bits =\n      this._type instanceof FixedNatClass\n        ? this._type._bits\n        : this._type instanceof FixedIntClass\n        ? this._type._bits\n        : 0;\n\n    if (\n      (ArrayBuffer.isView(x) && bits == (x as any).BYTES_PER_ELEMENT * 8) ||\n      (Array.isArray(x) &&\n        x.every((v, idx) => {\n          try {\n            return this._type.covariant(v);\n          } catch (e: any) {\n            throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${idx} -> ${e.message}`);\n          }\n        }))\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: T[]) {\n    const len = lebEncode(x.length);\n    if (this._blobOptimization) {\n      return concat(len, new Uint8Array(x as unknown as number[]));\n    }\n    if (ArrayBuffer.isView(x)) {\n      return concat(len, new Uint8Array(x.buffer));\n    }\n    const buf = new Pipe(new ArrayBuffer(len.byteLength + x.length), 0);\n    buf.write(len);\n    for (const d of x) {\n      const encoded = this._type.encodeValue(d);\n      buf.write(new Uint8Array(encoded));\n    }\n    return buf.buffer;\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    this._type.buildTypeTable(typeTable);\n\n    const opCode = slebEncode(IDLTypeIds.Vector);\n    const buffer = this._type.encodeType(typeTable);\n    typeTable.add(this, concat(opCode, buffer));\n  }\n\n  public decodeValue(b: Pipe, t: Type): T[] {\n    const vec = this.checkType(t);\n    if (!(vec instanceof VecClass)) {\n      throw new Error('Not a vector type');\n    }\n    const len = Number(lebDecode(b));\n\n    if (this._type instanceof FixedNatClass) {\n      if (this._type._bits == 8) {\n        return new Uint8Array(b.read(len)) as unknown as T[];\n      }\n      if (this._type._bits == 16) {\n        return new Uint16Array(b.read(len * 2)) as unknown as T[];\n      }\n      if (this._type._bits == 32) {\n        return new Uint32Array(b.read(len * 4)) as unknown as T[];\n      }\n      if (this._type._bits == 64) {\n        return new BigUint64Array(b.read(len * 8)) as unknown as T[];\n      }\n    }\n\n    if (this._type instanceof FixedIntClass) {\n      if (this._type._bits == 8) {\n        return new Int8Array(b.read(len)) as unknown as T[];\n      }\n      if (this._type._bits == 16) {\n        return new Int16Array(b.read(len * 2)) as unknown as T[];\n      }\n      if (this._type._bits == 32) {\n        return new Int32Array(b.read(len * 4)) as unknown as T[];\n      }\n      if (this._type._bits == 64) {\n        return new BigInt64Array(b.read(len * 8)) as unknown as T[];\n      }\n    }\n\n    const rets: T[] = [];\n    for (let i = 0; i < len; i++) {\n      rets.push(this._type.decodeValue(b, vec._type));\n    }\n    return rets;\n  }\n\n  get name() {\n    return `vec ${this._type.name}`;\n  }\n\n  public display() {\n    return `vec ${this._type.display()}`;\n  }\n\n  public valueToString(x: T[]) {\n    const elements = x.map(e => this._type.valueToString(e));\n    return 'vec {' + elements.join('; ') + '}';\n  }\n}\n\n/**\n * Represents an IDL Option\n * @param {Type} t\n */\nexport class OptClass<T> extends ConstructType<[T] | []> {\n  constructor(protected _type: Type<T>) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitOpt(this, this._type, d);\n  }\n\n  public covariant(x: any): x is [T] | [] {\n    try {\n      if (Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0]))))\n        return true;\n    } catch (e: any) {\n      throw new Error(\n        `Invalid ${this.display()} argument: ${toReadableString(x)} \\n\\n-> ${e.message}`,\n      );\n    }\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: [T] | []) {\n    if (x.length === 0) {\n      return new Uint8Array([0]);\n    } else {\n      return concat(new Uint8Array([1]), this._type.encodeValue(x[0]));\n    }\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    this._type.buildTypeTable(typeTable);\n\n    const opCode = slebEncode(IDLTypeIds.Opt);\n    const buffer = this._type.encodeType(typeTable);\n    typeTable.add(this, concat(opCode, buffer));\n  }\n\n  public decodeValue(b: Pipe, t: Type): [T] | [] {\n    const opt = this.checkType(t);\n    if (!(opt instanceof OptClass)) {\n      throw new Error('Not an option type');\n    }\n    switch (safeReadUint8(b)) {\n      case 0:\n        return [];\n      case 1:\n        return [this._type.decodeValue(b, opt._type)];\n      default:\n        throw new Error('Not an option value');\n    }\n  }\n\n  get name() {\n    return `opt ${this._type.name}`;\n  }\n\n  public display() {\n    return `opt ${this._type.display()}`;\n  }\n\n  public valueToString(x: [T] | []) {\n    if (x.length === 0) {\n      return 'null';\n    } else {\n      return `opt ${this._type.valueToString(x[0])}`;\n    }\n  }\n}\n\n/**\n * Represents an IDL Record\n * @param {object} [fields] - mapping of function name to Type\n */\nexport class RecordClass extends ConstructType<Record<string, any>> {\n  protected readonly _fields: Array<[string, Type]>;\n\n  constructor(fields: Record<string, Type> = {}) {\n    super();\n    this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitRecord(this, this._fields, d);\n  }\n\n  public tryAsTuple(): Type[] | null {\n    const res: Type[] = [];\n    for (let i = 0; i < this._fields.length; i++) {\n      const [key, type] = this._fields[i];\n      if (key !== `_${i}_`) {\n        return null;\n      }\n      res.push(type);\n    }\n    return res;\n  }\n\n  public covariant(x: any): x is Record<string, any> {\n    if (\n      typeof x === 'object' &&\n      this._fields.every(([k, t]) => {\n        // eslint-disable-next-line\n        if (!x.hasOwnProperty(k)) {\n          throw new Error(`Record is missing key \"${k}\".`);\n        }\n        try {\n          return t.covariant(x[k]);\n        } catch (e: any) {\n          throw new Error(`Invalid ${this.display()} argument: \\n\\nfield ${k} -> ${e.message}`);\n        }\n      })\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: Record<string, any>) {\n    const values = this._fields.map(([key]) => x[key]);\n    const bufs = zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));\n    return concat(...bufs);\n  }\n\n  public _buildTypeTableImpl(T: TypeTable) {\n    this._fields.forEach(([_, value]) => value.buildTypeTable(T));\n    const opCode = slebEncode(IDLTypeIds.Record);\n    const len = lebEncode(this._fields.length);\n    const fields = this._fields.map(([key, value]) =>\n      concat(lebEncode(idlLabelToId(key)), value.encodeType(T)),\n    );\n\n    T.add(this, concat(opCode, len, concat(...fields)));\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    const record = this.checkType(t);\n    if (!(record instanceof RecordClass)) {\n      throw new Error('Not a record type');\n    }\n    const x: Record<string, any> = {};\n\n    let expectedRecordIdx = 0;\n    let actualRecordIdx = 0;\n    while (actualRecordIdx < record._fields.length) {\n      const [hash, type] = record._fields[actualRecordIdx];\n\n      if (expectedRecordIdx >= this._fields.length) {\n        // skip unexpected left over fields present on the wire\n        type.decodeValue(b, type);\n        actualRecordIdx++;\n        continue;\n      }\n\n      const [expectKey, expectType] = this._fields[expectedRecordIdx];\n      const expectedId = idlLabelToId(this._fields[expectedRecordIdx][0]);\n      const actualId = idlLabelToId(hash);\n      if (expectedId === actualId) {\n        // the current field on the wire matches the expected field\n        x[expectKey] = expectType.decodeValue(b, type);\n        expectedRecordIdx++;\n        actualRecordIdx++;\n      } else if (actualId > expectedId) {\n        // The expected field does not exist on the wire\n        if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n          x[expectKey] = [];\n          expectedRecordIdx++;\n        } else {\n          throw new Error('Cannot find required field ' + expectKey);\n        }\n      } else {\n        // The field on the wire does not exist in the output type, so we can skip it\n        type.decodeValue(b, type);\n        actualRecordIdx++;\n      }\n    }\n\n    // initialize left over expected optional fields\n    for (const [expectKey, expectType] of this._fields.slice(expectedRecordIdx)) {\n      if (expectType instanceof OptClass || expectType instanceof ReservedClass) {\n        // TODO this assumes null value in opt is represented as []\n        x[expectKey] = [];\n      } else {\n        throw new Error('Cannot find required field ' + expectKey);\n      }\n    }\n    return x;\n  }\n\n  get name() {\n    const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n    return `record {${fields.join('; ')}}`;\n  }\n\n  public display() {\n    const fields = this._fields.map(([key, value]) => key + ':' + value.display());\n    return `record {${fields.join('; ')}}`;\n  }\n\n  public valueToString(x: Record<string, any>) {\n    const values = this._fields.map(([key]) => x[key]);\n    const fields = zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));\n    return `record {${fields.join('; ')}}`;\n  }\n}\n\n/**\n * Represents Tuple, a syntactic sugar for Record.\n * @param {Type} components\n */\nexport class TupleClass<T extends any[]> extends RecordClass {\n  protected readonly _components: Type[];\n\n  constructor(_components: Type[]) {\n    const x: Record<string, any> = {};\n    _components.forEach((e, i) => (x['_' + i + '_'] = e));\n    super(x);\n    this._components = _components;\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitTuple(this, this._components, d);\n  }\n\n  public covariant(x: any): x is T {\n    // `>=` because tuples can be covariant when encoded.\n\n    if (\n      Array.isArray(x) &&\n      x.length >= this._fields.length &&\n      this._components.every((t, i) => {\n        try {\n          return t.covariant(x[i]);\n        } catch (e: any) {\n          throw new Error(`Invalid ${this.display()} argument: \\n\\nindex ${i} -> ${e.message}`);\n        }\n      })\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: any[]) {\n    const bufs = zipWith(this._components, x, (c, d) => c.encodeValue(d));\n    return concat(...bufs);\n  }\n\n  public decodeValue(b: Pipe, t: Type): T {\n    const tuple = this.checkType(t);\n    if (!(tuple instanceof TupleClass)) {\n      throw new Error('not a tuple type');\n    }\n    if (tuple._components.length < this._components.length) {\n      throw new Error('tuple mismatch');\n    }\n    const res = [];\n    for (const [i, wireType] of tuple._components.entries()) {\n      if (i >= this._components.length) {\n        // skip value\n        wireType.decodeValue(b, wireType);\n      } else {\n        res.push(this._components[i].decodeValue(b, wireType));\n      }\n    }\n    return res as T;\n  }\n\n  public display() {\n    const fields = this._components.map(value => value.display());\n    return `record {${fields.join('; ')}}`;\n  }\n\n  public valueToString(values: any[]) {\n    const fields = zipWith(this._components, values, (c, d) => c.valueToString(d));\n    return `record {${fields.join('; ')}}`;\n  }\n}\n\n/**\n * Represents an IDL Variant\n * @param {object} [fields] - mapping of function name to Type\n */\nexport class VariantClass extends ConstructType<Record<string, any>> {\n  private readonly _fields: Array<[string, Type]>;\n\n  constructor(fields: Record<string, Type> = {}) {\n    super();\n    this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitVariant(this, this._fields, d);\n  }\n\n  public covariant(x: any): x is Record<string, any> {\n    if (\n      typeof x === 'object' &&\n      Object.entries(x).length === 1 &&\n      this._fields.every(([k, v]) => {\n        try {\n          // eslint-disable-next-line\n          return !x.hasOwnProperty(k) || v.covariant(x[k]);\n        } catch (e: any) {\n          throw new Error(`Invalid ${this.display()} argument: \\n\\nvariant ${k} -> ${e.message}`);\n        }\n      })\n    )\n      return true;\n\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: Record<string, any>) {\n    for (let i = 0; i < this._fields.length; i++) {\n      const [name, type] = this._fields[i];\n      // eslint-disable-next-line\n      if (x.hasOwnProperty(name)) {\n        const idx = lebEncode(i);\n        const buf = type.encodeValue(x[name]);\n\n        return concat(idx, buf);\n      }\n    }\n    throw Error('Variant has no data: ' + x);\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    this._fields.forEach(([, type]) => {\n      type.buildTypeTable(typeTable);\n    });\n    const opCode = slebEncode(IDLTypeIds.Variant);\n    const len = lebEncode(this._fields.length);\n    const fields = this._fields.map(([key, value]) =>\n      concat(lebEncode(idlLabelToId(key)), value.encodeType(typeTable)),\n    );\n    typeTable.add(this, concat(opCode, len, ...fields));\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    const variant = this.checkType(t);\n    if (!(variant instanceof VariantClass)) {\n      throw new Error('Not a variant type');\n    }\n    const idx = Number(lebDecode(b));\n    if (idx >= variant._fields.length) {\n      throw Error('Invalid variant index: ' + idx);\n    }\n    const [wireHash, wireType] = variant._fields[idx];\n    for (const [key, expectType] of this._fields) {\n      if (idlLabelToId(wireHash) === idlLabelToId(key)) {\n        const value = expectType.decodeValue(b, wireType);\n        return { [key]: value };\n      }\n    }\n    throw new Error('Cannot find field hash ' + wireHash);\n  }\n\n  get name() {\n    const fields = this._fields.map(([key, type]) => key + ':' + type.name);\n    return `variant {${fields.join('; ')}}`;\n  }\n\n  public display() {\n    const fields = this._fields.map(\n      ([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`),\n    );\n    return `variant {${fields.join('; ')}}`;\n  }\n\n  public valueToString(x: Record<string, any>) {\n    for (const [name, type] of this._fields) {\n      // eslint-disable-next-line\n      if (x.hasOwnProperty(name)) {\n        const value = type.valueToString(x[name]);\n        if (value === 'null') {\n          return `variant {${name}}`;\n        } else {\n          return `variant {${name}=${value}}`;\n        }\n      }\n    }\n    throw new Error('Variant has no data: ' + x);\n  }\n}\n\n/**\n * Represents a reference to an IDL type, used for defining recursive data\n * types.\n */\nexport class RecClass<T = any> extends ConstructType<T> {\n  private static _counter = 0;\n  private _id = RecClass._counter++;\n  private _type: ConstructType<T> | undefined = undefined;\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return v.visitRec(this, this._type, d);\n  }\n\n  public fill(t: ConstructType<T>) {\n    this._type = t;\n  }\n\n  public getType() {\n    return this._type;\n  }\n\n  public covariant(x: any): x is T {\n    if (this._type ? this._type.covariant(x) : false) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: T) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return this._type.encodeValue(x);\n  }\n\n  public _buildTypeTableImpl(typeTable: TypeTable) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    typeTable.add(this, new Uint8Array([]));\n    this._type.buildTypeTable(typeTable);\n    typeTable.merge(this, this._type.name);\n  }\n\n  public decodeValue(b: Pipe, t: Type) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return this._type.decodeValue(b, t);\n  }\n\n  get name() {\n    return `rec_${this._id}`;\n  }\n\n  public display() {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return `μ${this.name}.${this._type.name}`;\n  }\n\n  public valueToString(x: T) {\n    if (!this._type) {\n      throw Error('Recursive type uninitialized.');\n    }\n    return this._type.valueToString(x);\n  }\n}\n\nfunction decodePrincipalId(b: Pipe): PrincipalId {\n  const x = safeReadUint8(b);\n  if (x !== 1) {\n    throw new Error('Cannot decode principal');\n  }\n\n  const len = Number(lebDecode(b));\n  return PrincipalId.fromUint8Array(new Uint8Array(safeRead(b, len)));\n}\n\n/**\n * Represents an IDL principal reference\n */\nexport class PrincipalClass extends PrimitiveType<PrincipalId> {\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitPrincipal(this, d);\n  }\n\n  public covariant(x: any): x is PrincipalId {\n    if (x && x._isPrincipal) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: PrincipalId): ArrayBuffer {\n    const buf = x.toUint8Array();\n    const len = lebEncode(buf.byteLength);\n    return concat(new Uint8Array([1]), len, buf);\n  }\n\n  public encodeType() {\n    return slebEncode(IDLTypeIds.Principal);\n  }\n\n  public decodeValue(b: Pipe, t: Type): PrincipalId {\n    this.checkType(t);\n    return decodePrincipalId(b);\n  }\n\n  get name() {\n    return 'principal';\n  }\n  public valueToString(x: PrincipalId) {\n    return `${this.name} \"${x.toText()}\"`;\n  }\n}\n\n/**\n * Represents an IDL function reference.\n * @param argTypes Argument types.\n * @param retTypes Return types.\n * @param annotations Function annotations.\n */\nexport class FuncClass extends ConstructType<[PrincipalId, string]> {\n  public static argsToString(types: Type[], v: any[]) {\n    if (types.length !== v.length) {\n      throw new Error('arity mismatch');\n    }\n    return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';\n  }\n\n  constructor(public argTypes: Type[], public retTypes: Type[], public annotations: string[] = []) {\n    super();\n  }\n\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitFunc(this, d);\n  }\n  public covariant(x: any): x is [PrincipalId, string] {\n    if (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string')\n      return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue([principal, methodName]: [PrincipalId, string]) {\n    const buf = principal.toUint8Array();\n    const len = lebEncode(buf.byteLength);\n    const canister = concat(new Uint8Array([1]), len, buf);\n\n    const method = new TextEncoder().encode(methodName);\n    const methodLen = lebEncode(method.byteLength);\n    return concat(new Uint8Array([1]), canister, methodLen, method);\n  }\n\n  public _buildTypeTableImpl(T: TypeTable) {\n    this.argTypes.forEach(arg => arg.buildTypeTable(T));\n    this.retTypes.forEach(arg => arg.buildTypeTable(T));\n\n    const opCode = slebEncode(IDLTypeIds.Func);\n    const argLen = lebEncode(this.argTypes.length);\n    const args = concat(...this.argTypes.map(arg => arg.encodeType(T)));\n    const retLen = lebEncode(this.retTypes.length);\n    const rets = concat(...this.retTypes.map(arg => arg.encodeType(T)));\n    const annLen = lebEncode(this.annotations.length);\n    const anns = concat(...this.annotations.map(a => this.encodeAnnotation(a)));\n\n    T.add(this, concat(opCode, argLen, args, retLen, rets, annLen, anns));\n  }\n\n  public decodeValue(b: Pipe): [PrincipalId, string] {\n    const x = safeReadUint8(b);\n    if (x !== 1) {\n      throw new Error('Cannot decode function reference');\n    }\n    const canister = decodePrincipalId(b);\n\n    const mLen = Number(lebDecode(b));\n    const buf = safeRead(b, mLen);\n    const decoder = new TextDecoder('utf8', { fatal: true });\n    const method = decoder.decode(buf);\n\n    return [canister, method];\n  }\n\n  get name() {\n    const args = this.argTypes.map(arg => arg.name).join(', ');\n    const rets = this.retTypes.map(arg => arg.name).join(', ');\n    const annon = ' ' + this.annotations.join(' ');\n    return `(${args}) -> (${rets})${annon}`;\n  }\n\n  public valueToString([principal, str]: [PrincipalId, string]) {\n    return `func \"${principal.toText()}\".${str}`;\n  }\n\n  public display(): string {\n    const args = this.argTypes.map(arg => arg.display()).join(', ');\n    const rets = this.retTypes.map(arg => arg.display()).join(', ');\n    const annon = ' ' + this.annotations.join(' ');\n    return `(${args}) → (${rets})${annon}`;\n  }\n\n  private encodeAnnotation(ann: string): ArrayBuffer {\n    if (ann === 'query') {\n      return new Uint8Array([1]);\n    } else if (ann === 'oneway') {\n      return new Uint8Array([2]);\n    } else if (ann === 'composite_query') {\n      return new Uint8Array([3]);\n    } else {\n      throw new Error('Illegal function annotation');\n    }\n  }\n}\n\nexport class ServiceClass extends ConstructType<PrincipalId> {\n  public readonly _fields: Array<[string, FuncClass]>;\n  constructor(fields: Record<string, FuncClass>) {\n    super();\n    this._fields = Object.entries(fields).sort((a, b) => {\n      if (a[0] < b[0]) {\n        return -1;\n      }\n      if (a[0] > b[0]) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  public accept<D, R>(v: Visitor<D, R>, d: D): R {\n    return v.visitService(this, d);\n  }\n  public covariant(x: any): x is PrincipalId {\n    if (x && x._isPrincipal) return true;\n    throw new Error(`Invalid ${this.display()} argument: ${toReadableString(x)}`);\n  }\n\n  public encodeValue(x: PrincipalId) {\n    const buf = x.toUint8Array();\n    const len = lebEncode(buf.length);\n    return concat(new Uint8Array([1]), len, buf);\n  }\n\n  public _buildTypeTableImpl(T: TypeTable) {\n    this._fields.forEach(([_, func]) => func.buildTypeTable(T));\n    const opCode = slebEncode(IDLTypeIds.Service);\n    const len = lebEncode(this._fields.length);\n    const meths = this._fields.map(([label, func]) => {\n      const labelBuf = new TextEncoder().encode(label);\n      const labelLen = lebEncode(labelBuf.length);\n      return concat(labelLen, labelBuf, func.encodeType(T));\n    });\n\n    T.add(this, concat(opCode, len, ...meths));\n  }\n\n  public decodeValue(b: Pipe): PrincipalId {\n    return decodePrincipalId(b);\n  }\n  get name() {\n    const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n    return `service {${fields.join('; ')}}`;\n  }\n\n  public valueToString(x: PrincipalId) {\n    return `service \"${x.toText()}\"`;\n  }\n}\n\n/**\n * Takes an unknown value and returns a string representation of it.\n * @param x - unknown value\n * @returns {string} string representation of the value\n */\nfunction toReadableString(x: unknown): string {\n  const str = JSON.stringify(x, (_key, value) =>\n    typeof value === 'bigint' ? `BigInt(${value})` : value,\n  );\n\n  return str && str.length > toReadableString_max\n    ? str.substring(0, toReadableString_max - 3) + '...'\n    : str;\n}\n\n/**\n * Encode a array of values\n * @param argTypes - array of Types\n * @param args - array of values\n * @returns {ArrayBuffer} serialised value\n */\nexport function encode(argTypes: Array<Type<any>>, args: any[]): ArrayBuffer {\n  if (args.length < argTypes.length) {\n    throw Error('Wrong number of message arguments');\n  }\n\n  const typeTable = new TypeTable();\n  argTypes.forEach(t => t.buildTypeTable(typeTable));\n\n  const magic = new TextEncoder().encode(magicNumber);\n  const table = typeTable.encode();\n  const len = lebEncode(args.length);\n  const typs = concat(...argTypes.map(t => t.encodeType(typeTable)));\n  const vals = concat(\n    ...zipWith(argTypes, args, (t, x) => {\n      try {\n        t.covariant(x);\n      } catch (e: any) {\n        const err = new Error(e.message + '\\n\\n');\n        throw err;\n      }\n\n      return t.encodeValue(x);\n    }),\n  );\n\n  return concat(magic, table, len, typs, vals);\n}\n\n/**\n * Decode a binary value\n * @param retTypes - Types expected in the buffer.\n * @param bytes - hex-encoded string, or buffer.\n * @returns Value deserialised to JS type\n */\nexport function decode(retTypes: Type[], bytes: ArrayBuffer): JsonValue[] {\n  const b = new Pipe(bytes);\n\n  if (bytes.byteLength < magicNumber.length) {\n    throw new Error('Message length smaller than magic number');\n  }\n  const magicBuffer = safeRead(b, magicNumber.length);\n  const magic = new TextDecoder().decode(magicBuffer);\n  if (magic !== magicNumber) {\n    throw new Error('Wrong magic number: ' + JSON.stringify(magic));\n  }\n\n  function readTypeTable(pipe: Pipe): [Array<[IDLTypeIds, any]>, number[]] {\n    const typeTable: Array<[IDLTypeIds, any]> = [];\n    const len = Number(lebDecode(pipe));\n\n    for (let i = 0; i < len; i++) {\n      const ty = Number(slebDecode(pipe));\n      switch (ty) {\n        case IDLTypeIds.Opt:\n        case IDLTypeIds.Vector: {\n          const t = Number(slebDecode(pipe));\n          typeTable.push([ty, t]);\n          break;\n        }\n        case IDLTypeIds.Record:\n        case IDLTypeIds.Variant: {\n          const fields = [];\n          let objectLength = Number(lebDecode(pipe));\n          let prevHash;\n          while (objectLength--) {\n            const hash = Number(lebDecode(pipe));\n            if (hash >= Math.pow(2, 32)) {\n              throw new Error('field id out of 32-bit range');\n            }\n            if (typeof prevHash === 'number' && prevHash >= hash) {\n              throw new Error('field id collision or not sorted');\n            }\n            prevHash = hash;\n            const t = Number(slebDecode(pipe));\n            fields.push([hash, t]);\n          }\n          typeTable.push([ty, fields]);\n          break;\n        }\n        case IDLTypeIds.Func: {\n          const args = [];\n          let argLength = Number(lebDecode(pipe));\n          while (argLength--) {\n            args.push(Number(slebDecode(pipe)));\n          }\n          const returnValues = [];\n          let returnValuesLength = Number(lebDecode(pipe));\n          while (returnValuesLength--) {\n            returnValues.push(Number(slebDecode(pipe)));\n          }\n          const annotations = [];\n          let annotationLength = Number(lebDecode(pipe));\n          while (annotationLength--) {\n            const annotation = Number(lebDecode(pipe));\n            switch (annotation) {\n              case 1: {\n                annotations.push('query');\n                break;\n              }\n              case 2: {\n                annotations.push('oneway');\n                break;\n              }\n              case 3: {\n                annotations.push('composite_query');\n                break;\n              }\n              default:\n                throw new Error('unknown annotation');\n            }\n          }\n          typeTable.push([ty, [args, returnValues, annotations]]);\n          break;\n        }\n        case IDLTypeIds.Service: {\n          let servLength = Number(lebDecode(pipe));\n          const methods = [];\n          while (servLength--) {\n            const nameLength = Number(lebDecode(pipe));\n            const funcName = new TextDecoder().decode(safeRead(pipe, nameLength));\n            const funcType = slebDecode(pipe);\n            methods.push([funcName, funcType]);\n          }\n          typeTable.push([ty, methods]);\n          break;\n        }\n        default:\n          throw new Error('Illegal op_code: ' + ty);\n      }\n    }\n\n    const rawList: number[] = [];\n    const length = Number(lebDecode(pipe));\n    for (let i = 0; i < length; i++) {\n      rawList.push(Number(slebDecode(pipe)));\n    }\n    return [typeTable, rawList];\n  }\n  const [rawTable, rawTypes] = readTypeTable(b);\n  if (rawTypes.length < retTypes.length) {\n    throw new Error('Wrong number of return values');\n  }\n\n  const table: RecClass[] = rawTable.map(_ => Rec());\n  function getType(t: number): Type {\n    if (t < -24) {\n      throw new Error('future value not supported');\n    }\n    if (t < 0) {\n      switch (t) {\n        case -1:\n          return Null;\n        case -2:\n          return Bool;\n        case -3:\n          return Nat;\n        case -4:\n          return Int;\n        case -5:\n          return Nat8;\n        case -6:\n          return Nat16;\n        case -7:\n          return Nat32;\n        case -8:\n          return Nat64;\n        case -9:\n          return Int8;\n        case -10:\n          return Int16;\n        case -11:\n          return Int32;\n        case -12:\n          return Int64;\n        case -13:\n          return Float32;\n        case -14:\n          return Float64;\n        case -15:\n          return Text;\n        case -16:\n          return Reserved;\n        case -17:\n          return Empty;\n        case -24:\n          return Principal;\n        default:\n          throw new Error('Illegal op_code: ' + t);\n      }\n    }\n    if (t >= rawTable.length) {\n      throw new Error('type index out of range');\n    }\n    return table[t];\n  }\n  function buildType(entry: [IDLTypeIds, any]): Type {\n    switch (entry[0]) {\n      case IDLTypeIds.Vector: {\n        const ty = getType(entry[1]);\n        return Vec(ty);\n      }\n      case IDLTypeIds.Opt: {\n        const ty = getType(entry[1]);\n        return Opt(ty);\n      }\n      case IDLTypeIds.Record: {\n        const fields: Record<string, Type> = {};\n        for (const [hash, ty] of entry[1]) {\n          const name = `_${hash}_`;\n          fields[name] = getType(ty);\n        }\n        const record = Record(fields);\n        const tuple = record.tryAsTuple();\n        if (Array.isArray(tuple)) {\n          return Tuple(...tuple);\n        } else {\n          return record;\n        }\n      }\n      case IDLTypeIds.Variant: {\n        const fields: Record<string, Type> = {};\n        for (const [hash, ty] of entry[1]) {\n          const name = `_${hash}_`;\n          fields[name] = getType(ty);\n        }\n        return Variant(fields);\n      }\n      case IDLTypeIds.Func: {\n        const [args, returnValues, annotations] = entry[1];\n        return Func(\n          args.map((t: number) => getType(t)),\n          returnValues.map((t: number) => getType(t)),\n          annotations,\n        );\n      }\n      case IDLTypeIds.Service: {\n        const rec: Record<string, FuncClass> = {};\n        const methods = entry[1] as [[string, number]];\n        for (const [name, typeRef] of methods) {\n          let type: Type | undefined = getType(typeRef);\n\n          if (type instanceof RecClass) {\n            // unpack reference type\n            type = type.getType();\n          }\n          if (!(type instanceof FuncClass)) {\n            throw new Error('Illegal service definition: services can only contain functions');\n          }\n          rec[name] = type;\n        }\n        return Service(rec);\n      }\n      default:\n        throw new Error('Illegal op_code: ' + entry[0]);\n    }\n  }\n\n  rawTable.forEach((entry, i) => {\n    // Process function type first, so that we can construct the correct service type\n    if (entry[0] === IDLTypeIds.Func) {\n      const t = buildType(entry);\n      table[i].fill(t);\n    }\n  });\n  rawTable.forEach((entry, i) => {\n    if (entry[0] !== IDLTypeIds.Func) {\n      const t = buildType(entry);\n      table[i].fill(t);\n    }\n  });\n\n  const types = rawTypes.map(t => getType(t));\n  const output = retTypes.map((t, i) => {\n    return t.decodeValue(b, types[i]);\n  });\n\n  // skip unused values\n  for (let ind = retTypes.length; ind < types.length; ind++) {\n    types[ind].decodeValue(b, types[ind]);\n  }\n\n  if (b.byteLength > 0) {\n    throw new Error('decode: Left-over bytes');\n  }\n\n  return output;\n}\n\n/**\n * An Interface Factory, normally provided by a Candid code generation.\n */\nexport type InterfaceFactory = (idl: {\n  IDL: {\n    Empty: EmptyClass;\n    Reserved: ReservedClass;\n    Unknown: UnknownClass;\n    Bool: BoolClass;\n    Null: NullClass;\n    Text: TextClass;\n    Int: IntClass;\n    Nat: NatClass;\n\n    Float32: FloatClass;\n    Float64: FloatClass;\n\n    Int8: FixedIntClass;\n    Int16: FixedIntClass;\n    Int32: FixedIntClass;\n    Int64: FixedIntClass;\n\n    Nat8: FixedNatClass;\n    Nat16: FixedNatClass;\n    Nat32: FixedNatClass;\n    Nat64: FixedNatClass;\n\n    Principal: PrincipalClass;\n\n    Tuple: typeof Tuple;\n    Vec: typeof Vec;\n    Opt: typeof Opt;\n    Record: typeof Record;\n    Variant: typeof Variant;\n    Rec: typeof Rec;\n    Func: typeof Func;\n\n    Service(t: Record<string, FuncClass>): ServiceClass;\n  };\n}) => ServiceClass;\n\n// Export Types instances.\nexport const Empty = new EmptyClass();\nexport const Reserved = new ReservedClass();\n/**\n * Client-only type for deserializing unknown data. Not supported by Candid, and its use is discouraged.\n */\nexport const Unknown = new UnknownClass();\nexport const Bool = new BoolClass();\nexport const Null = new NullClass();\nexport const Text = new TextClass();\nexport const Int = new IntClass();\nexport const Nat = new NatClass();\n\nexport const Float32 = new FloatClass(32);\nexport const Float64 = new FloatClass(64);\n\nexport const Int8 = new FixedIntClass(8);\nexport const Int16 = new FixedIntClass(16);\nexport const Int32 = new FixedIntClass(32);\nexport const Int64 = new FixedIntClass(64);\n\nexport const Nat8 = new FixedNatClass(8);\nexport const Nat16 = new FixedNatClass(16);\nexport const Nat32 = new FixedNatClass(32);\nexport const Nat64 = new FixedNatClass(64);\n\nexport const Principal = new PrincipalClass();\n\n/**\n *\n * @param types array of any types\n * @returns TupleClass from those types\n */\nexport function Tuple<T extends any[]>(...types: T): TupleClass<T> {\n  return new TupleClass(types);\n}\n/**\n *\n * @param t IDL Type\n * @returns VecClass from that type\n */\nexport function Vec<T>(t: Type<T>): VecClass<T> {\n  return new VecClass(t);\n}\n/**\n *\n * @param t IDL Type\n * @returns OptClass of Type\n */\nexport function Opt<T>(t: Type<T>): OptClass<T> {\n  return new OptClass(t);\n}\n/**\n *\n * @param t Record of string and IDL Type\n * @returns RecordClass of string and Type\n */\nexport function Record(t: Record<string, Type>): RecordClass {\n  return new RecordClass(t);\n}\n\n/**\n *\n * @param fields Record of string and IDL Type\n * @returns VariantClass\n */\nexport function Variant(fields: Record<string, Type>): VariantClass {\n  return new VariantClass(fields);\n}\n/**\n *\n * @returns new RecClass\n */\nexport function Rec(): RecClass {\n  return new RecClass();\n}\n\n/**\n *\n * @param args array of IDL Types\n * @param ret array of IDL Types\n * @param annotations array of strings, [] by default\n * @returns new FuncClass\n */\nexport function Func(args: Type[], ret: Type[], annotations: string[] = []): FuncClass {\n  return new FuncClass(args, ret, annotations);\n}\n\n/**\n *\n * @param t Record of string and FuncClass\n * @returns ServiceClass\n */\nexport function Service(t: Record<string, FuncClass>): ServiceClass {\n  return new ServiceClass(t);\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as IDL from './idl';\n\nexport interface ParseConfig {\n  random?: boolean;\n}\n\nexport interface UIConfig {\n  input?: HTMLElement;\n  form?: InputForm;\n  parse(t: IDL.Type, config: ParseConfig, v: string): any;\n}\n\nexport interface FormConfig {\n  open?: HTMLElement;\n  event?: string;\n  labelMap?: Record<string, string>;\n  container?: HTMLElement;\n  render(t: IDL.Type): InputBox;\n}\n\nexport class InputBox {\n  public status: HTMLElement;\n  public label: string | null = null;\n  public value: any = undefined;\n\n  constructor(public idl: IDL.Type, public ui: UIConfig) {\n    const status = document.createElement('span');\n    status.className = 'status';\n    this.status = status;\n\n    if (ui.input) {\n      ui.input.addEventListener('blur', () => {\n        if ((ui.input as HTMLInputElement).value === '') {\n          return;\n        }\n        this.parse();\n      });\n      ui.input.addEventListener('input', () => {\n        status.style.display = 'none';\n        ui.input!.classList.remove('reject');\n      });\n    }\n  }\n  public isRejected(): boolean {\n    return this.value === undefined;\n  }\n\n  public parse(config: ParseConfig = {}): any {\n    if (this.ui.form) {\n      const value = this.ui.form.parse(config);\n      this.value = value;\n      return value;\n    }\n\n    if (this.ui.input) {\n      const input = this.ui.input as HTMLInputElement;\n      try {\n        const value = this.ui.parse(this.idl, config, input.value);\n        if (!this.idl.covariant(value)) {\n          throw new Error(`${input.value} is not of type ${this.idl.display()}`);\n        }\n        this.status.style.display = 'none';\n        this.value = value;\n        return value;\n      } catch (err) {\n        input.classList.add('reject');\n        this.status.style.display = 'block';\n        this.status.innerHTML = 'InputError: ' + (err as Error).message;\n        this.value = undefined;\n        return undefined;\n      }\n    }\n    return null;\n  }\n  public render(dom: HTMLElement): void {\n    const container = document.createElement('span');\n    if (this.label) {\n      const label = document.createElement('label');\n      label.innerText = this.label;\n      container.appendChild(label);\n    }\n    if (this.ui.input) {\n      container.appendChild(this.ui.input);\n      container.appendChild(this.status);\n    }\n\n    if (this.ui.form) {\n      this.ui.form.render(container);\n    }\n    dom.appendChild(container);\n  }\n}\n\nexport abstract class InputForm {\n  public form: InputBox[] = [];\n  constructor(public ui: FormConfig) {}\n\n  public abstract parse(config: ParseConfig): any;\n  public abstract generateForm(): any;\n  public renderForm(dom: HTMLElement): void {\n    if (this.ui.container) {\n      this.form.forEach(e => e.render(this.ui.container!));\n      dom.appendChild(this.ui.container);\n    } else {\n      this.form.forEach(e => e.render(dom));\n    }\n  }\n  public render(dom: HTMLElement): void {\n    if (this.ui.open && this.ui.event) {\n      dom.appendChild(this.ui.open);\n      const form = this;\n      // eslint-disable-next-line\n      form.ui.open!.addEventListener(form.ui.event!, () => {\n        // Remove old form\n        if (form.ui.container) {\n          form.ui.container.innerHTML = '';\n        } else {\n          const oldContainer = form.ui.open!.nextElementSibling;\n          if (oldContainer) {\n            oldContainer.parentNode!.removeChild(oldContainer);\n          }\n        }\n        // Render form\n        form.generateForm();\n        form.renderForm(dom);\n      });\n    } else {\n      this.generateForm();\n      this.renderForm(dom);\n    }\n  }\n}\n\nexport class RecordForm extends InputForm {\n  constructor(public fields: Array<[string, IDL.Type]>, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    this.form = this.fields.map(([key, type]) => {\n      const input = this.ui.render(type);\n      // eslint-disable-next-line\n      if (this.ui.labelMap && this.ui.labelMap.hasOwnProperty(key)) {\n        input.label = this.ui.labelMap[key] + ' ';\n      } else {\n        input.label = key + ' ';\n      }\n      return input;\n    });\n  }\n  public parse(config: ParseConfig): Record<string, any> | undefined {\n    const v: Record<string, any> = {};\n    this.fields.forEach(([key, _], i) => {\n      const value = this.form[i].parse(config);\n      v[key] = value;\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\n\nexport class TupleForm extends InputForm {\n  constructor(public components: IDL.Type[], public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    this.form = this.components.map(type => {\n      const input = this.ui.render(type);\n      return input;\n    });\n  }\n  public parse(config: ParseConfig): any[] | undefined {\n    const v: any[] = [];\n    this.components.forEach((_, i) => {\n      const value = this.form[i].parse(config);\n      v.push(value);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return v;\n  }\n}\n\nexport class VariantForm extends InputForm {\n  constructor(public fields: Array<[string, IDL.Type]>, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    const index = (this.ui.open as HTMLSelectElement).selectedIndex;\n    const [_, type] = this.fields[index];\n    const variant = this.ui.render(type);\n    this.form = [variant];\n  }\n  public parse(config: ParseConfig): Record<string, any> | undefined {\n    const select = this.ui.open as HTMLSelectElement;\n    const selected = select.options[select.selectedIndex].value;\n    const value = this.form[0].parse(config);\n    if (value === undefined) {\n      return undefined;\n    }\n    const v: Record<string, any> = {};\n    v[selected] = value;\n    return v;\n  }\n}\n\nexport class OptionForm extends InputForm {\n  constructor(public ty: IDL.Type, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    if ((this.ui.open as HTMLInputElement).checked) {\n      const opt = this.ui.render(this.ty);\n      this.form = [opt];\n    } else {\n      this.form = [];\n    }\n  }\n  public parse<T>(config: ParseConfig): [T] | [] | undefined {\n    if (this.form.length === 0) {\n      return [];\n    } else {\n      const value = this.form[0].parse(config);\n      if (value === undefined) {\n        return undefined;\n      }\n      return [value];\n    }\n  }\n}\n\nexport class VecForm extends InputForm {\n  constructor(public ty: IDL.Type, public ui: FormConfig) {\n    super(ui);\n  }\n  public generateForm(): void {\n    const len = +(this.ui.open as HTMLInputElement).value;\n    this.form = [];\n    for (let i = 0; i < len; i++) {\n      const t = this.ui.render(this.ty);\n      this.form.push(t);\n    }\n  }\n  public parse<T>(config: ParseConfig): T[] | undefined {\n    const value = this.form.map(input => {\n      return input.parse(config);\n    });\n    if (this.form.some(input => input.isRejected())) {\n      return undefined;\n    }\n    return value;\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as IDL from './idl';\nimport { Principal } from '@dfinity/principal';\nimport * as UI from './candid-core';\n\ntype InputBox = UI.InputBox;\n\nconst InputConfig: UI.UIConfig = { parse: parsePrimitive };\nconst FormConfig: UI.FormConfig = { render: renderInput };\n\nexport const inputBox = (t: IDL.Type, config: Partial<UI.UIConfig>) => {\n  return new UI.InputBox(t, { ...InputConfig, ...config });\n};\nexport const recordForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.RecordForm(fields, { ...FormConfig, ...config });\n};\nexport const tupleForm = (components: IDL.Type[], config: Partial<UI.FormConfig>) => {\n  return new UI.TupleForm(components, { ...FormConfig, ...config });\n};\nexport const variantForm = (fields: Array<[string, IDL.Type]>, config: Partial<UI.FormConfig>) => {\n  return new UI.VariantForm(fields, { ...FormConfig, ...config });\n};\nexport const optForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.OptionForm(ty, { ...FormConfig, ...config });\n};\nexport const vecForm = (ty: IDL.Type, config: Partial<UI.FormConfig>) => {\n  return new UI.VecForm(ty, { ...FormConfig, ...config });\n};\n\nexport class Render extends IDL.Visitor<null, InputBox> {\n  public visitType<T>(t: IDL.Type<T>, d: null): InputBox {\n    const input = document.createElement('input');\n    input.classList.add('argument');\n    input.placeholder = t.display();\n    return inputBox(t, { input });\n  }\n  public visitNull(t: IDL.NullClass, d: null): InputBox {\n    return inputBox(t, {});\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: null): InputBox {\n    let config = {};\n    if (fields.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = recordForm(fields, config);\n    return inputBox(t, { form });\n  }\n  public visitTuple<T extends any[]>(\n    t: IDL.TupleClass<T>,\n    components: IDL.Type[],\n    d: null,\n  ): InputBox {\n    let config = {};\n    if (components.length > 1) {\n      const container = document.createElement('div');\n      container.classList.add('popup-form');\n      config = { container };\n    }\n    const form = tupleForm(components, config);\n    return inputBox(t, { form });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: null): InputBox {\n    const select = document.createElement('select');\n    for (const [key, type] of fields) {\n      const option = new Option(key);\n      select.add(option);\n    }\n    select.selectedIndex = -1;\n    select.classList.add('open');\n    const config: Partial<UI.FormConfig> = { open: select, event: 'change' };\n    const form = variantForm(fields, config);\n    return inputBox(t, { form });\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, d: null): InputBox {\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('open');\n    const form = optForm(ty, { open: checkbox, event: 'change' });\n    return inputBox(t, { form });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, d: null): InputBox {\n    const len = document.createElement('input');\n    len.type = 'number';\n    len.min = '0';\n    len.max = '100';\n    len.style.width = '8rem';\n    len.placeholder = 'len';\n    len.classList.add('open');\n    const container = document.createElement('div');\n    container.classList.add('popup-form');\n    const form = vecForm(ty, { open: len, event: 'change', container });\n    return inputBox(t, { form });\n  }\n  public visitRec<T>(t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: null): InputBox {\n    return renderInput(ty);\n  }\n}\n\nclass Parse extends IDL.Visitor<string, any> {\n  public visitNull(t: IDL.NullClass, v: string): null {\n    return null;\n  }\n  public visitBool(t: IDL.BoolClass, v: string): boolean {\n    if (v === 'true') {\n      return true;\n    }\n    if (v === 'false') {\n      return false;\n    }\n    throw new Error(`Cannot parse ${v} as boolean`);\n  }\n  public visitText(t: IDL.TextClass, v: string): string {\n    return v;\n  }\n  public visitFloat(t: IDL.FloatClass, v: string): number {\n    return parseFloat(v);\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    if (t._bits <= 32) {\n      return parseInt(v, 10);\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitNumber(t: IDL.PrimitiveType, v: string): bigint {\n    return BigInt(v);\n  }\n  public visitPrincipal(t: IDL.PrincipalClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitService(t: IDL.ServiceClass, v: string): Principal {\n    return Principal.fromText(v);\n  }\n  public visitFunc(t: IDL.FuncClass, v: string): [Principal, string] {\n    const x = v.split('.', 2);\n    return [Principal.fromText(x[0]), x[1]];\n  }\n}\n\nclass Random extends IDL.Visitor<string, any> {\n  public visitNull(t: IDL.NullClass, v: string): null {\n    return null;\n  }\n  public visitBool(t: IDL.BoolClass, v: string): boolean {\n    return Math.random() < 0.5;\n  }\n  public visitText(t: IDL.TextClass, v: string): string {\n    return Math.random().toString(36).substring(6);\n  }\n  public visitFloat(t: IDL.FloatClass, v: string): number {\n    return Math.random();\n  }\n  public visitInt(t: IDL.IntClass, v: string): bigint {\n    return BigInt(this.generateNumber(true));\n  }\n  public visitNat(t: IDL.NatClass, v: string): bigint {\n    return BigInt(this.generateNumber(false));\n  }\n  public visitFixedInt(t: IDL.FixedIntClass, v: string): number | bigint {\n    const x = this.generateNumber(true);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  public visitFixedNat(t: IDL.FixedNatClass, v: string): number | bigint {\n    const x = this.generateNumber(false);\n    if (t._bits <= 32) {\n      return x;\n    } else {\n      return BigInt(v);\n    }\n  }\n  private generateNumber(signed: boolean): number {\n    const num = Math.floor(Math.random() * 100);\n    if (signed && Math.random() < 0.5) {\n      return -num;\n    } else {\n      return num;\n    }\n  }\n}\n\nfunction parsePrimitive(t: IDL.Type, config: UI.ParseConfig, d: string) {\n  if (config.random && d === '') {\n    return t.accept(new Random(), d);\n  } else {\n    return t.accept(new Parse(), d);\n  }\n}\n\n/**\n *\n * @param t an IDL type\n * @returns an input for that type\n */\nexport function renderInput(t: IDL.Type): InputBox {\n  return t.accept(new Render(), null);\n}\n\ninterface ValueConfig {\n  input: InputBox;\n  value: any;\n}\n\n/**\n *\n * @param t an IDL Type\n * @param input an InputBox\n * @param value any\n * @returns rendering that value to the provided input\n */\nexport function renderValue(t: IDL.Type, input: InputBox, value: any) {\n  return t.accept(new RenderValue(), { input, value });\n}\n\nclass RenderValue extends IDL.Visitor<ValueConfig, void> {\n  public visitType<T>(t: IDL.Type<T>, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = t.valueToString(d.value);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  public visitNull(t: IDL.NullClass, d: ValueConfig) {}\n  public visitText(t: IDL.TextClass, d: ValueConfig) {\n    (d.input.ui.input as HTMLInputElement).value = d.value;\n  }\n  public visitRec<T>(t: IDL.RecClass<T>, ty: IDL.ConstructType<T>, d: ValueConfig) {\n    renderValue(ty, d.input, d.value);\n  }\n  public visitOpt<T>(t: IDL.OptClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    if (d.value.length === 0) {\n      return;\n    } else {\n      const form = d.input.ui.form!;\n      const open = form.ui.open as HTMLInputElement;\n      open.checked = true;\n      open.dispatchEvent(new Event(form.ui.event!));\n      renderValue(ty, form.form[0], d.value[0]);\n    }\n  }\n  public visitRecord(t: IDL.RecordClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    fields.forEach(([key, type], i) => {\n      renderValue(type, form.form[i], d.value[key]);\n    });\n  }\n  public visitTuple<T extends any[]>(t: IDL.TupleClass<T>, components: IDL.Type[], d: ValueConfig) {\n    const form = d.input.ui.form!;\n    components.forEach((type, i) => {\n      renderValue(type, form.form[i], d.value[i]);\n    });\n  }\n  public visitVariant(t: IDL.VariantClass, fields: Array<[string, IDL.Type]>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const selected = Object.entries(d.value)[0];\n    fields.forEach(([key, type], i) => {\n      if (key === selected[0]) {\n        const open = form.ui.open as HTMLSelectElement;\n        open.selectedIndex = i;\n        open.dispatchEvent(new Event(form.ui.event!));\n        renderValue(type, form.form[0], selected[1]);\n      }\n    });\n  }\n  public visitVec<T>(t: IDL.VecClass<T>, ty: IDL.Type<T>, d: ValueConfig) {\n    const form = d.input.ui.form!;\n    const len = d.value.length;\n    const open = form.ui.open as HTMLInputElement;\n    open.value = len;\n    open.dispatchEvent(new Event(form.ui.event!));\n    d.value.forEach((v: T, i: number) => {\n      renderValue(ty, form.form[i], v);\n    });\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "export * from './candid-ui';\nexport * from './candid-core';\nexport * as IDL from './idl';\nexport * from './utils/hash';\nexport * from './utils/leb128';\nexport * from './utils/buffer';\nexport * from './types';\n", ";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on \u00B1Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = \u00B1Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return \u00B10, else return \u00B1Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, \u00B1Infinity or \u00B10?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return \u00B1Infinity if either is \u00B1Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return \u00B10 if either is \u00B10.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return \u00B1Infinity if either \u00B1Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n", "/* eslint-disable */\n\nmodule.exports = function decodeAsm (stdlib, foreign, buffer) {\n  'use asm'\n\n  // -- Imports\n\n  var heap = new stdlib.Uint8Array(buffer)\n  // var log = foreign.log\n  var pushInt = foreign.pushInt\n  var pushInt32 = foreign.pushInt32\n  var pushInt32Neg = foreign.pushInt32Neg\n  var pushInt64 = foreign.pushInt64\n  var pushInt64Neg = foreign.pushInt64Neg\n  var pushFloat = foreign.pushFloat\n  var pushFloatSingle = foreign.pushFloatSingle\n  var pushFloatDouble = foreign.pushFloatDouble\n  var pushTrue = foreign.pushTrue\n  var pushFalse = foreign.pushFalse\n  var pushUndefined = foreign.pushUndefined\n  var pushNull = foreign.pushNull\n  var pushInfinity = foreign.pushInfinity\n  var pushInfinityNeg = foreign.pushInfinityNeg\n  var pushNaN = foreign.pushNaN\n  var pushNaNNeg = foreign.pushNaNNeg\n\n  var pushArrayStart = foreign.pushArrayStart\n  var pushArrayStartFixed = foreign.pushArrayStartFixed\n  var pushArrayStartFixed32 = foreign.pushArrayStartFixed32\n  var pushArrayStartFixed64 = foreign.pushArrayStartFixed64\n  var pushObjectStart = foreign.pushObjectStart\n  var pushObjectStartFixed = foreign.pushObjectStartFixed\n  var pushObjectStartFixed32 = foreign.pushObjectStartFixed32\n  var pushObjectStartFixed64 = foreign.pushObjectStartFixed64\n\n  var pushByteString = foreign.pushByteString\n  var pushByteStringStart = foreign.pushByteStringStart\n  var pushUtf8String = foreign.pushUtf8String\n  var pushUtf8StringStart = foreign.pushUtf8StringStart\n\n  var pushSimpleUnassigned = foreign.pushSimpleUnassigned\n\n  var pushTagStart = foreign.pushTagStart\n  var pushTagStart4 = foreign.pushTagStart4\n  var pushTagStart8 = foreign.pushTagStart8\n  var pushTagUnassigned = foreign.pushTagUnassigned\n\n  var pushBreak = foreign.pushBreak\n\n  var pow = stdlib.Math.pow\n\n  // -- Constants\n\n\n  // -- Mutable Variables\n\n  var offset = 0\n  var inputLength = 0\n  var code = 0\n\n  // Decode a cbor string represented as Uint8Array\n  // which is allocated on the heap from 0 to inputLength\n  //\n  // input - Int\n  //\n  // Returns Code - Int,\n  // Success = 0\n  // Error > 0\n  function parse (input) {\n    input = input | 0\n\n    offset = 0\n    inputLength = input\n\n    while ((offset | 0) < (inputLength | 0)) {\n      code = jumpTable[heap[offset] & 255](heap[offset] | 0) | 0\n\n      if ((code | 0) > 0) {\n        break\n      }\n    }\n\n    return code | 0\n  }\n\n  // -- Helper Function\n\n  function checkOffset (n) {\n    n = n | 0\n\n    if ((((offset | 0) + (n | 0)) | 0) < (inputLength | 0)) {\n      return 0\n    }\n\n    return 1\n  }\n\n  function readUInt16 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 8) | heap[(n + 1) | 0]\n    ) | 0\n  }\n\n  function readUInt32 (n) {\n    n = n | 0\n\n    return (\n      (heap[n | 0] << 24) | (heap[(n + 1) | 0] << 16) | (heap[(n + 2) | 0] << 8) | heap[(n + 3) | 0]\n    ) | 0\n  }\n\n  // -- Initial Byte Handlers\n\n  function INT_P (octet) {\n    octet = octet | 0\n\n    pushInt(octet | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_P_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_P_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushInt(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_P_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_P_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function INT_N (octet) {\n    octet = octet | 0\n\n    pushInt((-1 - ((octet - 32) | 0)) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UINT_N_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushInt(\n      (-1 - (heap[(offset + 1) | 0] | 0)) | 0\n    )\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function UINT_N_16 (octet) {\n    octet = octet | 0\n\n    var val = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    val = readUInt16((offset + 1) | 0) | 0\n    pushInt((-1 - (val | 0)) | 0)\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function UINT_N_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushInt32Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function UINT_N_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushInt64Neg(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function BYTE_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 64) | 0\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushByteString(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function BYTE_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BYTE_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushByteStringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function UTF8_STRING (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var step = 0\n\n    step = (octet - 96) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    start = (offset + 1) | 0\n    end = (((offset + 1) | 0) + (step | 0)) | 0\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_8 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    length = heap[(offset + 1) | 0] | 0\n    start = (offset + 2) | 0\n    end = (((offset + 2) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 1) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_16 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    length = readUInt16((offset + 1) | 0) | 0\n    start = (offset + 3) | 0\n    end = (((offset + 3) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 2) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_32 (octet) {\n    octet = octet | 0\n\n    var start = 0\n    var end = 0\n    var length = 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    length = readUInt32((offset + 1) | 0) | 0\n    start = (offset + 5) | 0\n    end = (((offset + 5) | 0) + (length | 0)) | 0\n\n    if (checkOffset((length + 4) | 0) | 0) {\n      return 1\n    }\n\n    pushUtf8String(start | 0, end | 0)\n\n    offset = end | 0\n\n    return 0\n  }\n\n  function UTF8_STRING_64 (octet) {\n    // NOT IMPLEMENTED\n    octet = octet | 0\n\n    return 1\n  }\n\n  function UTF8_STRING_BREAK (octet) {\n    octet = octet | 0\n\n    pushUtf8StringStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY (octet) {\n    octet = octet | 0\n\n    pushArrayStartFixed((octet - 128) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function ARRAY_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function ARRAY_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function ARRAY_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function ARRAY_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushArrayStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ARRAY_BREAK (octet) {\n    octet = octet | 0\n\n    pushArrayStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP (octet) {\n    octet = octet | 0\n\n    var step = 0\n\n    step = (octet - 160) | 0\n\n    if (checkOffset(step | 0) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(step | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function MAP_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2) | 0\n\n    return 0\n  }\n\n  function MAP_16 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function MAP_32 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed32(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function MAP_64 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushObjectStartFixed64(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function MAP_BREAK (octet) {\n    octet = octet | 0\n\n    pushObjectStart()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function TAG_KNOWN (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_POS (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_NEG (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_FRAC (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BIGNUM_FLOAT (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushTagStart((octet - 192| 0) | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64_URL (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE64 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_BASE16 (octet) {\n    octet = octet | 0\n\n    pushTagStart(octet | 0)\n\n    offset = (offset + 1 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_1 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushTagStart(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_2 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    pushTagStart(\n      readUInt16((offset + 1) | 0) | 0\n    )\n\n    offset = (offset + 3 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_4 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushTagStart4(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0\n    )\n\n    offset = (offset + 5 | 0)\n\n    return 0\n  }\n\n  function TAG_MORE_8 (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushTagStart8(\n      readUInt16((offset + 1) | 0) | 0,\n      readUInt16((offset + 3) | 0) | 0,\n      readUInt16((offset + 5) | 0) | 0,\n      readUInt16((offset + 7) | 0) | 0\n    )\n\n    offset = (offset + 9 | 0)\n\n    return 0\n  }\n\n  function SIMPLE_UNASSIGNED (octet) {\n    octet = octet | 0\n\n    pushSimpleUnassigned(((octet | 0) - 224) | 0)\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FALSE (octet) {\n    octet = octet | 0\n\n    pushFalse()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_TRUE (octet) {\n    octet = octet | 0\n\n    pushTrue()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_NULL (octet) {\n    octet = octet | 0\n\n    pushNull()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_UNDEFINED (octet) {\n    octet = octet | 0\n\n    pushUndefined()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  function SIMPLE_BYTE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(1) | 0) {\n      return 1\n    }\n\n    pushSimpleUnassigned(heap[(offset + 1) | 0] | 0)\n\n    offset = (offset + 2)  | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_HALF (octet) {\n    octet = octet | 0\n\n    var f = 0\n    var g = 0\n    var sign = 1.0\n    var exp = 0.0\n    var mant = 0.0\n    var r = 0.0\n    if (checkOffset(2) | 0) {\n      return 1\n    }\n\n    f = heap[(offset + 1) | 0] | 0\n    g = heap[(offset + 2) | 0] | 0\n\n    if ((f | 0) & 0x80) {\n      sign = -1.0\n    }\n\n    exp = +(((f | 0) & 0x7C) >> 2)\n    mant = +((((f | 0) & 0x03) << 8) | g)\n\n    if (+exp == 0.0) {\n      pushFloat(+(\n        (+sign) * +5.9604644775390625e-8 * (+mant)\n      ))\n    } else if (+exp == 31.0) {\n      if (+sign == 1.0) {\n        if (+mant > 0.0) {\n          pushNaN()\n        } else {\n          pushInfinity()\n        }\n      } else {\n        if (+mant > 0.0) {\n          pushNaNNeg()\n        } else {\n          pushInfinityNeg()\n        }\n      }\n    } else {\n      pushFloat(+(\n        +sign * pow(+2, +(+exp - 25.0)) * +(1024.0 + mant)\n      ))\n    }\n\n    offset = (offset + 3) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_SINGLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(4) | 0) {\n      return 1\n    }\n\n    pushFloatSingle(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0\n    )\n\n    offset = (offset + 5) | 0\n\n    return 0\n  }\n\n  function SIMPLE_FLOAT_DOUBLE (octet) {\n    octet = octet | 0\n\n    if (checkOffset(8) | 0) {\n      return 1\n    }\n\n    pushFloatDouble(\n      heap[(offset + 1) | 0] | 0,\n      heap[(offset + 2) | 0] | 0,\n      heap[(offset + 3) | 0] | 0,\n      heap[(offset + 4) | 0] | 0,\n      heap[(offset + 5) | 0] | 0,\n      heap[(offset + 6) | 0] | 0,\n      heap[(offset + 7) | 0] | 0,\n      heap[(offset + 8) | 0] | 0\n    )\n\n    offset = (offset + 9) | 0\n\n    return 0\n  }\n\n  function ERROR (octet) {\n    octet = octet | 0\n\n    return 1\n  }\n\n  function BREAK (octet) {\n    octet = octet | 0\n\n    pushBreak()\n\n    offset = (offset + 1) | 0\n\n    return 0\n  }\n\n  // -- Jump Table\n\n  var jumpTable = [\n    // Integer 0x00..0x17 (0..23)\n    INT_P, // 0x00\n    INT_P, // 0x01\n    INT_P, // 0x02\n    INT_P, // 0x03\n    INT_P, // 0x04\n    INT_P, // 0x05\n    INT_P, // 0x06\n    INT_P, // 0x07\n    INT_P, // 0x08\n    INT_P, // 0x09\n    INT_P, // 0x0A\n    INT_P, // 0x0B\n    INT_P, // 0x0C\n    INT_P, // 0x0D\n    INT_P, // 0x0E\n    INT_P, // 0x0F\n    INT_P, // 0x10\n    INT_P, // 0x11\n    INT_P, // 0x12\n    INT_P, // 0x13\n    INT_P, // 0x14\n    INT_P, // 0x15\n    INT_P, // 0x16\n    INT_P, // 0x17\n    // Unsigned integer (one-byte uint8_t follows)\n    UINT_P_8, // 0x18\n    // Unsigned integer (two-byte uint16_t follows)\n    UINT_P_16, // 0x19\n    // Unsigned integer (four-byte uint32_t follows)\n    UINT_P_32, // 0x1a\n    // Unsigned integer (eight-byte uint64_t follows)\n    UINT_P_64, // 0x1b\n    ERROR, // 0x1c\n    ERROR, // 0x1d\n    ERROR, // 0x1e\n    ERROR, // 0x1f\n    // Negative integer -1-0x00..-1-0x17 (-1..-24)\n    INT_N, // 0x20\n    INT_N, // 0x21\n    INT_N, // 0x22\n    INT_N, // 0x23\n    INT_N, // 0x24\n    INT_N, // 0x25\n    INT_N, // 0x26\n    INT_N, // 0x27\n    INT_N, // 0x28\n    INT_N, // 0x29\n    INT_N, // 0x2A\n    INT_N, // 0x2B\n    INT_N, // 0x2C\n    INT_N, // 0x2D\n    INT_N, // 0x2E\n    INT_N, // 0x2F\n    INT_N, // 0x30\n    INT_N, // 0x31\n    INT_N, // 0x32\n    INT_N, // 0x33\n    INT_N, // 0x34\n    INT_N, // 0x35\n    INT_N, // 0x36\n    INT_N, // 0x37\n    // Negative integer -1-n (one-byte uint8_t for n follows)\n    UINT_N_8, // 0x38\n    // Negative integer -1-n (two-byte uint16_t for n follows)\n    UINT_N_16, // 0x39\n    // Negative integer -1-n (four-byte uint32_t for nfollows)\n    UINT_N_32, // 0x3a\n    // Negative integer -1-n (eight-byte uint64_t for n follows)\n    UINT_N_64, // 0x3b\n    ERROR, // 0x3c\n    ERROR, // 0x3d\n    ERROR, // 0x3e\n    ERROR, // 0x3f\n    // byte string (0x00..0x17 bytes follow)\n    BYTE_STRING, // 0x40\n    BYTE_STRING, // 0x41\n    BYTE_STRING, // 0x42\n    BYTE_STRING, // 0x43\n    BYTE_STRING, // 0x44\n    BYTE_STRING, // 0x45\n    BYTE_STRING, // 0x46\n    BYTE_STRING, // 0x47\n    BYTE_STRING, // 0x48\n    BYTE_STRING, // 0x49\n    BYTE_STRING, // 0x4A\n    BYTE_STRING, // 0x4B\n    BYTE_STRING, // 0x4C\n    BYTE_STRING, // 0x4D\n    BYTE_STRING, // 0x4E\n    BYTE_STRING, // 0x4F\n    BYTE_STRING, // 0x50\n    BYTE_STRING, // 0x51\n    BYTE_STRING, // 0x52\n    BYTE_STRING, // 0x53\n    BYTE_STRING, // 0x54\n    BYTE_STRING, // 0x55\n    BYTE_STRING, // 0x56\n    BYTE_STRING, // 0x57\n    // byte string (one-byte uint8_t for n, and then n bytes follow)\n    BYTE_STRING_8, // 0x58\n    // byte string (two-byte uint16_t for n, and then n bytes follow)\n    BYTE_STRING_16, // 0x59\n    // byte string (four-byte uint32_t for n, and then n bytes follow)\n    BYTE_STRING_32, // 0x5a\n    // byte string (eight-byte uint64_t for n, and then n bytes follow)\n    BYTE_STRING_64, // 0x5b\n    ERROR, // 0x5c\n    ERROR, // 0x5d\n    ERROR, // 0x5e\n    // byte string, byte strings follow, terminated by \"break\"\n    BYTE_STRING_BREAK, // 0x5f\n    // UTF-8 string (0x00..0x17 bytes follow)\n    UTF8_STRING, // 0x60\n    UTF8_STRING, // 0x61\n    UTF8_STRING, // 0x62\n    UTF8_STRING, // 0x63\n    UTF8_STRING, // 0x64\n    UTF8_STRING, // 0x65\n    UTF8_STRING, // 0x66\n    UTF8_STRING, // 0x67\n    UTF8_STRING, // 0x68\n    UTF8_STRING, // 0x69\n    UTF8_STRING, // 0x6A\n    UTF8_STRING, // 0x6B\n    UTF8_STRING, // 0x6C\n    UTF8_STRING, // 0x6D\n    UTF8_STRING, // 0x6E\n    UTF8_STRING, // 0x6F\n    UTF8_STRING, // 0x70\n    UTF8_STRING, // 0x71\n    UTF8_STRING, // 0x72\n    UTF8_STRING, // 0x73\n    UTF8_STRING, // 0x74\n    UTF8_STRING, // 0x75\n    UTF8_STRING, // 0x76\n    UTF8_STRING, // 0x77\n    // UTF-8 string (one-byte uint8_t for n, and then n bytes follow)\n    UTF8_STRING_8, // 0x78\n    // UTF-8 string (two-byte uint16_t for n, and then n bytes follow)\n    UTF8_STRING_16, // 0x79\n    // UTF-8 string (four-byte uint32_t for n, and then n bytes follow)\n    UTF8_STRING_32, // 0x7a\n    // UTF-8 string (eight-byte uint64_t for n, and then n bytes follow)\n    UTF8_STRING_64, // 0x7b\n    // UTF-8 string, UTF-8 strings follow, terminated by \"break\"\n    ERROR, // 0x7c\n    ERROR, // 0x7d\n    ERROR, // 0x7e\n    UTF8_STRING_BREAK, // 0x7f\n    // array (0x00..0x17 data items follow)\n    ARRAY, // 0x80\n    ARRAY, // 0x81\n    ARRAY, // 0x82\n    ARRAY, // 0x83\n    ARRAY, // 0x84\n    ARRAY, // 0x85\n    ARRAY, // 0x86\n    ARRAY, // 0x87\n    ARRAY, // 0x88\n    ARRAY, // 0x89\n    ARRAY, // 0x8A\n    ARRAY, // 0x8B\n    ARRAY, // 0x8C\n    ARRAY, // 0x8D\n    ARRAY, // 0x8E\n    ARRAY, // 0x8F\n    ARRAY, // 0x90\n    ARRAY, // 0x91\n    ARRAY, // 0x92\n    ARRAY, // 0x93\n    ARRAY, // 0x94\n    ARRAY, // 0x95\n    ARRAY, // 0x96\n    ARRAY, // 0x97\n    // array (one-byte uint8_t fo, and then n data items follow)\n    ARRAY_8, // 0x98\n    // array (two-byte uint16_t for n, and then n data items follow)\n    ARRAY_16, // 0x99\n    // array (four-byte uint32_t for n, and then n data items follow)\n    ARRAY_32, // 0x9a\n    // array (eight-byte uint64_t for n, and then n data items follow)\n    ARRAY_64, // 0x9b\n    // array, data items follow, terminated by \"break\"\n    ERROR, // 0x9c\n    ERROR, // 0x9d\n    ERROR, // 0x9e\n    ARRAY_BREAK, // 0x9f\n    // map (0x00..0x17 pairs of data items follow)\n    MAP, // 0xa0\n    MAP, // 0xa1\n    MAP, // 0xa2\n    MAP, // 0xa3\n    MAP, // 0xa4\n    MAP, // 0xa5\n    MAP, // 0xa6\n    MAP, // 0xa7\n    MAP, // 0xa8\n    MAP, // 0xa9\n    MAP, // 0xaA\n    MAP, // 0xaB\n    MAP, // 0xaC\n    MAP, // 0xaD\n    MAP, // 0xaE\n    MAP, // 0xaF\n    MAP, // 0xb0\n    MAP, // 0xb1\n    MAP, // 0xb2\n    MAP, // 0xb3\n    MAP, // 0xb4\n    MAP, // 0xb5\n    MAP, // 0xb6\n    MAP, // 0xb7\n    // map (one-byte uint8_t for n, and then n pairs of data items follow)\n    MAP_8, // 0xb8\n    // map (two-byte uint16_t for n, and then n pairs of data items follow)\n    MAP_16, // 0xb9\n    // map (four-byte uint32_t for n, and then n pairs of data items follow)\n    MAP_32, // 0xba\n    // map (eight-byte uint64_t for n, and then n pairs of data items follow)\n    MAP_64, // 0xbb\n    ERROR, // 0xbc\n    ERROR, // 0xbd\n    ERROR, // 0xbe\n    // map, pairs of data items follow, terminated by \"break\"\n    MAP_BREAK, // 0xbf\n    // Text-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc0\n    // Epoch-based date/time (data item follows; see Section 2.4.1)\n    TAG_KNOWN, // 0xc1\n    // Positive bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc2\n    // Negative bignum (data item \"byte string\" follows)\n    TAG_KNOWN, // 0xc3\n    // Decimal Fraction (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc4\n    // Bigfloat (data item \"array\" follows; see Section 2.4.3)\n    TAG_KNOWN, // 0xc5\n    // (tagged item)\n    TAG_UNASSIGNED, // 0xc6\n    TAG_UNASSIGNED, // 0xc7\n    TAG_UNASSIGNED, // 0xc8\n    TAG_UNASSIGNED, // 0xc9\n    TAG_UNASSIGNED, // 0xca\n    TAG_UNASSIGNED, // 0xcb\n    TAG_UNASSIGNED, // 0xcc\n    TAG_UNASSIGNED, // 0xcd\n    TAG_UNASSIGNED, // 0xce\n    TAG_UNASSIGNED, // 0xcf\n    TAG_UNASSIGNED, // 0xd0\n    TAG_UNASSIGNED, // 0xd1\n    TAG_UNASSIGNED, // 0xd2\n    TAG_UNASSIGNED, // 0xd3\n    TAG_UNASSIGNED, // 0xd4\n    // Expected Conversion (data item follows; see Section 2.4.4.2)\n    TAG_UNASSIGNED, // 0xd5\n    TAG_UNASSIGNED, // 0xd6\n    TAG_UNASSIGNED, // 0xd7\n    // (more tagged items, 1/2/4/8 bytes and then a data item follow)\n    TAG_MORE_1, // 0xd8\n    TAG_MORE_2, // 0xd9\n    TAG_MORE_4, // 0xda\n    TAG_MORE_8, // 0xdb\n    ERROR, // 0xdc\n    ERROR, // 0xdd\n    ERROR, // 0xde\n    ERROR, // 0xdf\n    // (simple value)\n    SIMPLE_UNASSIGNED, // 0xe0\n    SIMPLE_UNASSIGNED, // 0xe1\n    SIMPLE_UNASSIGNED, // 0xe2\n    SIMPLE_UNASSIGNED, // 0xe3\n    SIMPLE_UNASSIGNED, // 0xe4\n    SIMPLE_UNASSIGNED, // 0xe5\n    SIMPLE_UNASSIGNED, // 0xe6\n    SIMPLE_UNASSIGNED, // 0xe7\n    SIMPLE_UNASSIGNED, // 0xe8\n    SIMPLE_UNASSIGNED, // 0xe9\n    SIMPLE_UNASSIGNED, // 0xea\n    SIMPLE_UNASSIGNED, // 0xeb\n    SIMPLE_UNASSIGNED, // 0xec\n    SIMPLE_UNASSIGNED, // 0xed\n    SIMPLE_UNASSIGNED, // 0xee\n    SIMPLE_UNASSIGNED, // 0xef\n    SIMPLE_UNASSIGNED, // 0xf0\n    SIMPLE_UNASSIGNED, // 0xf1\n    SIMPLE_UNASSIGNED, // 0xf2\n    SIMPLE_UNASSIGNED, // 0xf3\n    // False\n    SIMPLE_FALSE, // 0xf4\n    // True\n    SIMPLE_TRUE, // 0xf5\n    // Null\n    SIMPLE_NULL, // 0xf6\n    // Undefined\n    SIMPLE_UNDEFINED, // 0xf7\n    // (simple value, one byte follows)\n    SIMPLE_BYTE, // 0xf8\n    // Half-Precision Float (two-byte IEEE 754)\n    SIMPLE_FLOAT_HALF, // 0xf9\n    // Single-Precision Float (four-byte IEEE 754)\n    SIMPLE_FLOAT_SINGLE, // 0xfa\n    // Double-Precision Float (eight-byte IEEE 754)\n    SIMPLE_FLOAT_DOUBLE, // 0xfb\n    ERROR, // 0xfc\n    ERROR, // 0xfd\n    ERROR, // 0xfe\n    // \"break\" stop code\n    BREAK // 0xff\n  ]\n\n  // --\n\n  return {\n    parse: parse\n  }\n}\n", "'use strict'\n\nconst Bignumber = require('bignumber.js').BigNumber\n\nexports.MT = {\n  POS_INT: 0,\n  NEG_INT: 1,\n  BYTE_STRING: 2,\n  UTF8_STRING: 3,\n  ARRAY: 4,\n  MAP: 5,\n  TAG: 6,\n  SIMPLE_FLOAT: 7\n}\n\nexports.TAG = {\n  DATE_STRING: 0,\n  DATE_EPOCH: 1,\n  POS_BIGINT: 2,\n  NEG_BIGINT: 3,\n  DECIMAL_FRAC: 4,\n  BIGFLOAT: 5,\n  BASE64URL_EXPECTED: 21,\n  BASE64_EXPECTED: 22,\n  BASE16_EXPECTED: 23,\n  CBOR: 24,\n  URI: 32,\n  BASE64URL: 33,\n  BASE64: 34,\n  REGEXP: 35,\n  MIME: 36\n}\n\nexports.NUMBYTES = {\n  ZERO: 0,\n  ONE: 24,\n  TWO: 25,\n  FOUR: 26,\n  EIGHT: 27,\n  INDEFINITE: 31\n}\n\nexports.SIMPLE = {\n  FALSE: 20,\n  TRUE: 21,\n  NULL: 22,\n  UNDEFINED: 23\n}\n\nexports.SYMS = {\n  NULL: Symbol('null'),\n  UNDEFINED: Symbol('undef'),\n  PARENT: Symbol('parent'),\n  BREAK: Symbol('break'),\n  STREAM: Symbol('stream')\n}\n\nexports.SHIFT32 = Math.pow(2, 32)\nexports.SHIFT16 = Math.pow(2, 16)\n\nexports.MAX_SAFE_HIGH = 0x1fffff\nexports.NEG_ONE = new Bignumber(-1)\nexports.TEN = new Bignumber(10)\nexports.TWO = new Bignumber(2)\n\nexports.PARENT = {\n  ARRAY: 0,\n  OBJECT: 1,\n  MAP: 2,\n  TAG: 3,\n  BYTE_STRING: 4,\n  UTF8_STRING: 5\n}\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst constants = require('./constants')\nconst SHIFT32 = constants.SHIFT32\nconst SHIFT16 = constants.SHIFT16\nconst MAX_SAFE_HIGH = 0x1fffff\n\nexports.parseHalf = function parseHalf (buf) {\n  var exp, mant, sign\n  sign = buf[0] & 0x80 ? -1 : 1\n  exp = (buf[0] & 0x7C) >> 2\n  mant = ((buf[0] & 0x03) << 8) | buf[1]\n  if (!exp) {\n    return sign * 5.9604644775390625e-8 * mant\n  } else if (exp === 0x1f) {\n    return sign * (mant ? 0 / 0 : 2e308)\n  } else {\n    return sign * Math.pow(2, exp - 25) * (1024 + mant)\n  }\n}\n\nfunction toHex (n) {\n  if (n < 16) {\n    return '0' + n.toString(16)\n  }\n\n  return n.toString(16)\n}\n\nexports.arrayBufferToBignumber = function (buf) {\n  const len = buf.byteLength\n  let res = ''\n  for (let i = 0; i < len; i++) {\n    res += toHex(buf[i])\n  }\n\n  return new Bignumber(res, 16)\n}\n\n// convert an Object into a Map\nexports.buildMap = (obj) => {\n  const res = new Map()\n  const keys = Object.keys(obj)\n  const length = keys.length\n  for (let i = 0; i < length; i++) {\n    res.set(keys[i], obj[keys[i]])\n  }\n  return res\n}\n\nexports.buildInt32 = (f, g) => {\n  return f * SHIFT16 + g\n}\n\nexports.buildInt64 = (f1, f2, g1, g2) => {\n  const f = exports.buildInt32(f1, f2)\n  const g = exports.buildInt32(g1, g2)\n\n  if (f > MAX_SAFE_HIGH) {\n    return new Bignumber(f).times(SHIFT32).plus(g)\n  } else {\n    return (f * SHIFT32) + g\n  }\n}\n\nexports.writeHalf = function writeHalf (buf, half) {\n  // assume 0, -0, NaN, Infinity, and -Infinity have already been caught\n\n  // HACK: everyone settle in.  This isn't going to be pretty.\n  // Translate cn-cbor's C code (from Carsten Borman):\n\n  // uint32_t be32;\n  // uint16_t be16, u16;\n  // union {\n  //   float f;\n  //   uint32_t u;\n  // } u32;\n  // u32.f = float_val;\n\n  const u32 = Buffer.allocUnsafe(4)\n  u32.writeFloatBE(half, 0)\n  const u = u32.readUInt32BE(0)\n\n  // if ((u32.u & 0x1FFF) == 0) { /* worth trying half */\n\n  // hildjj: If the lower 13 bits are 0, we won't lose anything in the conversion\n  if ((u & 0x1FFF) !== 0) {\n    return false\n  }\n\n  //   int s16 = (u32.u >> 16) & 0x8000;\n  //   int exp = (u32.u >> 23) & 0xff;\n  //   int mant = u32.u & 0x7fffff;\n\n  var s16 = (u >> 16) & 0x8000 // top bit is sign\n  const exp = (u >> 23) & 0xff // then 5 bits of exponent\n  const mant = u & 0x7fffff\n\n  //   if (exp == 0 && mant == 0)\n  //     ;              /* 0.0, -0.0 */\n\n  // hildjj: zeros already handled.  Assert if you don't believe me.\n\n  //   else if (exp >= 113 && exp <= 142) /* normalized */\n  //     s16 += ((exp - 112) << 10) + (mant >> 13);\n  if ((exp >= 113) && (exp <= 142)) {\n    s16 += ((exp - 112) << 10) + (mant >> 13)\n\n  //   else if (exp >= 103 && exp < 113) { /* denorm, exp16 = 0 */\n  //     if (mant & ((1 << (126 - exp)) - 1))\n  //       goto float32;         /* loss of precision */\n  //     s16 += ((mant + 0x800000) >> (126 - exp));\n  } else if ((exp >= 103) && (exp < 113)) {\n    if (mant & ((1 << (126 - exp)) - 1)) {\n      return false\n    }\n    s16 += ((mant + 0x800000) >> (126 - exp))\n\n    //   } else if (exp == 255 && mant == 0) { /* Inf */\n    //     s16 += 0x7c00;\n\n    // hildjj: Infinity already handled\n\n  //   } else\n  //     goto float32;           /* loss of range */\n  } else {\n    return false\n  }\n\n  //   ensure_writable(3);\n  //   u16 = s16;\n  //   be16 = hton16p((const uint8_t*)&u16);\n  buf.writeUInt16BE(s16, 0)\n  return true\n}\n\nexports.keySorter = function (a, b) {\n  var lenA = a[0].byteLength\n  var lenB = b[0].byteLength\n\n  if (lenA > lenB) {\n    return 1\n  }\n\n  if (lenB > lenA) {\n    return -1\n  }\n\n  return a[0].compare(b[0])\n}\n\n// Adapted from http://www.2ality.com/2012/03/signedzero.html\nexports.isNegativeZero = (x) => {\n  return x === 0 && (1 / x < 0)\n}\n\nexports.nextPowerOf2 = (n) => {\n  let count = 0\n  // First n in the below condition is for\n  // the case where n is 0\n  if (n && !(n & (n - 1))) {\n    return n\n  }\n\n  while (n !== 0) {\n    n >>= 1\n    count += 1\n  }\n\n  return 1 << count\n}\n", "'use strict'\n\nconst constants = require('./constants')\nconst MT = constants.MT\nconst SIMPLE = constants.SIMPLE\nconst SYMS = constants.SYMS\n\n/**\n * A CBOR Simple Value that does not map onto a known constant.\n */\nclass Simple {\n  /**\n   * Creates an instance of Simple.\n   *\n   * @param {integer} value - the simple value's integer value\n   */\n  constructor (value) {\n    if (typeof value !== 'number') {\n      throw new Error('Invalid Simple type: ' + (typeof value))\n    }\n    if ((value < 0) || (value > 255) || ((value | 0) !== value)) {\n      throw new Error('value must be a small positive integer: ' + value)\n    }\n    this.value = value\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  toString () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Debug string for simple value\n   *\n   * @returns {string} simple(value)\n   */\n  inspect () {\n    return 'simple(' + this.value + ')'\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    return gen._pushInt(this.value, MT.SIMPLE_FLOAT)\n  }\n\n  /**\n   * Is the given object a Simple?\n   *\n   * @param {any} obj - object to test\n   * @returns {bool} - is it Simple?\n   */\n  static isSimple (obj) {\n    return obj instanceof Simple\n  }\n\n  /**\n   * Decode from the CBOR additional information into a JavaScript value.\n   * If the CBOR item has no parent, return a \"safe\" symbol instead of\n   * `null` or `undefined`, so that the value can be passed through a\n   * stream in object mode.\n   *\n   * @param {Number} val - the CBOR additional info to convert\n   * @param {bool} hasParent - Does the CBOR item have a parent?\n   * @returns {(null|undefined|Boolean|Symbol)} - the decoded value\n   */\n  static decode (val, hasParent) {\n    if (hasParent == null) {\n      hasParent = true\n    }\n    switch (val) {\n      case SIMPLE.FALSE:\n        return false\n      case SIMPLE.TRUE:\n        return true\n      case SIMPLE.NULL:\n        if (hasParent) {\n          return null\n        } else {\n          return SYMS.NULL\n        }\n      case SIMPLE.UNDEFINED:\n        if (hasParent) {\n          return undefined\n        } else {\n          return SYMS.UNDEFINED\n        }\n      case -1:\n        if (!hasParent) {\n          throw new Error('Invalid BREAK')\n        }\n        return SYMS.BREAK\n      default:\n        return new Simple(val)\n    }\n  }\n}\n\nmodule.exports = Simple\n", "'use strict'\n\n/**\n * A CBOR tagged item, where the tag does not have semantics specified at the\n * moment, or those semantics threw an error during parsing. Typically this will\n * be an extension point you're not yet expecting.\n */\nclass Tagged {\n  /**\n   * Creates an instance of Tagged.\n   *\n   * @param {Number} tag - the number of the tag\n   * @param {any} value - the value inside the tag\n   * @param {Error} err - the error that was thrown parsing the tag, or null\n   */\n  constructor (tag, value, err) {\n    this.tag = tag\n    this.value = value\n    this.err = err\n    if (typeof this.tag !== 'number') {\n      throw new Error('Invalid tag type (' + (typeof this.tag) + ')')\n    }\n    if ((this.tag < 0) || ((this.tag | 0) !== this.tag)) {\n      throw new Error('Tag must be a positive integer: ' + this.tag)\n    }\n  }\n\n  /**\n   * Convert to a String\n   *\n   * @returns {String} string of the form '1(2)'\n   */\n  toString () {\n    return `${this.tag}(${JSON.stringify(this.value)})`\n  }\n\n  /**\n   * Push the simple value onto the CBOR stream\n   *\n   * @param {cbor.Encoder} gen The generator to push onto\n   * @returns {number}\n   */\n  encodeCBOR (gen) {\n    gen._pushTag(this.tag)\n    return gen.pushAny(this.value)\n  }\n\n  /**\n   * If we have a converter for this type, do the conversion.  Some converters\n   * are built-in.  Additional ones can be passed in.  If you want to remove\n   * a built-in converter, pass a converter in whose value is 'null' instead\n   * of a function.\n   *\n   * @param {Object} converters - keys in the object are a tag number, the value\n   *   is a function that takes the decoded CBOR and returns a JavaScript value\n   *   of the appropriate type.  Throw an exception in the function on errors.\n   * @returns {any} - the converted item\n   */\n  convert (converters) {\n    var er, f\n    f = converters != null ? converters[this.tag] : undefined\n    if (typeof f !== 'function') {\n      f = Tagged['_tag' + this.tag]\n      if (typeof f !== 'function') {\n        return this\n      }\n    }\n    try {\n      return f.call(Tagged, this.value)\n    } catch (error) {\n      er = error\n      this.err = er\n      return this\n    }\n  }\n}\n\nmodule.exports = Tagged\n", "'use strict';\n\nconst { URL, URLSearchParams, format } = require('url');\n\n// https://github.com/nodejs/node/issues/12682\nconst defaultBase = 'http://localhost';\n\nclass URLWithLegacySupport extends URL {\n    constructor(url = '', base = defaultBase) {\n        super(url, base);\n        this.path = this.pathname + this.search;\n        this.auth =\n            this.username && this.password ?\n                this.username + ':' + this.password :\n                null;\n        this.query =\n            this.search && this.search.startsWith('?') ?\n                this.search.slice(1) :\n                null;\n    }\n\n    format() {\n        return this.toString();\n    }\n}\n\nmodule.exports = {\n    URLWithLegacySupport,\n    URLSearchParams,\n    format,\n    defaultBase\n};\n", "'use strict';\n\nconst { URLWithLegacySupport, format } = require('./url');\n\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\n    let protocol = location.protocol ?\n        location.protocol.replace(':', '') :\n        'http';\n\n    // Check protocol map\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\n    let urlParsed;\n\n    try {\n        urlParsed = new URLWithLegacySupport(url);\n    } catch (err) {\n        urlParsed = {};\n    }\n\n    const base = Object.assign({}, location, {\n        protocol: protocol || urlParsed.protocol,\n        host: location.host || urlParsed.host\n    });\n\n    return new URLWithLegacySupport(url, format(base)).toString();\n};\n", "'use strict';\n\nconst {\n    URLWithLegacySupport,\n    format,\n    URLSearchParams,\n    defaultBase\n} = require('./src/url');\nconst relative = require('./src/relative');\n\nmodule.exports = {\n    URL: URLWithLegacySupport,\n    URLSearchParams,\n    format,\n    relative,\n    defaultBase\n};\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst ieee754 = require('ieee754')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst parser = require('./decoder.asm')\nconst utils = require('./utils')\nconst c = require('./constants')\nconst Simple = require('./simple')\nconst Tagged = require('./tagged')\nconst { URL } = require('iso-url')\n\n/**\n * Transform binary cbor data into JavaScript objects.\n */\nclass Decoder {\n  /**\n   * @param {Object} [opts={}]\n   * @param {number} [opts.size=65536] - Size of the allocated heap.\n   */\n  constructor (opts) {\n    opts = opts || {}\n\n    if (!opts.size || opts.size < 0x10000) {\n      opts.size = 0x10000\n    } else {\n      // Ensure the size is a power of 2\n      opts.size = utils.nextPowerOf2(opts.size)\n    }\n\n    // Heap use to share the input with the parser\n    this._heap = new ArrayBuffer(opts.size)\n    this._heap8 = new Uint8Array(this._heap)\n    this._buffer = Buffer.from(this._heap)\n\n    this._reset()\n\n    // Known tags\n    this._knownTags = Object.assign({\n      0: (val) => new Date(val),\n      1: (val) => new Date(val * 1000),\n      2: (val) => utils.arrayBufferToBignumber(val),\n      3: (val) => c.NEG_ONE.minus(utils.arrayBufferToBignumber(val)),\n      4: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TEN.pow(v[0]).times(v[1])\n      },\n      5: (v) => {\n        // const v = new Uint8Array(val)\n        return c.TWO.pow(v[0]).times(v[1])\n      },\n      32: (val) => new URL(val),\n      35: (val) => new RegExp(val)\n    }, opts.tags)\n\n    // Initialize asm based parser\n    this.parser = parser(global, {\n      // eslint-disable-next-line no-console\n      log: console.log.bind(console),\n      pushInt: this.pushInt.bind(this),\n      pushInt32: this.pushInt32.bind(this),\n      pushInt32Neg: this.pushInt32Neg.bind(this),\n      pushInt64: this.pushInt64.bind(this),\n      pushInt64Neg: this.pushInt64Neg.bind(this),\n      pushFloat: this.pushFloat.bind(this),\n      pushFloatSingle: this.pushFloatSingle.bind(this),\n      pushFloatDouble: this.pushFloatDouble.bind(this),\n      pushTrue: this.pushTrue.bind(this),\n      pushFalse: this.pushFalse.bind(this),\n      pushUndefined: this.pushUndefined.bind(this),\n      pushNull: this.pushNull.bind(this),\n      pushInfinity: this.pushInfinity.bind(this),\n      pushInfinityNeg: this.pushInfinityNeg.bind(this),\n      pushNaN: this.pushNaN.bind(this),\n      pushNaNNeg: this.pushNaNNeg.bind(this),\n      pushArrayStart: this.pushArrayStart.bind(this),\n      pushArrayStartFixed: this.pushArrayStartFixed.bind(this),\n      pushArrayStartFixed32: this.pushArrayStartFixed32.bind(this),\n      pushArrayStartFixed64: this.pushArrayStartFixed64.bind(this),\n      pushObjectStart: this.pushObjectStart.bind(this),\n      pushObjectStartFixed: this.pushObjectStartFixed.bind(this),\n      pushObjectStartFixed32: this.pushObjectStartFixed32.bind(this),\n      pushObjectStartFixed64: this.pushObjectStartFixed64.bind(this),\n      pushByteString: this.pushByteString.bind(this),\n      pushByteStringStart: this.pushByteStringStart.bind(this),\n      pushUtf8String: this.pushUtf8String.bind(this),\n      pushUtf8StringStart: this.pushUtf8StringStart.bind(this),\n      pushSimpleUnassigned: this.pushSimpleUnassigned.bind(this),\n      pushTagUnassigned: this.pushTagUnassigned.bind(this),\n      pushTagStart: this.pushTagStart.bind(this),\n      pushTagStart4: this.pushTagStart4.bind(this),\n      pushTagStart8: this.pushTagStart8.bind(this),\n      pushBreak: this.pushBreak.bind(this)\n    }, this._heap)\n  }\n\n  get _depth () {\n    return this._parents.length\n  }\n\n  get _currentParent () {\n    return this._parents[this._depth - 1]\n  }\n\n  get _ref () {\n    return this._currentParent.ref\n  }\n\n  // Finish the current parent\n  _closeParent () {\n    var p = this._parents.pop()\n\n    if (p.length > 0) {\n      throw new Error(`Missing ${p.length} elements`)\n    }\n\n    switch (p.type) {\n      case c.PARENT.TAG:\n        this._push(\n          this.createTag(p.ref[0], p.ref[1])\n        )\n        break\n      case c.PARENT.BYTE_STRING:\n        this._push(this.createByteString(p.ref, p.length))\n        break\n      case c.PARENT.UTF8_STRING:\n        this._push(this.createUtf8String(p.ref, p.length))\n        break\n      case c.PARENT.MAP:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createMap(p.ref, p.length))\n        break\n      case c.PARENT.OBJECT:\n        if (p.values % 2 > 0) {\n          throw new Error('Odd number of elements in the map')\n        }\n        this._push(this.createObject(p.ref, p.length))\n        break\n      case c.PARENT.ARRAY:\n        this._push(this.createArray(p.ref, p.length))\n        break\n      default:\n        break\n    }\n\n    if (this._currentParent && this._currentParent.type === c.PARENT.TAG) {\n      this._dec()\n    }\n  }\n\n  // Reduce the expected length of the current parent by one\n  _dec () {\n    const p = this._currentParent\n    // The current parent does not know the epxected child length\n\n    if (p.length < 0) {\n      return\n    }\n\n    p.length--\n\n    // All children were seen, we can close the current parent\n    if (p.length === 0) {\n      this._closeParent()\n    }\n  }\n\n  // Push any value to the current parent\n  _push (val, hasChildren) {\n    const p = this._currentParent\n    p.values++\n\n    switch (p.type) {\n      case c.PARENT.ARRAY:\n      case c.PARENT.BYTE_STRING:\n      case c.PARENT.UTF8_STRING:\n        if (p.length > -1) {\n          this._ref[this._ref.length - p.length] = val\n        } else {\n          this._ref.push(val)\n        }\n        this._dec()\n        break\n      case c.PARENT.OBJECT:\n        if (p.tmpKey != null) {\n          this._ref[p.tmpKey] = val\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n\n          if (typeof p.tmpKey !== 'string') {\n            // too bad, convert to a Map\n            p.type = c.PARENT.MAP\n            p.ref = utils.buildMap(p.ref)\n          }\n        }\n        break\n      case c.PARENT.MAP:\n        if (p.tmpKey != null) {\n          this._ref.set(p.tmpKey, val)\n          p.tmpKey = null\n          this._dec()\n        } else {\n          p.tmpKey = val\n        }\n        break\n      case c.PARENT.TAG:\n        this._ref.push(val)\n        if (!hasChildren) {\n          this._dec()\n        }\n        break\n      default:\n        throw new Error('Unknown parent type')\n    }\n  }\n\n  // Create a new parent in the parents list\n  _createParent (obj, type, len) {\n    this._parents[this._depth] = {\n      type: type,\n      length: len,\n      ref: obj,\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  // Reset all state back to the beginning, also used for initiatlization\n  _reset () {\n    this._res = []\n    this._parents = [{\n      type: c.PARENT.ARRAY,\n      length: -1,\n      ref: this._res,\n      values: 0,\n      tmpKey: null\n    }]\n  }\n\n  // -- Interface to customize deoding behaviour\n  createTag (tagNumber, value) {\n    const typ = this._knownTags[tagNumber]\n\n    if (!typ) {\n      return new Tagged(tagNumber, value)\n    }\n\n    return typ(value)\n  }\n\n  createMap (obj, len) {\n    return obj\n  }\n\n  createObject (obj, len) {\n    return obj\n  }\n\n  createArray (arr, len) {\n    return arr\n  }\n\n  createByteString (raw, len) {\n    return Buffer.concat(raw)\n  }\n\n  createByteStringFromHeap (start, end) {\n    if (start === end) {\n      return Buffer.alloc(0)\n    }\n\n    return Buffer.from(this._heap.slice(start, end))\n  }\n\n  createInt (val) {\n    return val\n  }\n\n  createInt32 (f, g) {\n    return utils.buildInt32(f, g)\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return utils.buildInt64(f1, f2, g1, g2)\n  }\n\n  createFloat (val) {\n    return val\n  }\n\n  createFloatSingle (a, b, c, d) {\n    return ieee754.read([a, b, c, d], 0, false, 23, 4)\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    return ieee754.read([a, b, c, d, e, f, g, h], 0, false, 52, 8)\n  }\n\n  createInt32Neg (f, g) {\n    return -1 - utils.buildInt32(f, g)\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    const f = utils.buildInt32(f1, f2)\n    const g = utils.buildInt32(g1, g2)\n\n    if (f > c.MAX_SAFE_HIGH) {\n      return c.NEG_ONE.minus(new Bignumber(f).times(c.SHIFT32).plus(g))\n    }\n\n    return -1 - ((f * c.SHIFT32) + g)\n  }\n\n  createTrue () {\n    return true\n  }\n\n  createFalse () {\n    return false\n  }\n\n  createNull () {\n    return null\n  }\n\n  createUndefined () {\n    return undefined\n  }\n\n  createInfinity () {\n    return Infinity\n  }\n\n  createInfinityNeg () {\n    return -Infinity\n  }\n\n  createNaN () {\n    return NaN\n  }\n\n  createNaNNeg () {\n    return -NaN\n  }\n\n  createUtf8String (raw, len) {\n    return raw.join('')\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    if (start === end) {\n      return ''\n    }\n\n    return this._buffer.toString('utf8', start, end)\n  }\n\n  createSimpleUnassigned (val) {\n    return new Simple(val)\n  }\n\n  // -- Interface for decoder.asm.js\n\n  pushInt (val) {\n    this._push(this.createInt(val))\n  }\n\n  pushInt32 (f, g) {\n    this._push(this.createInt32(f, g))\n  }\n\n  pushInt64 (f1, f2, g1, g2) {\n    this._push(this.createInt64(f1, f2, g1, g2))\n  }\n\n  pushFloat (val) {\n    this._push(this.createFloat(val))\n  }\n\n  pushFloatSingle (a, b, c, d) {\n    this._push(this.createFloatSingle(a, b, c, d))\n  }\n\n  pushFloatDouble (a, b, c, d, e, f, g, h) {\n    this._push(this.createFloatDouble(a, b, c, d, e, f, g, h))\n  }\n\n  pushInt32Neg (f, g) {\n    this._push(this.createInt32Neg(f, g))\n  }\n\n  pushInt64Neg (f1, f2, g1, g2) {\n    this._push(this.createInt64Neg(f1, f2, g1, g2))\n  }\n\n  pushTrue () {\n    this._push(this.createTrue())\n  }\n\n  pushFalse () {\n    this._push(this.createFalse())\n  }\n\n  pushNull () {\n    this._push(this.createNull())\n  }\n\n  pushUndefined () {\n    this._push(this.createUndefined())\n  }\n\n  pushInfinity () {\n    this._push(this.createInfinity())\n  }\n\n  pushInfinityNeg () {\n    this._push(this.createInfinityNeg())\n  }\n\n  pushNaN () {\n    this._push(this.createNaN())\n  }\n\n  pushNaNNeg () {\n    this._push(this.createNaNNeg())\n  }\n\n  pushArrayStart () {\n    this._createParent([], c.PARENT.ARRAY, -1)\n  }\n\n  pushArrayStartFixed (len) {\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createArrayStartFixed(len)\n  }\n\n  pushArrayStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createArrayStartFixed(len)\n  }\n\n  pushObjectStart () {\n    this._createObjectStartFixed(-1)\n  }\n\n  pushObjectStartFixed (len) {\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed32 (len1, len2) {\n    const len = utils.buildInt32(len1, len2)\n    this._createObjectStartFixed(len)\n  }\n\n  pushObjectStartFixed64 (len1, len2, len3, len4) {\n    const len = utils.buildInt64(len1, len2, len3, len4)\n    this._createObjectStartFixed(len)\n  }\n\n  pushByteStringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.BYTE_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushByteString (start, end) {\n    this._push(this.createByteStringFromHeap(start, end))\n  }\n\n  pushUtf8StringStart () {\n    this._parents[this._depth] = {\n      type: c.PARENT.UTF8_STRING,\n      length: -1,\n      ref: [],\n      values: 0,\n      tmpKey: null\n    }\n  }\n\n  pushUtf8String (start, end) {\n    this._push(this.createUtf8StringFromHeap(start, end))\n  }\n\n  pushSimpleUnassigned (val) {\n    this._push(this.createSimpleUnassigned(val))\n  }\n\n  pushTagStart (tag) {\n    this._parents[this._depth] = {\n      type: c.PARENT.TAG,\n      length: 1,\n      ref: [tag]\n    }\n  }\n\n  pushTagStart4 (f, g) {\n    this.pushTagStart(utils.buildInt32(f, g))\n  }\n\n  pushTagStart8 (f1, f2, g1, g2) {\n    this.pushTagStart(utils.buildInt64(f1, f2, g1, g2))\n  }\n\n  pushTagUnassigned (tagNumber) {\n    this._push(this.createTag(tagNumber))\n  }\n\n  pushBreak () {\n    if (this._currentParent.length > -1) {\n      throw new Error('Unexpected break')\n    }\n\n    this._closeParent()\n  }\n\n  _createObjectStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createObject({}))\n      return\n    }\n\n    this._createParent({}, c.PARENT.OBJECT, len)\n  }\n\n  _createArrayStartFixed (len) {\n    if (len === 0) {\n      this._push(this.createArray([]))\n      return\n    }\n\n    this._createParent(new Array(len), c.PARENT.ARRAY, len)\n  }\n\n  _decode (input) {\n    if (input.byteLength === 0) {\n      throw new Error('Input too short')\n    }\n\n    this._reset()\n    this._heap8.set(input)\n    const code = this.parser.parse(input.byteLength)\n\n    if (this._depth > 1) {\n      while (this._currentParent.length === 0) {\n        this._closeParent()\n      }\n      if (this._depth > 1) {\n        throw new Error('Undeterminated nesting')\n      }\n    }\n\n    if (code > 0) {\n      throw new Error('Failed to parse')\n    }\n\n    if (this._res.length === 0) {\n      throw new Error('No valid result')\n    }\n  }\n\n  // -- Public Interface\n\n  decodeFirst (input) {\n    this._decode(input)\n\n    return this._res[0]\n  }\n\n  decodeAll (input) {\n    this._decode(input)\n\n    return this._res\n  }\n\n  /**\n   * Decode the first cbor object.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {*}\n   */\n  static decode (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeFirst(input)\n  }\n\n  /**\n   * Decode all cbor objects.\n   *\n   * @param {Buffer|string} input\n   * @param {string} [enc='hex'] - Encoding used if a string is passed.\n   * @returns {Array<*>}\n   */\n  static decodeAll (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Decoder({ size: input.length })\n    return dec.decodeAll(input)\n  }\n}\n\nDecoder.decodeFirst = Decoder.decode\n\nmodule.exports = Decoder\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst Decoder = require('./decoder')\nconst utils = require('./utils')\n\n/**\n * Output the diagnostic format from a stream of CBOR bytes.\n *\n */\nclass Diagnose extends Decoder {\n  createTag (tagNumber, value) {\n    return `${tagNumber}(${value})`\n  }\n\n  createInt (val) {\n    return super.createInt(val).toString()\n  }\n\n  createInt32 (f, g) {\n    return super.createInt32(f, g).toString()\n  }\n\n  createInt64 (f1, f2, g1, g2) {\n    return super.createInt64(f1, f2, g1, g2).toString()\n  }\n\n  createInt32Neg (f, g) {\n    return super.createInt32Neg(f, g).toString()\n  }\n\n  createInt64Neg (f1, f2, g1, g2) {\n    return super.createInt64Neg(f1, f2, g1, g2).toString()\n  }\n\n  createTrue () {\n    return 'true'\n  }\n\n  createFalse () {\n    return 'false'\n  }\n\n  createFloat (val) {\n    const fl = super.createFloat(val)\n    if (utils.isNegativeZero(val)) {\n      return '-0_1'\n    }\n\n    return `${fl}_1`\n  }\n\n  createFloatSingle (a, b, c, d) {\n    const fl = super.createFloatSingle(a, b, c, d)\n    return `${fl}_2`\n  }\n\n  createFloatDouble (a, b, c, d, e, f, g, h) {\n    const fl = super.createFloatDouble(a, b, c, d, e, f, g, h)\n    return `${fl}_3`\n  }\n\n  createByteString (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n    return `h'${val}`\n  }\n\n  createByteStringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createByteStringFromHeap(start, end)\n    )).toString('hex')\n\n    return `h'${val}'`\n  }\n\n  createInfinity () {\n    return 'Infinity_1'\n  }\n\n  createInfinityNeg () {\n    return '-Infinity_1'\n  }\n\n  createNaN () {\n    return 'NaN_1'\n  }\n\n  createNaNNeg () {\n    return '-NaN_1'\n  }\n\n  createNull () {\n    return 'null'\n  }\n\n  createUndefined () {\n    return 'undefined'\n  }\n\n  createSimpleUnassigned (val) {\n    return `simple(${val})`\n  }\n\n  createArray (arr, len) {\n    const val = super.createArray(arr, len)\n\n    if (len === -1) {\n      // indefinite\n      return `[_ ${val.join(', ')}]`\n    }\n\n    return `[${val.join(', ')}]`\n  }\n\n  createMap (map, len) {\n    const val = super.createMap(map)\n    const list = Array.from(val.keys())\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${list}}`\n    }\n\n    return `{${list}}`\n  }\n\n  createObject (obj, len) {\n    const val = super.createObject(obj)\n    const map = Object.keys(val)\n      .reduce(collectObject(val), '')\n\n    if (len === -1) {\n      return `{_ ${map}}`\n    }\n\n    return `{${map}}`\n  }\n\n  createUtf8String (raw, len) {\n    const val = raw.join(', ')\n\n    if (len === -1) {\n      return `(_ ${val})`\n    }\n\n    return `\"${val}\"`\n  }\n\n  createUtf8StringFromHeap (start, end) {\n    const val = (Buffer.from(\n      super.createUtf8StringFromHeap(start, end)\n    )).toString('utf8')\n\n    return `\"${val}\"`\n  }\n\n  static diagnose (input, enc) {\n    if (typeof input === 'string') {\n      input = Buffer.from(input, enc || 'hex')\n    }\n\n    const dec = new Diagnose()\n    return dec.decodeFirst(input)\n  }\n}\n\nmodule.exports = Diagnose\n\nfunction collectObject (val) {\n  return (acc, key) => {\n    if (acc) {\n      return `${acc}, ${key}: ${val[key]}`\n    }\n    return `${key}: ${val[key]}`\n  }\n}\n", "'use strict'\n\nconst { Buffer } = require('buffer')\nconst { URL } = require('iso-url')\nconst Bignumber = require('bignumber.js').BigNumber\n\nconst utils = require('./utils')\nconst constants = require('./constants')\nconst MT = constants.MT\nconst NUMBYTES = constants.NUMBYTES\nconst SHIFT32 = constants.SHIFT32\nconst SYMS = constants.SYMS\nconst TAG = constants.TAG\nconst HALF = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.TWO\nconst FLOAT = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.FOUR\nconst DOUBLE = (constants.MT.SIMPLE_FLOAT << 5) | constants.NUMBYTES.EIGHT\nconst TRUE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.TRUE\nconst FALSE = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.FALSE\nconst UNDEFINED = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.UNDEFINED\nconst NULL = (constants.MT.SIMPLE_FLOAT << 5) | constants.SIMPLE.NULL\n\nconst MAXINT_BN = new Bignumber('0x20000000000000')\nconst BUF_NAN = Buffer.from('f97e00', 'hex')\nconst BUF_INF_NEG = Buffer.from('f9fc00', 'hex')\nconst BUF_INF_POS = Buffer.from('f97c00', 'hex')\n\nfunction toType (obj) {\n  // [object Type]\n  // --------8---1\n  return ({}).toString.call(obj).slice(8, -1)\n}\n\n/**\n * Transform JavaScript values into CBOR bytes\n *\n */\nclass Encoder {\n  /**\n   * @param {Object} [options={}]\n   * @param {function(Buffer)} options.stream\n   */\n  constructor (options) {\n    options = options || {}\n\n    this.streaming = typeof options.stream === 'function'\n    this.onData = options.stream\n\n    this.semanticTypes = [\n      [URL, this._pushUrl],\n      [Bignumber, this._pushBigNumber]\n    ]\n\n    const addTypes = options.genTypes || []\n    const len = addTypes.length\n    for (let i = 0; i < len; i++) {\n      this.addSemanticType(\n        addTypes[i][0],\n        addTypes[i][1]\n      )\n    }\n\n    this._reset()\n  }\n\n  addSemanticType (type, fun) {\n    const len = this.semanticTypes.length\n    for (let i = 0; i < len; i++) {\n      const typ = this.semanticTypes[i][0]\n      if (typ === type) {\n        const old = this.semanticTypes[i][1]\n        this.semanticTypes[i][1] = fun\n        return old\n      }\n    }\n    this.semanticTypes.push([type, fun])\n    return null\n  }\n\n  push (val) {\n    if (!val) {\n      return true\n    }\n\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = 0\n    this.resultLength[this.offset] = val.length\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  pushWrite (val, method, len) {\n    this.result[this.offset] = val\n    this.resultMethod[this.offset] = method\n    this.resultLength[this.offset] = len\n    this.offset++\n\n    if (this.streaming) {\n      this.onData(this.finalize())\n    }\n\n    return true\n  }\n\n  _pushUInt8 (val) {\n    return this.pushWrite(val, 1, 1)\n  }\n\n  _pushUInt16BE (val) {\n    return this.pushWrite(val, 2, 2)\n  }\n\n  _pushUInt32BE (val) {\n    return this.pushWrite(val, 3, 4)\n  }\n\n  _pushDoubleBE (val) {\n    return this.pushWrite(val, 4, 8)\n  }\n\n  _pushNaN () {\n    return this.push(BUF_NAN)\n  }\n\n  _pushInfinity (obj) {\n    const half = (obj < 0) ? BUF_INF_NEG : BUF_INF_POS\n    return this.push(half)\n  }\n\n  _pushFloat (obj) {\n    const b2 = Buffer.allocUnsafe(2)\n\n    if (utils.writeHalf(b2, obj)) {\n      if (utils.parseHalf(b2) === obj) {\n        return this._pushUInt8(HALF) && this.push(b2)\n      }\n    }\n\n    const b4 = Buffer.allocUnsafe(4)\n    b4.writeFloatBE(obj, 0)\n    if (b4.readFloatBE(0) === obj) {\n      return this._pushUInt8(FLOAT) && this.push(b4)\n    }\n\n    return this._pushUInt8(DOUBLE) && this._pushDoubleBE(obj)\n  }\n\n  _pushInt (obj, mt, orig) {\n    const m = mt << 5\n    if (obj < 24) {\n      return this._pushUInt8(m | obj)\n    }\n\n    if (obj <= 0xff) {\n      return this._pushUInt8(m | NUMBYTES.ONE) && this._pushUInt8(obj)\n    }\n\n    if (obj <= 0xffff) {\n      return this._pushUInt8(m | NUMBYTES.TWO) && this._pushUInt16BE(obj)\n    }\n\n    if (obj <= 0xffffffff) {\n      return this._pushUInt8(m | NUMBYTES.FOUR) && this._pushUInt32BE(obj)\n    }\n\n    if (obj <= Number.MAX_SAFE_INTEGER) {\n      return this._pushUInt8(m | NUMBYTES.EIGHT) &&\n        this._pushUInt32BE(Math.floor(obj / SHIFT32)) &&\n        this._pushUInt32BE(obj % SHIFT32)\n    }\n\n    if (mt === MT.NEG_INT) {\n      return this._pushFloat(orig)\n    }\n\n    return this._pushFloat(obj)\n  }\n\n  _pushIntNum (obj) {\n    if (obj < 0) {\n      return this._pushInt(-obj - 1, MT.NEG_INT, obj)\n    } else {\n      return this._pushInt(obj, MT.POS_INT)\n    }\n  }\n\n  _pushNumber (obj) {\n    switch (false) {\n      case (obj === obj): // eslint-disable-line\n        return this._pushNaN(obj)\n      case isFinite(obj):\n        return this._pushInfinity(obj)\n      case ((obj % 1) !== 0):\n        return this._pushIntNum(obj)\n      default:\n        return this._pushFloat(obj)\n    }\n  }\n\n  _pushString (obj) {\n    const len = Buffer.byteLength(obj, 'utf8')\n    return this._pushInt(len, MT.UTF8_STRING) && this.pushWrite(obj, 5, len)\n  }\n\n  _pushBoolean (obj) {\n    return this._pushUInt8(obj ? TRUE : FALSE)\n  }\n\n  _pushUndefined (obj) {\n    return this._pushUInt8(UNDEFINED)\n  }\n\n  _pushArray (gen, obj) {\n    const len = obj.length\n    if (!gen._pushInt(len, MT.ARRAY)) {\n      return false\n    }\n    for (let j = 0; j < len; j++) {\n      if (!gen.pushAny(obj[j])) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushTag (tag) {\n    return this._pushInt(tag, MT.TAG)\n  }\n\n  _pushDate (gen, obj) {\n    // Round date, to get seconds since 1970-01-01 00:00:00 as defined in\n    // Sec. 2.4.1 and get a possibly more compact encoding. Note that it is\n    // still allowed to encode fractions of seconds which can be achieved by\n    // changing overwriting the encode function for Date objects.\n    return gen._pushTag(TAG.DATE_EPOCH) && gen.pushAny(Math.round(obj / 1000))\n  }\n\n  _pushBuffer (gen, obj) {\n    return gen._pushInt(obj.length, MT.BYTE_STRING) && gen.push(obj)\n  }\n\n  _pushNoFilter (gen, obj) {\n    return gen._pushBuffer(gen, obj.slice())\n  }\n\n  _pushRegexp (gen, obj) {\n    return gen._pushTag(TAG.REGEXP) && gen.pushAny(obj.source)\n  }\n\n  _pushSet (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.ARRAY)) {\n      return false\n    }\n    for (const x of obj) {\n      if (!gen.pushAny(x)) {\n        return false\n      }\n    }\n    return true\n  }\n\n  _pushUrl (gen, obj) {\n    return gen._pushTag(TAG.URI) && gen.pushAny(obj.format())\n  }\n\n  _pushBigint (obj) {\n    let tag = TAG.POS_BIGINT\n    if (obj.isNegative()) {\n      obj = obj.negated().minus(1)\n      tag = TAG.NEG_BIGINT\n    }\n    let str = obj.toString(16)\n    if (str.length % 2) {\n      str = '0' + str\n    }\n    const buf = Buffer.from(str, 'hex')\n    return this._pushTag(tag) && this._pushBuffer(this, buf)\n  }\n\n  _pushBigNumber (gen, obj) {\n    if (obj.isNaN()) {\n      return gen._pushNaN()\n    }\n    if (!obj.isFinite()) {\n      return gen._pushInfinity(obj.isNegative() ? -Infinity : Infinity)\n    }\n    if (obj.isInteger()) {\n      return gen._pushBigint(obj)\n    }\n    if (!(gen._pushTag(TAG.DECIMAL_FRAC) &&\n      gen._pushInt(2, MT.ARRAY))) {\n      return false\n    }\n\n    const dec = obj.decimalPlaces()\n    const slide = obj.multipliedBy(new Bignumber(10).pow(dec))\n    if (!gen._pushIntNum(-dec)) {\n      return false\n    }\n    if (slide.abs().isLessThan(MAXINT_BN)) {\n      return gen._pushIntNum(slide.toNumber())\n    } else {\n      return gen._pushBigint(slide)\n    }\n  }\n\n  _pushMap (gen, obj) {\n    if (!gen._pushInt(obj.size, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      obj.size,\n      Array.from(obj)\n    )\n  }\n\n  _pushObject (obj) {\n    if (!obj) {\n      return this._pushUInt8(NULL)\n    }\n\n    var len = this.semanticTypes.length\n    for (var i = 0; i < len; i++) {\n      if (obj instanceof this.semanticTypes[i][0]) {\n        return this.semanticTypes[i][1].call(obj, this, obj)\n      }\n    }\n\n    var f = obj.encodeCBOR\n    if (typeof f === 'function') {\n      return f.call(obj, this)\n    }\n\n    var keys = Object.keys(obj)\n    var keyLength = keys.length\n    if (!this._pushInt(keyLength, MT.MAP)) {\n      return false\n    }\n\n    return this._pushRawMap(\n      keyLength,\n      keys.map((k) => [k, obj[k]])\n    )\n  }\n\n  _pushRawMap (len, map) {\n    // Sort keys for canoncialization\n    // 1. encode key\n    // 2. shorter key comes before longer key\n    // 3. same length keys are sorted with lower\n    //    byte value before higher\n\n    map = map.map(function (a) {\n      a[0] = Encoder.encode(a[0])\n      return a\n    }).sort(utils.keySorter)\n\n    for (var j = 0; j < len; j++) {\n      if (!this.push(map[j][0])) {\n        return false\n      }\n\n      if (!this.pushAny(map[j][1])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Alias for `.pushAny`\n   *\n   * @param {*} obj\n   * @returns {boolean} true on success\n   */\n  write (obj) {\n    return this.pushAny(obj)\n  }\n\n  /**\n   * Push any supported type onto the encoded stream\n   *\n   * @param {any} obj\n   * @returns {boolean} true on success\n   */\n  pushAny (obj) {\n    var typ = toType(obj)\n\n    switch (typ) {\n      case 'Number':\n        return this._pushNumber(obj)\n      case 'String':\n        return this._pushString(obj)\n      case 'Boolean':\n        return this._pushBoolean(obj)\n      case 'Object':\n        return this._pushObject(obj)\n      case 'Array':\n        return this._pushArray(this, obj)\n      case 'Uint8Array':\n        return this._pushBuffer(this, Buffer.isBuffer(obj) ? obj : Buffer.from(obj))\n      case 'Null':\n        return this._pushUInt8(NULL)\n      case 'Undefined':\n        return this._pushUndefined(obj)\n      case 'Map':\n        return this._pushMap(this, obj)\n      case 'Set':\n        return this._pushSet(this, obj)\n      case 'URL':\n        return this._pushUrl(this, obj)\n      case 'BigNumber':\n        return this._pushBigNumber(this, obj)\n      case 'Date':\n        return this._pushDate(this, obj)\n      case 'RegExp':\n        return this._pushRegexp(this, obj)\n      case 'Symbol':\n        switch (obj) {\n          case SYMS.NULL:\n            return this._pushObject(null)\n          case SYMS.UNDEFINED:\n            return this._pushUndefined(undefined)\n          // TODO: Add pluggable support for other symbols\n          default:\n            throw new Error('Unknown symbol: ' + obj.toString())\n        }\n      default:\n        throw new Error('Unknown type: ' + typeof obj + ', ' + (obj ? obj.toString() : ''))\n    }\n  }\n\n  finalize () {\n    if (this.offset === 0) {\n      return null\n    }\n\n    var result = this.result\n    var resultLength = this.resultLength\n    var resultMethod = this.resultMethod\n    var offset = this.offset\n\n    // Determine the size of the buffer\n    var size = 0\n    var i = 0\n\n    for (; i < offset; i++) {\n      size += resultLength[i]\n    }\n\n    var res = Buffer.allocUnsafe(size)\n    var index = 0\n    var length = 0\n\n    // Write the content into the result buffer\n    for (i = 0; i < offset; i++) {\n      length = resultLength[i]\n\n      switch (resultMethod[i]) {\n        case 0:\n          result[i].copy(res, index)\n          break\n        case 1:\n          res.writeUInt8(result[i], index, true)\n          break\n        case 2:\n          res.writeUInt16BE(result[i], index, true)\n          break\n        case 3:\n          res.writeUInt32BE(result[i], index, true)\n          break\n        case 4:\n          res.writeDoubleBE(result[i], index, true)\n          break\n        case 5:\n          res.write(result[i], index, length, 'utf8')\n          break\n        default:\n          throw new Error('unkown method')\n      }\n\n      index += length\n    }\n\n    var tmp = res\n\n    this._reset()\n\n    return tmp\n  }\n\n  _reset () {\n    this.result = []\n    this.resultMethod = []\n    this.resultLength = []\n    this.offset = 0\n  }\n\n  /**\n   * Encode the given value\n   * @param {*} o\n   * @returns {Buffer}\n   */\n  static encode (o) {\n    const enc = new Encoder()\n    const ret = enc.pushAny(o)\n    if (!ret) {\n      throw new Error('Failed to encode input')\n    }\n\n    return enc.finalize()\n  }\n}\n\nmodule.exports = Encoder\n", "'use strict'\n\n// exports.Commented = require('./commented')\nexports.Diagnose = require('./diagnose')\nexports.Decoder = require('./decoder')\nexports.Encoder = require('./encoder')\nexports.Simple = require('./simple')\nexports.Tagged = require('./tagged')\n\n// exports.comment = exports.Commented.comment\nexports.decodeAll = exports.Decoder.decodeAll\nexports.decodeFirst = exports.Decoder.decodeFirst\nexports.diagnose = exports.Diagnose.diagnose\nexports.encode = exports.Encoder.encode\nexports.decode = exports.Decoder.decode\n\nexports.leveldb = {\n  decode: exports.Decoder.decodeAll,\n  encode: exports.Encoder.encode,\n  buffer: true,\n  name: 'cbor'\n}\n", "/**\n * Concatenate multiple array buffers.\n * @param buffers The buffers to concatenate.\n */\nexport function concat(...buffers: ArrayBuffer[]): ArrayBuffer {\n  const result = new Uint8Array(buffers.reduce((acc, curr) => acc + curr.byteLength, 0));\n  let index = 0;\n  for (const b of buffers) {\n    result.set(new Uint8Array(b), index);\n    index += b.byteLength;\n  }\n  return result.buffer;\n}\n\n/**\n * Transforms a buffer to an hexadecimal string. This will use the buffer as an Uint8Array.\n * @param buffer The buffer to return the hexadecimal string of.\n */\nexport function toHex(buffer: ArrayBuffer): string {\n  return [...new Uint8Array(buffer)].map(x => x.toString(16).padStart(2, '0')).join('');\n}\n\nconst hexRe = new RegExp(/^[0-9a-fA-F]+$/);\n\n/**\n * Transforms a hexadecimal string into an array buffer.\n * @param hex The hexadecimal string to use.\n */\nexport function fromHex(hex: string): ArrayBuffer {\n  if (!hexRe.test(hex)) {\n    throw new Error('Invalid hexadecimal string.');\n  }\n  const buffer = [...hex]\n    .reduce((acc, curr, i) => {\n      acc[(i / 2) | 0] = (acc[(i / 2) | 0] || '') + curr;\n      return acc;\n    }, [] as string[])\n    .map(x => Number.parseInt(x, 16));\n\n  return new Uint8Array(buffer).buffer;\n}\n\n/**\n *\n * @param b1 array buffer 1\n * @param b2 array buffer 2\n * @returns number - negative if b1 < b2, positive if b1 > b2, 0 if b1 === b2\n */\nexport function compare(b1: ArrayBuffer, b2: ArrayBuffer): number {\n  if (b1.byteLength !== b2.byteLength) {\n    return b1.byteLength - b2.byteLength;\n  }\n\n  const u1 = new Uint8Array(b1);\n  const u2 = new Uint8Array(b2);\n  for (let i = 0; i < u1.length; i++) {\n    if (u1[i] !== u2[i]) {\n      return u1[i] - u2[i];\n    }\n  }\n  return 0;\n}\n\n/**\n * Checks two array buffers for equality.\n * @param b1 array buffer 1\n * @param b2 array buffer 2\n * @returns boolean\n */\nexport function bufEquals(b1: ArrayBuffer, b2: ArrayBuffer): boolean {\n  return compare(b1, b2) === 0;\n}\n\n/**\n * Returns a true ArrayBuffer from a Uint8Array, as Uint8Array.buffer is unsafe.\n * @param {Uint8Array} arr Uint8Array to convert\n * @returns ArrayBuffer\n */\nexport function uint8ToBuf(arr: Uint8Array): ArrayBuffer {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength).buffer;\n}\n\n/**\n * Returns a true ArrayBuffer from an ArrayBufferLike object.\n * @param bufLike a buffer-like object\n * @returns ArrayBuffer\n */\nexport function bufFromBufLike(\n  bufLike:\n    | ArrayBuffer\n    | Uint8Array\n    | DataView\n    | ArrayBufferView\n    | ArrayBufferLike\n    | [number]\n    | number[]\n    | { buffer: ArrayBuffer },\n): ArrayBuffer {\n  if (bufLike instanceof Uint8Array) {\n    return uint8ToBuf(bufLike);\n  }\n  if (bufLike instanceof ArrayBuffer) {\n    return bufLike;\n  }\n  if (Array.isArray(bufLike)) {\n    return uint8ToBuf(new Uint8Array(bufLike));\n  }\n  if ('buffer' in bufLike) {\n    return bufFromBufLike(bufLike.buffer);\n  }\n  return uint8ToBuf(new Uint8Array(bufLike));\n}\n", "import { lebEncode } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport borc from 'borc';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { compare, concat, uint8ToBuf } from './utils/buffer';\n\nexport type RequestId = ArrayBuffer & { __requestId__: void };\n\n/**\n * sha256 hash the provided Buffer\n * @param data - input to hash function\n */\nexport function hash(data: ArrayBuffer): ArrayBuffer {\n  return uint8ToBuf(sha256.create().update(new Uint8Array(data)).digest());\n}\n\ninterface ToHashable {\n  toHash(): unknown;\n}\n\n/**\n *\n * @param value unknown value\n * @returns ArrayBuffer\n */\nexport function hashValue(value: unknown): ArrayBuffer {\n  if (value instanceof borc.Tagged) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return hashValue((value as any).value);\n  } else if (typeof value === 'string') {\n    return hashString(value);\n  } else if (typeof value === 'number') {\n    return hash(lebEncode(value));\n  } else if (value instanceof ArrayBuffer || ArrayBuffer.isView(value)) {\n    return hash(value as ArrayBuffer);\n  } else if (Array.isArray(value)) {\n    const vals = value.map(hashValue);\n    return hash(concat(...vals));\n  } else if (value && typeof value === 'object' && (value as Principal)._isPrincipal) {\n    return hash((value as Principal).toUint8Array());\n  } else if (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof (value as ToHashable).toHash === 'function'\n  ) {\n    return hashValue((value as ToHashable).toHash());\n    // TODO This should be move to a specific async method as the webauthn flow required\n    // the flow to be synchronous to ensure Safari touch id works.\n    // } else if (value instanceof Promise) {\n    //   return value.then(x => hashValue(x));\n  } else if (typeof value === 'object') {\n    return hashOfMap(value as Record<string, unknown>);\n  } else if (typeof value === 'bigint') {\n    // Do this check much later than the other bigint check because this one is much less\n    // type-safe.\n    // So we want to try all the high-assurance type guards before this 'probable' one.\n    return hash(lebEncode(value));\n  }\n  throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {\n    // include so logs/callers can understand the confusing value.\n    // (when stringified in error message, prototype info is lost)\n    value,\n  });\n}\n\nconst hashString = (value: string): ArrayBuffer => {\n  const encoded = new TextEncoder().encode(value);\n  return hash(encoded);\n};\n\n/**\n * Get the RequestId of the provided ic-ref request.\n * RequestId is the result of the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param request - ic-ref request to hash into RequestId\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function requestIdOf(request: Record<string, any>): RequestId {\n  return hashOfMap(request) as RequestId;\n}\n\n/**\n * Hash a map into an ArrayBuffer using the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param map - Any non-nested object\n * @returns ArrayBuffer\n */\nexport function hashOfMap(map: Record<string, unknown>): ArrayBuffer {\n  const hashed: Array<[ArrayBuffer, ArrayBuffer]> = Object.entries(map)\n    .filter(([, value]) => value !== undefined)\n    .map(([key, value]: [string, unknown]) => {\n      const hashedKey = hashString(key);\n      const hashedValue = hashValue(value);\n\n      return [hashedKey, hashedValue] as [ArrayBuffer, ArrayBuffer];\n    });\n\n  const traversed: Array<[ArrayBuffer, ArrayBuffer]> = hashed;\n\n  const sorted: Array<[ArrayBuffer, ArrayBuffer]> = traversed.sort(([k1], [k2]) => {\n    return compare(k1, k2);\n  });\n\n  const concatenated: ArrayBuffer = concat(...sorted.map(x => concat(...x)));\n  const result = hash(concatenated);\n  return result;\n}\n", "import { Principal } from '@dfinity/principal';\nimport { HttpAgentRequest } from './agent/http/types';\nimport { requestIdOf } from './request_id';\nimport { concat, toHex } from './utils/buffer';\n\nconst domainSeparator = new TextEncoder().encode('\\x0Aic-request');\n\n/**\n * A Key Pair, containing a secret and public key.\n */\nexport interface KeyPair {\n  secretKey: ArrayBuffer;\n  publicKey: PublicKey;\n}\n\n/**\n * A public key that is DER encoded. This is a branded ArrayBuffer.\n */\nexport type DerEncodedPublicKey = ArrayBuffer & { __derEncodedPublicKey__?: void };\n\n/**\n * A signature array buffer.\n */\nexport type Signature = ArrayBuffer & { __signature__: void };\n\n/**\n * A Public Key implementation.\n */\nexport interface PublicKey {\n  toDer(): DerEncodedPublicKey;\n  // rawKey, toRaw, and derKey are optional for backwards compatibility.\n  toRaw?(): ArrayBuffer;\n  rawKey?: ArrayBuffer;\n  derKey?: DerEncodedPublicKey;\n}\n\n/**\n * A General Identity object. This does not have to be a private key (for example,\n * the Anonymous identity), but it must be able to transform request.\n */\nexport interface Identity {\n  /**\n   * Get the principal represented by this identity. Normally should be a\n   * `Principal.selfAuthenticating()`.\n   */\n  getPrincipal(): Principal;\n\n  /**\n   * Transform a request into a signed version of the request. This is done last\n   * after the transforms on the body of a request. The returned object can be\n   * anything, but must be serializable to CBOR.\n   */\n  transformRequest(request: HttpAgentRequest): Promise<unknown>;\n}\n\n/**\n * An Identity that can sign blobs.\n */\nexport abstract class SignIdentity implements Identity {\n  protected _principal: Principal | undefined;\n\n  /**\n   * Returns the public key that would match this identity's signature.\n   */\n  public abstract getPublicKey(): PublicKey;\n\n  /**\n   * Signs a blob of data, with this identity's private key.\n   */\n  public abstract sign(blob: ArrayBuffer): Promise<Signature>;\n\n  /**\n   * Get the principal represented by this identity. Normally should be a\n   * `Principal.selfAuthenticating()`.\n   */\n  public getPrincipal(): Principal {\n    if (!this._principal) {\n      this._principal = Principal.selfAuthenticating(new Uint8Array(this.getPublicKey().toDer()));\n    }\n    return this._principal;\n  }\n\n  /**\n   * Transform a request into a signed version of the request. This is done last\n   * after the transforms on the body of a request. The returned object can be\n   * anything, but must be serializable to CBOR.\n   * @param request - internet computer request to transform\n   */\n  public async transformRequest(request: HttpAgentRequest): Promise<unknown> {\n    const { body, ...fields } = request;\n    const requestId = await requestIdOf(body);\n    return {\n      ...fields,\n      body: {\n        content: body,\n        sender_pubkey: this.getPublicKey().toDer(),\n        sender_sig: await this.sign(concat(domainSeparator, requestId)),\n      },\n    };\n  }\n}\n\nexport class AnonymousIdentity implements Identity {\n  public getPrincipal(): Principal {\n    return Principal.anonymous();\n  }\n\n  public async transformRequest(request: HttpAgentRequest): Promise<unknown> {\n    return {\n      ...request,\n      body: { content: request.body },\n    };\n  }\n}\n\n/*\n * We need to communicate with other agents on the page about identities,\n * but those messages may need to go across boundaries where it's not possible to\n * serialize/deserialize object prototypes easily.\n * So these are lightweight, serializable objects that contain enough information to recreate\n * SignIdentities, but don't commit to having all methods of SignIdentity.\n *\n * Use Case:\n * * DOM Events that let differently-versioned components communicate to one another about\n *   Identities, even if they're using slightly different versions of agent packages to\n *   create/interpret them.\n */\nexport interface AnonymousIdentityDescriptor {\n  type: 'AnonymousIdentity';\n}\nexport interface PublicKeyIdentityDescriptor {\n  type: 'PublicKeyIdentity';\n  publicKey: string;\n}\nexport type IdentityDescriptor = AnonymousIdentityDescriptor | PublicKeyIdentityDescriptor;\n\n/**\n * Create an IdentityDescriptor from a @dfinity/identity Identity\n * @param identity - identity describe in returned descriptor\n */\nexport function createIdentityDescriptor(\n  identity: SignIdentity | AnonymousIdentity,\n): IdentityDescriptor {\n  const identityIndicator: IdentityDescriptor =\n    'getPublicKey' in identity\n      ? { type: 'PublicKeyIdentity', publicKey: toHex(identity.getPublicKey().toDer()) }\n      : { type: 'AnonymousIdentity' };\n  return identityIndicator;\n}\n", null, null, null, "// This file is based on:\n// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses\nimport borc from 'borc';\nimport * as cbor from 'simple-cbor';\nimport { CborEncoder, SelfDescribeCborSerializer } from 'simple-cbor';\nimport { Principal } from '@dfinity/principal';\nimport { concat, fromHex } from './utils/buffer';\n\n// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with\n// encoding the uint64 values that the HTTP handler of the client expects for\n// canister IDs. However, simple-cbor does not yet provide deserialization so\n// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR\n// decoder.\n\nclass PrincipalEncoder implements CborEncoder<Principal> {\n  public get name() {\n    return 'Principal';\n  }\n\n  public get priority() {\n    return 0;\n  }\n\n  public match(value: any): boolean {\n    return value && value._isPrincipal === true;\n  }\n\n  public encode(v: Principal): cbor.CborValue {\n    return cbor.value.bytes(v.toUint8Array());\n  }\n}\n\nclass BufferEncoder implements CborEncoder<ArrayBuffer> {\n  public get name() {\n    return 'Buffer';\n  }\n\n  public get priority() {\n    return 1;\n  }\n\n  public match(value: any): boolean {\n    return value instanceof ArrayBuffer || ArrayBuffer.isView(value);\n  }\n\n  public encode(v: ArrayBuffer): cbor.CborValue {\n    return cbor.value.bytes(new Uint8Array(v));\n  }\n}\n\nclass BigIntEncoder implements CborEncoder<BigInt> {\n  public get name() {\n    return 'BigInt';\n  }\n\n  public get priority() {\n    return 1;\n  }\n\n  public match(value: any): boolean {\n    return typeof value === `bigint`;\n  }\n\n  public encode(v: bigint): cbor.CborValue {\n    // Always use a bigint encoding.\n    if (v > BigInt(0)) {\n      return cbor.value.tagged(2, cbor.value.bytes(fromHex(v.toString(16))));\n    } else {\n      return cbor.value.tagged(3, cbor.value.bytes(fromHex((BigInt('-1') * v).toString(16))));\n    }\n  }\n}\n\nconst serializer = SelfDescribeCborSerializer.withDefaultEncoders(true);\nserializer.addEncoder(new PrincipalEncoder());\nserializer.addEncoder(new BufferEncoder());\nserializer.addEncoder(new BigIntEncoder());\n\nexport enum CborTag {\n  Uint64LittleEndian = 71,\n  Semantic = 55799,\n}\n\n/**\n * Encode a JavaScript value into CBOR.\n */\nexport function encode(value: any): ArrayBuffer {\n  return serializer.serialize(value);\n}\n\nfunction decodePositiveBigInt(buf: Uint8Array): bigint {\n  const len = buf.byteLength;\n  let res = BigInt(0);\n  for (let i = 0; i < len; i++) {\n    res = res * BigInt(0x100) + BigInt(buf[i]);\n  }\n\n  return res;\n}\n\n// A BORC subclass that decodes byte strings to ArrayBuffer instead of the Buffer class.\nclass Uint8ArrayDecoder extends borc.Decoder {\n  public createByteString(raw: ArrayBuffer[]): ArrayBuffer {\n    return concat(...raw);\n  }\n\n  public createByteStringFromHeap(start: number, end: number): ArrayBuffer {\n    if (start === end) {\n      return new ArrayBuffer(0);\n    }\n\n    return new Uint8Array((this as any)._heap.slice(start, end));\n  }\n}\n\nexport function decode<T>(input: ArrayBuffer): T {\n  const buffer = new Uint8Array(input);\n  const decoder = new Uint8ArrayDecoder({\n    size: buffer.byteLength,\n    tags: {\n      // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).\n      2: val => decodePositiveBigInt(val),\n      3: val => -decodePositiveBigInt(val),\n      [CborTag.Semantic]: (value: T): T => value,\n    },\n  });\n\n  return decoder.decodeFirst(buffer);\n}\n", "/**\n * Generates a random unsigned 32-bit integer between 0 and 0xffffffff\n * @returns {number} a random number\n */\nexport const randomNumber = (): number => {\n  // determine whether browser crypto is available\n  if (typeof window !== 'undefined' && !!window.crypto && !!window.crypto.getRandomValues) {\n    const array = new Uint32Array(1);\n    window.crypto.getRandomValues(array);\n    return array[0];\n  }\n  // A second check for webcrypto, in case it is loaded under global instead of window\n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    const array = new Uint32Array(1);\n    crypto.getRandomValues(array);\n    return array[0];\n  }\n\n  type nodeCrypto = {\n    randomInt: (min: number, max: number) => number;\n  };\n\n  // determine whether node crypto is available\n  if (typeof crypto !== 'undefined' && (crypto as unknown as nodeCrypto).randomInt) {\n    return (crypto as unknown as nodeCrypto).randomInt(0, 0xffffffff);\n  }\n\n  // fall back to Math.random\n  return Math.floor(Math.random() * 0xffffffff);\n};\n", "import type { Principal } from '@dfinity/principal';\nimport { Expiry } from './transforms';\nimport { randomNumber } from '../../utils/random';\n\n/**\n * @internal\n */\nexport const enum Endpoint {\n  Query = 'read',\n  ReadState = 'read_state',\n  Call = 'call',\n}\n\n// An HttpAgent request, before it gets encoded and sent to the server.\n// We create an empty request that we will fill later.\nexport type HttpAgentRequest =\n  | HttpAgentQueryRequest\n  | HttpAgentSubmitRequest\n  | HttpAgentReadStateRequest;\n\nexport interface HttpAgentBaseRequest {\n  readonly endpoint: Endpoint;\n  request: RequestInit;\n}\n\nexport type HttpHeaderField = [string, string];\n\nexport interface HttpAgentSubmitRequest extends HttpAgentBaseRequest {\n  readonly endpoint: Endpoint.Call;\n  body: CallRequest;\n}\n\nexport interface HttpAgentQueryRequest extends HttpAgentBaseRequest {\n  readonly endpoint: Endpoint.Query;\n  body: ReadRequest;\n}\n\nexport interface HttpAgentReadStateRequest extends HttpAgentBaseRequest {\n  readonly endpoint: Endpoint.ReadState;\n  body: ReadRequest;\n}\n\nexport interface Signed<T> {\n  content: T;\n  sender_pubkey: ArrayBuffer;\n  sender_sig: ArrayBuffer;\n}\n\nexport interface UnSigned<T> {\n  content: T;\n}\n\nexport type Envelope<T> = Signed<T> | UnSigned<T>;\n\nexport interface HttpAgentRequestTransformFn {\n  (args: HttpAgentRequest): Promise<HttpAgentRequest | undefined | void>;\n  priority?: number;\n}\n\n// The fields in a \"call\" submit request.\nexport interface CallRequest extends Record<string, any> {\n  request_type: SubmitRequestType.Call;\n  canister_id: Principal;\n  method_name: string;\n  arg: ArrayBuffer;\n  sender: Uint8Array | Principal;\n  ingress_expiry: Expiry;\n}\n\n// The types of values allowed in the `request_type` field for submit requests.\nexport enum SubmitRequestType {\n  Call = 'call',\n}\n\n// The types of values allowed in the `request_type` field for read requests.\nexport const enum ReadRequestType {\n  Query = 'query',\n  ReadState = 'read_state',\n}\n\n// The fields in a \"query\" read request.\nexport interface QueryRequest extends Record<string, any> {\n  request_type: ReadRequestType.Query;\n  canister_id: Principal;\n  method_name: string;\n  arg: ArrayBuffer;\n  sender: Uint8Array | Principal;\n  ingress_expiry: Expiry;\n}\n\nexport interface ReadStateRequest extends Record<string, any> {\n  request_type: ReadRequestType.ReadState;\n  paths: ArrayBuffer[][];\n  ingress_expiry: Expiry;\n  sender: Uint8Array | Principal;\n}\n\nexport type ReadRequest = QueryRequest | ReadStateRequest;\n\n// A Nonce that can be used for calls.\nexport type Nonce = Uint8Array & { __nonce__: void };\n\n/**\n * Create a random Nonce, based on random values\n */\nexport function makeNonce(): Nonce {\n  // Encode 128 bits.\n  const buffer = new ArrayBuffer(16);\n  const view = new DataView(buffer);\n  const rand1 = randomNumber();\n  const rand2 = randomNumber();\n  const rand3 = randomNumber();\n  const rand4 = randomNumber();\n\n  view.setUint32(0, rand1);\n  view.setUint32(4, rand2);\n  view.setUint32(8, rand3);\n  view.setUint32(12, rand4);\n\n  return buffer as Nonce;\n}\n", "import { lebEncode } from '@dfinity/candid';\nimport * as cbor from 'simple-cbor';\nimport {\n  Endpoint,\n  HttpAgentRequest,\n  HttpAgentRequestTransformFn,\n  HttpHeaderField,\n  makeNonce,\n  Nonce,\n} from './types';\n\nconst NANOSECONDS_PER_MILLISECONDS = BigInt(1_000_000);\n\nconst REPLICA_PERMITTED_DRIFT_MILLISECONDS = 60 * 1000;\n\nexport class Expiry {\n  private readonly _value: bigint;\n\n  constructor(deltaInMSec: number) {\n    // Use bigint because it can overflow the maximum number allowed in a double float.\n    const raw_value =\n      BigInt(Math.floor(Date.now() + deltaInMSec - REPLICA_PERMITTED_DRIFT_MILLISECONDS)) *\n      NANOSECONDS_PER_MILLISECONDS;\n\n    // round down to the nearest second\n    const ingress_as_seconds = raw_value / BigInt(1_000_000_000);\n\n    // round down to nearest minute\n    const ingress_as_minutes = ingress_as_seconds / BigInt(60);\n\n    const rounded_down_nanos = ingress_as_minutes * BigInt(60) * BigInt(1_000_000_000);\n\n    this._value = rounded_down_nanos;\n  }\n\n  public toCBOR(): cbor.CborValue {\n    // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).\n    return cbor.value.u64(this._value.toString(16), 16);\n  }\n\n  public toHash(): ArrayBuffer {\n    return lebEncode(this._value);\n  }\n}\n\n/**\n * Create a Nonce transform, which takes a function that returns a Buffer, and adds it\n * as the nonce to every call requests.\n * @param nonceFn A function that returns a buffer. By default uses a semi-random method.\n */\nexport function makeNonceTransform(nonceFn: () => Nonce = makeNonce): HttpAgentRequestTransformFn {\n  return async (request: HttpAgentRequest) => {\n    // Nonce needs to be inserted into the header for all requests, to enable logs to be correlated with requests.\n    const headers = request.request.headers;\n    // TODO: uncomment this when the http proxy supports it.\n    // headers.set('X-IC-Request-ID', toHex(new Uint8Array(nonce)));\n    request.request.headers = headers;\n\n    // Nonce only needs to be inserted into the body for async calls, to prevent replay attacks.\n    if (request.endpoint === Endpoint.Call) {\n      request.body.nonce = nonceFn();\n    }\n  };\n}\n\n/**\n * Create a transform that adds a delay (by default 5 minutes) to the expiry.\n *\n * @param delayInMilliseconds The delay to add to the call time, in milliseconds.\n */\nexport function makeExpiryTransform(delayInMilliseconds: number): HttpAgentRequestTransformFn {\n  return async (request: HttpAgentRequest) => {\n    request.body.ingress_expiry = new Expiry(delayInMilliseconds);\n  };\n}\n\n/**\n * Maps the default fetch headers field to the serializable HttpHeaderField.\n *\n * @param headers Fetch definition of the headers type\n * @returns array of header fields\n */\nexport function httpHeadersTransform(headers: Headers): HttpHeaderField[] {\n  const headerFields: HttpHeaderField[] = [];\n  headers.forEach((value, key) => {\n    headerFields.push([key, value]);\n  });\n  return headerFields;\n}\n", "import { AgentError } from '../../errors';\nimport { HttpDetailsResponse } from '../api';\n\nexport class AgentHTTPResponseError extends AgentError {\n  constructor(message: string, public readonly response: HttpDetailsResponse) {\n    super(message);\n    this.name = this.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean) {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport type { CHash } from './utils.js';\nimport { bytesToNumberBE, abytes, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction anum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  anum(count);\n  const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | boolean;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  CURVE: ReturnType<typeof validatePointOpts<T>>;\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    ut.abytes(data);\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>): CurvePointsRes<T> {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (ut.isBytes(key)) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(\n      readonly px: T,\n      readonly py: T,\n      readonly pz: T\n    ) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y: bigint;\n        try {\n          y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        } catch (sqrtError) {\n          const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n          throw new Error('Point is not on curve' + suffix);\n        }\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(\n      readonly r: bigint,\n      readonly s: bigint,\n      readonly recovery?: number\n    ) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = ut.isBytes(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null && ent !== false) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || ut.isBytes(sg)) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n/**\n * BLS (Barreto-Lynn-Scott) family of pairing-friendly curves.\n * Implements BLS (Boneh-Lynn-Shacham) signatures.\n * Consists of two curves: G1 and G2:\n * - G1 is a subgroup of (x, y) E(Fq) over y\u00B2 = x\u00B3 + 4.\n * - G2 is a subgroup of ((x\u2081, x\u2082+i), (y\u2081, y\u2082+i)) E(Fq\u00B2) over y\u00B2 = x\u00B3 + 4(1 + i) where i is \u221A-1\n * - Gt, created by bilinear (ate) pairing e(G1, G2), consists of p-th roots of unity in\n *   Fq^k where k is embedding degree. Only degree 12 is currently supported, 24 is not.\n * Pairing is used to aggregate and verify signatures.\n * We are using Fp for private keys (shorter) and Fp\u2082 for signatures (longer).\n * Some projects may prefer to swap this relation, it is not supported for now.\n */\nimport { AffinePoint } from './curve.js';\nimport { IField, getMinHashLength, mapHashToField } from './modular.js';\nimport { Hex, PrivKey, CHash, bitLen, bitGet, ensureBytes } from './utils.js';\n// prettier-ignore\nimport {\n  MapToCurve, Opts as HTFOpts, H2CPointConstructor, htfBasicOpts,\n  createHasher\n} from './hash-to-curve.js';\nimport {\n  CurvePointsType,\n  ProjPointType as ProjPointType,\n  CurvePointsRes,\n  weierstrassPoints,\n} from './weierstrass.js';\n\ntype Fp = bigint; // Can be different field?\n\n// prettier-ignore\nconst _2n = BigInt(2), _3n = BigInt(3);\n\nexport type ShortSignatureCoder<Fp> = {\n  fromHex(hex: Hex): ProjPointType<Fp>;\n  toRawBytes(point: ProjPointType<Fp>): Uint8Array;\n  toHex(point: ProjPointType<Fp>): string;\n};\n\nexport type SignatureCoder<Fp2> = {\n  fromHex(hex: Hex): ProjPointType<Fp2>;\n  toRawBytes(point: ProjPointType<Fp2>): Uint8Array;\n  toHex(point: ProjPointType<Fp2>): string;\n};\n\nexport type CurveType<Fp, Fp2, Fp6, Fp12> = {\n  G1: Omit<CurvePointsType<Fp>, 'n'> & {\n    ShortSignature: SignatureCoder<Fp>;\n    mapToCurve: MapToCurve<Fp>;\n    htfDefaults: HTFOpts;\n  };\n  G2: Omit<CurvePointsType<Fp2>, 'n'> & {\n    Signature: SignatureCoder<Fp2>;\n    mapToCurve: MapToCurve<Fp2>;\n    htfDefaults: HTFOpts;\n  };\n  fields: {\n    Fp: IField<Fp>;\n    Fr: IField<bigint>;\n    Fp2: IField<Fp2> & {\n      reim: (num: Fp2) => { re: bigint; im: bigint };\n      multiplyByB: (num: Fp2) => Fp2;\n      frobeniusMap(num: Fp2, power: number): Fp2;\n    };\n    Fp6: IField<Fp6>;\n    Fp12: IField<Fp12> & {\n      frobeniusMap(num: Fp12, power: number): Fp12;\n      multiplyBy014(num: Fp12, o0: Fp2, o1: Fp2, o4: Fp2): Fp12;\n      conjugate(num: Fp12): Fp12;\n      finalExponentiate(num: Fp12): Fp12;\n    };\n  };\n  params: {\n    x: bigint;\n    r: bigint;\n  };\n  htfDefaults: HTFOpts;\n  hash: CHash; // Because we need outputLen for DRBG\n  randomBytes: (bytesLength?: number) => Uint8Array;\n};\n\nexport type CurveFn<Fp, Fp2, Fp6, Fp12> = {\n  getPublicKey: (privateKey: PrivKey) => Uint8Array;\n  getPublicKeyForShortSignatures: (privateKey: PrivKey) => Uint8Array;\n  sign: {\n    (message: Hex, privateKey: PrivKey, htfOpts?: htfBasicOpts): Uint8Array;\n    (message: ProjPointType<Fp2>, privateKey: PrivKey, htfOpts?: htfBasicOpts): ProjPointType<Fp2>;\n  };\n  signShortSignature: {\n    (message: Hex, privateKey: PrivKey, htfOpts?: htfBasicOpts): Uint8Array;\n    (message: ProjPointType<Fp>, privateKey: PrivKey, htfOpts?: htfBasicOpts): ProjPointType<Fp>;\n  };\n  verify: (\n    signature: Hex | ProjPointType<Fp2>,\n    message: Hex | ProjPointType<Fp2>,\n    publicKey: Hex | ProjPointType<Fp>,\n    htfOpts?: htfBasicOpts\n  ) => boolean;\n  verifyShortSignature: (\n    signature: Hex | ProjPointType<Fp>,\n    message: Hex | ProjPointType<Fp>,\n    publicKey: Hex | ProjPointType<Fp2>,\n    htfOpts?: htfBasicOpts\n  ) => boolean;\n  verifyBatch: (\n    signature: Hex | ProjPointType<Fp2>,\n    messages: (Hex | ProjPointType<Fp2>)[],\n    publicKeys: (Hex | ProjPointType<Fp>)[],\n    htfOpts?: htfBasicOpts\n  ) => boolean;\n  aggregatePublicKeys: {\n    (publicKeys: Hex[]): Uint8Array;\n    (publicKeys: ProjPointType<Fp>[]): ProjPointType<Fp>;\n  };\n  aggregateSignatures: {\n    (signatures: Hex[]): Uint8Array;\n    (signatures: ProjPointType<Fp2>[]): ProjPointType<Fp2>;\n  };\n  aggregateShortSignatures: {\n    (signatures: Hex[]): Uint8Array;\n    (signatures: ProjPointType<Fp>[]): ProjPointType<Fp>;\n  };\n  millerLoop: (ell: [Fp2, Fp2, Fp2][], g1: [Fp, Fp]) => Fp12;\n  pairing: (P: ProjPointType<Fp>, Q: ProjPointType<Fp2>, withFinalExponent?: boolean) => Fp12;\n  G1: CurvePointsRes<Fp> & ReturnType<typeof createHasher<Fp>>;\n  G2: CurvePointsRes<Fp2> & ReturnType<typeof createHasher<Fp2>>;\n  Signature: SignatureCoder<Fp2>;\n  ShortSignature: ShortSignatureCoder<Fp>;\n  params: {\n    x: bigint;\n    r: bigint;\n    G1b: bigint;\n    G2b: Fp2;\n  };\n  fields: {\n    Fp: IField<Fp>;\n    Fp2: IField<Fp2>;\n    Fp6: IField<Fp6>;\n    Fp12: IField<Fp12>;\n    Fr: IField<bigint>;\n  };\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    calcPairingPrecomputes: (p: AffinePoint<Fp2>) => [Fp2, Fp2, Fp2][];\n  };\n};\n\nexport function bls<Fp2, Fp6, Fp12>(\n  CURVE: CurveType<Fp, Fp2, Fp6, Fp12>\n): CurveFn<Fp, Fp2, Fp6, Fp12> {\n  // Fields are specific for curve, so for now we'll need to pass them with opts\n  const { Fp, Fr, Fp2, Fp6, Fp12 } = CURVE.fields;\n  const BLS_X_LEN = bitLen(CURVE.params.x);\n\n  // Pre-compute coefficients for sparse multiplication\n  // Point addition and point double calculations is reused for coefficients\n  function calcPairingPrecomputes(p: AffinePoint<Fp2>) {\n    const { x, y } = p;\n    // prettier-ignore\n    const Qx = x, Qy = y, Qz = Fp2.ONE;\n    // prettier-ignore\n    let Rx = Qx, Ry = Qy, Rz = Qz;\n    let ell_coeff: [Fp2, Fp2, Fp2][] = [];\n    for (let i = BLS_X_LEN - 2; i >= 0; i--) {\n      // Double\n      let t0 = Fp2.sqr(Ry); // Ry\u00B2\n      let t1 = Fp2.sqr(Rz); // Rz\u00B2\n      let t2 = Fp2.multiplyByB(Fp2.mul(t1, _3n)); // 3 * T1 * B\n      let t3 = Fp2.mul(t2, _3n); // 3 * T2\n      let t4 = Fp2.sub(Fp2.sub(Fp2.sqr(Fp2.add(Ry, Rz)), t1), t0); // (Ry + Rz)\u00B2 - T1 - T0\n      ell_coeff.push([\n        Fp2.sub(t2, t0), // T2 - T0\n        Fp2.mul(Fp2.sqr(Rx), _3n), // 3 * Rx\u00B2\n        Fp2.neg(t4), // -T4\n      ]);\n      Rx = Fp2.div(Fp2.mul(Fp2.mul(Fp2.sub(t0, t3), Rx), Ry), _2n); // ((T0 - T3) * Rx * Ry) / 2\n      Ry = Fp2.sub(Fp2.sqr(Fp2.div(Fp2.add(t0, t3), _2n)), Fp2.mul(Fp2.sqr(t2), _3n)); // ((T0 + T3) / 2)\u00B2 - 3 * T2\u00B2\n      Rz = Fp2.mul(t0, t4); // T0 * T4\n      if (bitGet(CURVE.params.x, i)) {\n        // Addition\n        let t0 = Fp2.sub(Ry, Fp2.mul(Qy, Rz)); // Ry - Qy * Rz\n        let t1 = Fp2.sub(Rx, Fp2.mul(Qx, Rz)); // Rx - Qx * Rz\n        ell_coeff.push([\n          Fp2.sub(Fp2.mul(t0, Qx), Fp2.mul(t1, Qy)), // T0 * Qx - T1 * Qy\n          Fp2.neg(t0), // -T0\n          t1, // T1\n        ]);\n        let t2 = Fp2.sqr(t1); // T1\u00B2\n        let t3 = Fp2.mul(t2, t1); // T2 * T1\n        let t4 = Fp2.mul(t2, Rx); // T2 * Rx\n        let t5 = Fp2.add(Fp2.sub(t3, Fp2.mul(t4, _2n)), Fp2.mul(Fp2.sqr(t0), Rz)); // T3 - 2 * T4 + T0\u00B2 * Rz\n        Rx = Fp2.mul(t1, t5); // T1 * T5\n        Ry = Fp2.sub(Fp2.mul(Fp2.sub(t4, t5), t0), Fp2.mul(t3, Ry)); // (T4 - T5) * T0 - T3 * Ry\n        Rz = Fp2.mul(Rz, t3); // Rz * T3\n      }\n    }\n    return ell_coeff;\n  }\n\n  function millerLoop(ell: [Fp2, Fp2, Fp2][], g1: [Fp, Fp]): Fp12 {\n    const { x } = CURVE.params;\n    const Px = g1[0];\n    const Py = g1[1];\n    let f12 = Fp12.ONE;\n    for (let j = 0, i = BLS_X_LEN - 2; i >= 0; i--, j++) {\n      const E = ell[j];\n      f12 = Fp12.multiplyBy014(f12, E[0], Fp2.mul(E[1], Px), Fp2.mul(E[2], Py));\n      if (bitGet(x, i)) {\n        j += 1;\n        const F = ell[j];\n        f12 = Fp12.multiplyBy014(f12, F[0], Fp2.mul(F[1], Px), Fp2.mul(F[2], Py));\n      }\n      if (i !== 0) f12 = Fp12.sqr(f12);\n    }\n    return Fp12.conjugate(f12);\n  }\n\n  const utils = {\n    randomPrivateKey: (): Uint8Array => {\n      const length = getMinHashLength(Fr.ORDER);\n      return mapHashToField(CURVE.randomBytes(length), Fr.ORDER);\n    },\n    calcPairingPrecomputes,\n  };\n\n  // Point on G1 curve: (x, y)\n  const G1_ = weierstrassPoints({ n: Fr.ORDER, ...CURVE.G1 });\n  const G1 = Object.assign(\n    G1_,\n    createHasher(G1_.ProjectivePoint, CURVE.G1.mapToCurve, {\n      ...CURVE.htfDefaults,\n      ...CURVE.G1.htfDefaults,\n    })\n  );\n\n  // Sparse multiplication against precomputed coefficients\n  // TODO: replace with weakmap?\n  type withPairingPrecomputes = { _PPRECOMPUTES: [Fp2, Fp2, Fp2][] | undefined };\n  function pairingPrecomputes(point: G2): [Fp2, Fp2, Fp2][] {\n    const p = point as G2 & withPairingPrecomputes;\n    if (p._PPRECOMPUTES) return p._PPRECOMPUTES;\n    p._PPRECOMPUTES = calcPairingPrecomputes(point.toAffine());\n    return p._PPRECOMPUTES;\n  }\n\n  // TODO: export\n  // function clearPairingPrecomputes(point: G2) {\n  //   const p = point as G2 & withPairingPrecomputes;\n  //   p._PPRECOMPUTES = undefined;\n  // }\n\n  // Point on G2 curve (complex numbers): (x\u2081, x\u2082+i), (y\u2081, y\u2082+i)\n  const G2_ = weierstrassPoints({ n: Fr.ORDER, ...CURVE.G2 });\n  const G2 = Object.assign(\n    G2_,\n    createHasher(G2_.ProjectivePoint as H2CPointConstructor<Fp2>, CURVE.G2.mapToCurve, {\n      ...CURVE.htfDefaults,\n      ...CURVE.G2.htfDefaults,\n    })\n  );\n\n  const { ShortSignature } = CURVE.G1;\n  const { Signature } = CURVE.G2;\n\n  // Calculates bilinear pairing\n  function pairing(Q: G1, P: G2, withFinalExponent: boolean = true): Fp12 {\n    if (Q.equals(G1.ProjectivePoint.ZERO) || P.equals(G2.ProjectivePoint.ZERO))\n      throw new Error('pairing is not available for ZERO point');\n    Q.assertValidity();\n    P.assertValidity();\n    // Performance: 9ms for millerLoop and ~14ms for exp.\n    const Qa = Q.toAffine();\n    const looped = millerLoop(pairingPrecomputes(P), [Qa.x, Qa.y]);\n    return withFinalExponent ? Fp12.finalExponentiate(looped) : looped;\n  }\n  type G1 = typeof G1.ProjectivePoint.BASE;\n  type G2 = typeof G2.ProjectivePoint.BASE;\n\n  type G1Hex = Hex | G1;\n  type G2Hex = Hex | G2;\n  function normP1(point: G1Hex): G1 {\n    return point instanceof G1.ProjectivePoint ? (point as G1) : G1.ProjectivePoint.fromHex(point);\n  }\n  function normP1Hash(point: G1Hex, htfOpts?: htfBasicOpts): G1 {\n    return point instanceof G1.ProjectivePoint\n      ? point\n      : (G1.hashToCurve(ensureBytes('point', point), htfOpts) as G1);\n  }\n  function normP2(point: G2Hex): G2 {\n    return point instanceof G2.ProjectivePoint ? point : Signature.fromHex(point);\n  }\n  function normP2Hash(point: G2Hex, htfOpts?: htfBasicOpts): G2 {\n    return point instanceof G2.ProjectivePoint\n      ? point\n      : (G2.hashToCurve(ensureBytes('point', point), htfOpts) as G2);\n  }\n\n  // Multiplies generator (G1) by private key.\n  // P = pk x G\n  function getPublicKey(privateKey: PrivKey): Uint8Array {\n    return G1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(true);\n  }\n\n  // Multiplies generator (G2) by private key.\n  // P = pk x G\n  function getPublicKeyForShortSignatures(privateKey: PrivKey): Uint8Array {\n    return G2.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(true);\n  }\n\n  // Executes `hashToCurve` on the message and then multiplies the result by private key.\n  // S = pk x H(m)\n  function sign(message: Hex, privateKey: PrivKey, htfOpts?: htfBasicOpts): Uint8Array;\n  function sign(message: G2, privateKey: PrivKey, htfOpts?: htfBasicOpts): G2;\n  function sign(message: G2Hex, privateKey: PrivKey, htfOpts?: htfBasicOpts): Uint8Array | G2 {\n    const msgPoint = normP2Hash(message, htfOpts);\n    msgPoint.assertValidity();\n    const sigPoint = msgPoint.multiply(G1.normPrivateKeyToScalar(privateKey));\n    if (message instanceof G2.ProjectivePoint) return sigPoint;\n    return Signature.toRawBytes(sigPoint);\n  }\n\n  function signShortSignature(\n    message: Hex,\n    privateKey: PrivKey,\n    htfOpts?: htfBasicOpts\n  ): Uint8Array;\n  function signShortSignature(message: G1, privateKey: PrivKey, htfOpts?: htfBasicOpts): G1;\n  function signShortSignature(\n    message: G1Hex,\n    privateKey: PrivKey,\n    htfOpts?: htfBasicOpts\n  ): Uint8Array | G1 {\n    const msgPoint = normP1Hash(message, htfOpts);\n    msgPoint.assertValidity();\n    const sigPoint = msgPoint.multiply(G1.normPrivateKeyToScalar(privateKey));\n    if (message instanceof G1.ProjectivePoint) return sigPoint;\n    return ShortSignature.toRawBytes(sigPoint);\n  }\n\n  // Checks if pairing of public key & hash is equal to pairing of generator & signature.\n  // e(P, H(m)) == e(G, S)\n  function verify(\n    signature: G2Hex,\n    message: G2Hex,\n    publicKey: G1Hex,\n    htfOpts?: htfBasicOpts\n  ): boolean {\n    const P = normP1(publicKey);\n    const Hm = normP2Hash(message, htfOpts);\n    const G = G1.ProjectivePoint.BASE;\n    const S = normP2(signature);\n    // Instead of doing 2 exponentiations, we use property of billinear maps\n    // and do one exp after multiplying 2 points.\n    const ePHm = pairing(P.negate(), Hm, false);\n    const eGS = pairing(G, S, false);\n    const exp = Fp12.finalExponentiate(Fp12.mul(eGS, ePHm));\n    return Fp12.eql(exp, Fp12.ONE);\n  }\n\n  // Checks if pairing of public key & hash is equal to pairing of generator & signature.\n  // e(S, G) == e(H(m), P)\n  function verifyShortSignature(\n    signature: G1Hex,\n    message: G1Hex,\n    publicKey: G2Hex,\n    htfOpts?: htfBasicOpts\n  ): boolean {\n    const P = normP2(publicKey);\n    const Hm = normP1Hash(message, htfOpts);\n    const G = G2.ProjectivePoint.BASE;\n    const S = normP1(signature);\n    // Instead of doing 2 exponentiations, we use property of billinear maps\n    // and do one exp after multiplying 2 points.\n    const eHmP = pairing(Hm, P, false);\n    const eSG = pairing(S, G.negate(), false);\n    const exp = Fp12.finalExponentiate(Fp12.mul(eSG, eHmP));\n    return Fp12.eql(exp, Fp12.ONE);\n  }\n\n  // Adds a bunch of public key points together.\n  // pk1 + pk2 + pk3 = pkA\n  function aggregatePublicKeys(publicKeys: Hex[]): Uint8Array;\n  function aggregatePublicKeys(publicKeys: G1[]): G1;\n  function aggregatePublicKeys(publicKeys: G1Hex[]): Uint8Array | G1 {\n    if (!publicKeys.length) throw new Error('Expected non-empty array');\n    const agg = publicKeys.map(normP1).reduce((sum, p) => sum.add(p), G1.ProjectivePoint.ZERO);\n    const aggAffine = agg; //.toAffine();\n    if (publicKeys[0] instanceof G1.ProjectivePoint) {\n      aggAffine.assertValidity();\n      return aggAffine;\n    }\n    // toRawBytes ensures point validity\n    return aggAffine.toRawBytes(true);\n  }\n\n  // Adds a bunch of signature points together.\n  function aggregateSignatures(signatures: Hex[]): Uint8Array;\n  function aggregateSignatures(signatures: G2[]): G2;\n  function aggregateSignatures(signatures: G2Hex[]): Uint8Array | G2 {\n    if (!signatures.length) throw new Error('Expected non-empty array');\n    const agg = signatures.map(normP2).reduce((sum, s) => sum.add(s), G2.ProjectivePoint.ZERO);\n    const aggAffine = agg; //.toAffine();\n    if (signatures[0] instanceof G2.ProjectivePoint) {\n      aggAffine.assertValidity();\n      return aggAffine;\n    }\n    return Signature.toRawBytes(aggAffine);\n  }\n\n  // Adds a bunch of signature points together.\n  function aggregateShortSignatures(signatures: Hex[]): Uint8Array;\n  function aggregateShortSignatures(signatures: G1[]): G1;\n  function aggregateShortSignatures(signatures: G1Hex[]): Uint8Array | G1 {\n    if (!signatures.length) throw new Error('Expected non-empty array');\n    const agg = signatures.map(normP1).reduce((sum, s) => sum.add(s), G1.ProjectivePoint.ZERO);\n    const aggAffine = agg; //.toAffine();\n    if (signatures[0] instanceof G1.ProjectivePoint) {\n      aggAffine.assertValidity();\n      return aggAffine;\n    }\n    return ShortSignature.toRawBytes(aggAffine);\n  }\n\n  // https://ethresear.ch/t/fast-verification-of-multiple-bls-signatures/5407\n  // e(G, S) = e(G, SUM(n)(Si)) = MUL(n)(e(G, Si))\n  function verifyBatch(\n    signature: G2Hex,\n    messages: G2Hex[],\n    publicKeys: G1Hex[],\n    htfOpts?: htfBasicOpts\n  ): boolean {\n    // @ts-ignore\n    // console.log('verifyBatch', bytesToHex(signature as any), messages, publicKeys.map(bytesToHex));\n\n    if (!messages.length) throw new Error('Expected non-empty messages array');\n    if (publicKeys.length !== messages.length)\n      throw new Error('Pubkey count should equal msg count');\n    const sig = normP2(signature);\n    const nMessages = messages.map((i) => normP2Hash(i, htfOpts));\n    const nPublicKeys = publicKeys.map(normP1);\n    try {\n      const paired = [];\n      for (const message of new Set(nMessages)) {\n        const groupPublicKey = nMessages.reduce(\n          (groupPublicKey, subMessage, i) =>\n            subMessage === message ? groupPublicKey.add(nPublicKeys[i]) : groupPublicKey,\n          G1.ProjectivePoint.ZERO\n        );\n        // const msg = message instanceof PointG2 ? message : await PointG2.hashToCurve(message);\n        // Possible to batch pairing for same msg with different groupPublicKey here\n        paired.push(pairing(groupPublicKey, message, false));\n      }\n      paired.push(pairing(G1.ProjectivePoint.BASE.negate(), sig, false));\n      const product = paired.reduce((a, b) => Fp12.mul(a, b), Fp12.ONE);\n      const exp = Fp12.finalExponentiate(product);\n      return Fp12.eql(exp, Fp12.ONE);\n    } catch {\n      return false;\n    }\n  }\n\n  G1.ProjectivePoint.BASE._setWindowSize(4);\n\n  return {\n    getPublicKey,\n    getPublicKeyForShortSignatures,\n    sign,\n    signShortSignature,\n    verify,\n    verifyBatch,\n    verifyShortSignature,\n    aggregatePublicKeys,\n    aggregateSignatures,\n    aggregateShortSignatures,\n    millerLoop,\n    pairing,\n    G1,\n    G2,\n    Signature,\n    ShortSignature,\n    fields: {\n      Fr,\n      Fp,\n      Fp2,\n      Fp6,\n      Fp12,\n    },\n    params: {\n      x: CURVE.params.x,\n      r: CURVE.params.r,\n      G1b: CURVE.G1.b,\n      G2b: CURVE.G2.b,\n    },\n    utils,\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// bls12-381 is pairing-friendly Barreto-Lynn-Scott elliptic curve construction allowing to:\n// - Construct zk-SNARKs at the 120-bit security\n// - Efficiently verify N aggregate signatures with 1 pairing and N ec additions:\n//   the Boneh-Lynn-Shacham signature scheme is orders of magnitude more efficient than Schnorr\n//\n// ### Summary\n// 1. BLS Relies on Bilinear Pairing (expensive)\n// 2. Private Keys: 32 bytes\n// 3. Public Keys: 48 bytes: 381 bit affine x coordinate, encoded into 48 big-endian bytes.\n// 4. Signatures: 96 bytes: two 381 bit integers (affine x coordinate), encoded into two 48 big-endian byte arrays.\n//     - The signature is a point on the G2 subgroup, which is defined over a finite field\n//     with elements twice as big as the G1 curve (G2 is over Fp2 rather than Fp. Fp2 is analogous to the complex numbers).\n// 5. The 12 stands for the Embedding degree.\n//\n// ### Formulas\n// - `P = pk x G` - public keys\n// - `S = pk x H(m)` - signing\n// - `e(P, H(m)) == e(G, S)` - verification using pairings\n// - `e(G, S) = e(G, SUM(n)(Si)) = MUL(n)(e(G, Si))` - signature aggregation\n//\n// ### Compatibility and notes\n// 1. It is compatible with Algorand, Chia, Dfinity, Ethereum, Filecoin, ZEC\n//    Filecoin uses little endian byte arrays for private keys - make sure to reverse byte order.\n// 2. Some projects use G2 for public keys and G1 for signatures. It's called \"short signature\"\n// 3. Curve security level is about 120 bits as per Barbulescu-Duquesne 2017\n//    https://hal.science/hal-01534101/file/main.pdf\n// 4. Compatible with specs:\n// [cfrg-pairing-friendly-curves-11](https://tools.ietf.org/html/draft-irtf-cfrg-pairing-friendly-curves-11),\n// [cfrg-bls-signature-05](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-bls-signature-05),\n// [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380).\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { bls, CurveFn } from './abstract/bls.js';\nimport * as mod from './abstract/modular.js';\nimport {\n  concatBytes as concatB,\n  ensureBytes,\n  numberToBytesBE,\n  bytesToNumberBE,\n  bitLen,\n  bitGet,\n  Hex,\n  bitMask,\n  bytesToHex,\n} from './abstract/utils.js';\n// Types\nimport {\n  ProjPointType,\n  ProjConstructor,\n  mapToCurveSimpleSWU,\n  AffinePoint,\n} from './abstract/weierstrass.js';\nimport { isogenyMap } from './abstract/hash-to-curve.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n// prettier-ignore\nconst _8n = BigInt(8), _16n = BigInt(16);\n\n// CURVE FIELDS\n// Finite field over p.\nconst Fp_raw = BigInt(\n  '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'\n);\nconst Fp = mod.Field(Fp_raw);\ntype Fp = bigint;\n// Finite field over r.\n// This particular field is not used anywhere in bls12-381, but it is still useful.\nconst Fr = mod.Field(BigInt('0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001'));\n\n// Fp\u2082 over complex plane\ntype BigintTuple = [bigint, bigint];\ntype Fp2 = { c0: bigint; c1: bigint };\nconst Fp2Add = ({ c0, c1 }: Fp2, { c0: r0, c1: r1 }: Fp2) => ({\n  c0: Fp.add(c0, r0),\n  c1: Fp.add(c1, r1),\n});\nconst Fp2Subtract = ({ c0, c1 }: Fp2, { c0: r0, c1: r1 }: Fp2) => ({\n  c0: Fp.sub(c0, r0),\n  c1: Fp.sub(c1, r1),\n});\nconst Fp2Multiply = ({ c0, c1 }: Fp2, rhs: Fp2) => {\n  if (typeof rhs === 'bigint') return { c0: Fp.mul(c0, rhs), c1: Fp.mul(c1, rhs) };\n  // (a+bi)(c+di) = (ac\u2212bd) + (ad+bc)i\n  const { c0: r0, c1: r1 } = rhs;\n  let t1 = Fp.mul(c0, r0); // c0 * o0\n  let t2 = Fp.mul(c1, r1); // c1 * o1\n  // (T1 - T2) + ((c0 + c1) * (r0 + r1) - (T1 + T2))*i\n  const o0 = Fp.sub(t1, t2);\n  const o1 = Fp.sub(Fp.mul(Fp.add(c0, c1), Fp.add(r0, r1)), Fp.add(t1, t2));\n  return { c0: o0, c1: o1 };\n};\nconst Fp2Square = ({ c0, c1 }: Fp2) => {\n  const a = Fp.add(c0, c1);\n  const b = Fp.sub(c0, c1);\n  const c = Fp.add(c0, c0);\n  return { c0: Fp.mul(a, b), c1: Fp.mul(c, c1) };\n};\ntype Fp2Utils = {\n  fromBigTuple: (tuple: BigintTuple | bigint[]) => Fp2;\n  reim: (num: Fp2) => { re: bigint; im: bigint };\n  mulByNonresidue: (num: Fp2) => Fp2;\n  multiplyByB: (num: Fp2) => Fp2;\n  frobeniusMap(num: Fp2, power: number): Fp2;\n};\n// G2 is the order-q subgroup of E2(Fp\u00B2) : y\u00B2 = x\u00B3+4(1+\u221A\u22121),\n// where Fp2 is Fp[\u221A\u22121]/(x2+1). #E2(Fp2 ) = h2q, where\n// G\u00B2 - 1\n// h2q\n// NOTE: ORDER was wrong!\nconst FP2_ORDER = Fp_raw * Fp_raw;\n\nconst Fp2: mod.IField<Fp2> & Fp2Utils = {\n  ORDER: FP2_ORDER,\n  BITS: bitLen(FP2_ORDER),\n  BYTES: Math.ceil(bitLen(FP2_ORDER) / 8),\n  MASK: bitMask(bitLen(FP2_ORDER)),\n  ZERO: { c0: Fp.ZERO, c1: Fp.ZERO },\n  ONE: { c0: Fp.ONE, c1: Fp.ZERO },\n  create: (num) => num,\n  isValid: ({ c0, c1 }) => typeof c0 === 'bigint' && typeof c1 === 'bigint',\n  is0: ({ c0, c1 }) => Fp.is0(c0) && Fp.is0(c1),\n  eql: ({ c0, c1 }: Fp2, { c0: r0, c1: r1 }: Fp2) => Fp.eql(c0, r0) && Fp.eql(c1, r1),\n  neg: ({ c0, c1 }) => ({ c0: Fp.neg(c0), c1: Fp.neg(c1) }),\n  pow: (num, power) => mod.FpPow(Fp2, num, power),\n  invertBatch: (nums) => mod.FpInvertBatch(Fp2, nums),\n  // Normalized\n  add: Fp2Add,\n  sub: Fp2Subtract,\n  mul: Fp2Multiply,\n  sqr: Fp2Square,\n  // NonNormalized stuff\n  addN: Fp2Add,\n  subN: Fp2Subtract,\n  mulN: Fp2Multiply,\n  sqrN: Fp2Square,\n  // Why inversion for bigint inside Fp instead of Fp2? it is even used in that context?\n  div: (lhs, rhs) => Fp2.mul(lhs, typeof rhs === 'bigint' ? Fp.inv(Fp.create(rhs)) : Fp2.inv(rhs)),\n  inv: ({ c0: a, c1: b }) => {\n    // We wish to find the multiplicative inverse of a nonzero\n    // element a + bu in Fp2. We leverage an identity\n    //\n    // (a + bu)(a - bu) = a\u00B2 + b\u00B2\n    //\n    // which holds because u\u00B2 = -1. This can be rewritten as\n    //\n    // (a + bu)(a - bu)/(a\u00B2 + b\u00B2) = 1\n    //\n    // because a\u00B2 + b\u00B2 = 0 has no nonzero solutions for (a, b).\n    // This gives that (a - bu)/(a\u00B2 + b\u00B2) is the inverse\n    // of (a + bu). Importantly, this can be computing using\n    // only a single inversion in Fp.\n    const factor = Fp.inv(Fp.create(a * a + b * b));\n    return { c0: Fp.mul(factor, Fp.create(a)), c1: Fp.mul(factor, Fp.create(-b)) };\n  },\n  sqrt: (num) => {\n    if (Fp2.eql(num, Fp2.ZERO)) return Fp2.ZERO; // Algo doesn't handles this case\n    // TODO: Optimize this line. It's extremely slow.\n    // Speeding this up would boost aggregateSignatures.\n    // https://eprint.iacr.org/2012/685.pdf applicable?\n    // https://github.com/zkcrypto/bls12_381/blob/080eaa74ec0e394377caa1ba302c8c121df08b07/src/fp2.rs#L250\n    // https://github.com/supranational/blst/blob/aae0c7d70b799ac269ff5edf29d8191dbd357876/src/exp2.c#L1\n    // Inspired by https://github.com/dalek-cryptography/curve25519-dalek/blob/17698df9d4c834204f83a3574143abacb4fc81a5/src/field.rs#L99\n    const candidateSqrt = Fp2.pow(num, (Fp2.ORDER + _8n) / _16n);\n    const check = Fp2.div(Fp2.sqr(candidateSqrt), num); // candidateSqrt.square().div(this);\n    const R = FP2_ROOTS_OF_UNITY;\n    const divisor = [R[0], R[2], R[4], R[6]].find((r) => Fp2.eql(r, check));\n    if (!divisor) throw new Error('No root');\n    const index = R.indexOf(divisor);\n    const root = R[index / 2];\n    if (!root) throw new Error('Invalid root');\n    const x1 = Fp2.div(candidateSqrt, root);\n    const x2 = Fp2.neg(x1);\n    const { re: re1, im: im1 } = Fp2.reim(x1);\n    const { re: re2, im: im2 } = Fp2.reim(x2);\n    if (im1 > im2 || (im1 === im2 && re1 > re2)) return x1;\n    return x2;\n  },\n  // Same as sgn0_m_eq_2 in RFC 9380\n  isOdd: (x: Fp2) => {\n    const { re: x0, im: x1 } = Fp2.reim(x);\n    const sign_0 = x0 % _2n;\n    const zero_0 = x0 === _0n;\n    const sign_1 = x1 % _2n;\n    return BigInt(sign_0 || (zero_0 && sign_1)) == _1n;\n  },\n  // Bytes util\n  fromBytes(b: Uint8Array): Fp2 {\n    if (b.length !== Fp2.BYTES) throw new Error(`fromBytes wrong length=${b.length}`);\n    return { c0: Fp.fromBytes(b.subarray(0, Fp.BYTES)), c1: Fp.fromBytes(b.subarray(Fp.BYTES)) };\n  },\n  toBytes: ({ c0, c1 }) => concatB(Fp.toBytes(c0), Fp.toBytes(c1)),\n  cmov: ({ c0, c1 }, { c0: r0, c1: r1 }, c) => ({\n    c0: Fp.cmov(c0, r0, c),\n    c1: Fp.cmov(c1, r1, c),\n  }),\n  // Specific utils\n  // toString() {\n  //   return `Fp2(${this.c0} + ${this.c1}\u00D7i)`;\n  // }\n  reim: ({ c0, c1 }) => ({ re: c0, im: c1 }),\n  // multiply by u + 1\n  mulByNonresidue: ({ c0, c1 }) => ({ c0: Fp.sub(c0, c1), c1: Fp.add(c0, c1) }),\n  multiplyByB: ({ c0, c1 }) => {\n    let t0 = Fp.mul(c0, _4n); // 4 * c0\n    let t1 = Fp.mul(c1, _4n); // 4 * c1\n    // (T0-T1) + (T0+T1)*i\n    return { c0: Fp.sub(t0, t1), c1: Fp.add(t0, t1) };\n  },\n  fromBigTuple: (tuple: BigintTuple | bigint[]) => {\n    if (tuple.length !== 2) throw new Error('Invalid tuple');\n    const fps = tuple.map((n) => Fp.create(n)) as [Fp, Fp];\n    return { c0: fps[0], c1: fps[1] };\n  },\n  frobeniusMap: ({ c0, c1 }, power: number): Fp2 => ({\n    c0,\n    c1: Fp.mul(c1, FP2_FROBENIUS_COEFFICIENTS[power % 2]),\n  }),\n};\n// Finite extension field over irreducible polynominal.\n// Fp(u) / (u\u00B2 - \u03B2) where \u03B2 = -1\nconst FP2_FROBENIUS_COEFFICIENTS = [\n  BigInt('0x1'),\n  BigInt(\n    '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaa'\n  ),\n].map((item) => Fp.create(item));\n\n// For Fp2 roots of unity.\nconst rv1 = BigInt(\n  '0x6af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09'\n);\n// const ev1 =\n//   BigInt('0x699be3b8c6870965e5bf892ad5d2cc7b0e85a117402dfd83b7f4a947e02d978498255a2aaec0ac627b5afbdf1bf1c90');\n// const ev2 =\n//   BigInt('0x8157cd83046453f5dd0972b6e3949e4288020b5b8a9cc99ca07e27089a2ce2436d965026adad3ef7baba37f2183e9b5');\n// const ev3 =\n//   BigInt('0xab1c2ffdd6c253ca155231eb3e71ba044fd562f6f72bc5bad5ec46a0b7a3b0247cf08ce6c6317f40edbc653a72dee17');\n// const ev4 =\n//   BigInt('0xaa404866706722864480885d68ad0ccac1967c7544b447873cc37e0181271e006df72162a3d3e0287bf597fbf7f8fc1');\n\n// Eighth roots of unity, used for computing square roots in Fp2.\n// To verify or re-calculate:\n// Array(8).fill(new Fp2([1n, 1n])).map((fp2, k) => fp2.pow(Fp2.ORDER * BigInt(k) / 8n))\nconst FP2_ROOTS_OF_UNITY = [\n  [_1n, _0n],\n  [rv1, -rv1],\n  [_0n, _1n],\n  [rv1, rv1],\n  [-_1n, _0n],\n  [-rv1, rv1],\n  [_0n, -_1n],\n  [-rv1, -rv1],\n].map((pair) => Fp2.fromBigTuple(pair));\n// eta values, used for computing sqrt(g(X1(t)))\n// const FP2_ETAs = [\n//   [ev1, ev2],\n//   [-ev2, ev1],\n//   [ev3, ev4],\n//   [-ev4, ev3],\n// ].map((pair) => Fp2.fromBigTuple(pair));\n\n// Finite extension field over irreducible polynominal.\n// Fp2(v) / (v\u00B3 - \u03BE) where \u03BE = u + 1\ntype BigintSix = [bigint, bigint, bigint, bigint, bigint, bigint];\ntype Fp6 = { c0: Fp2; c1: Fp2; c2: Fp2 };\nconst Fp6Add = ({ c0, c1, c2 }: Fp6, { c0: r0, c1: r1, c2: r2 }: Fp6) => ({\n  c0: Fp2.add(c0, r0),\n  c1: Fp2.add(c1, r1),\n  c2: Fp2.add(c2, r2),\n});\nconst Fp6Subtract = ({ c0, c1, c2 }: Fp6, { c0: r0, c1: r1, c2: r2 }: Fp6) => ({\n  c0: Fp2.sub(c0, r0),\n  c1: Fp2.sub(c1, r1),\n  c2: Fp2.sub(c2, r2),\n});\nconst Fp6Multiply = ({ c0, c1, c2 }: Fp6, rhs: Fp6 | bigint) => {\n  if (typeof rhs === 'bigint') {\n    return {\n      c0: Fp2.mul(c0, rhs),\n      c1: Fp2.mul(c1, rhs),\n      c2: Fp2.mul(c2, rhs),\n    };\n  }\n  const { c0: r0, c1: r1, c2: r2 } = rhs;\n  const t0 = Fp2.mul(c0, r0); // c0 * o0\n  const t1 = Fp2.mul(c1, r1); // c1 * o1\n  const t2 = Fp2.mul(c2, r2); // c2 * o2\n  return {\n    // t0 + (c1 + c2) * (r1 * r2) - (T1 + T2) * (u + 1)\n    c0: Fp2.add(\n      t0,\n      Fp2.mulByNonresidue(Fp2.sub(Fp2.mul(Fp2.add(c1, c2), Fp2.add(r1, r2)), Fp2.add(t1, t2)))\n    ),\n    // (c0 + c1) * (r0 + r1) - (T0 + T1) + T2 * (u + 1)\n    c1: Fp2.add(\n      Fp2.sub(Fp2.mul(Fp2.add(c0, c1), Fp2.add(r0, r1)), Fp2.add(t0, t1)),\n      Fp2.mulByNonresidue(t2)\n    ),\n    // T1 + (c0 + c2) * (r0 + r2) - T0 + T2\n    c2: Fp2.sub(Fp2.add(t1, Fp2.mul(Fp2.add(c0, c2), Fp2.add(r0, r2))), Fp2.add(t0, t2)),\n  };\n};\nconst Fp6Square = ({ c0, c1, c2 }: Fp6) => {\n  let t0 = Fp2.sqr(c0); // c0\u00B2\n  let t1 = Fp2.mul(Fp2.mul(c0, c1), _2n); // 2 * c0 * c1\n  let t3 = Fp2.mul(Fp2.mul(c1, c2), _2n); // 2 * c1 * c2\n  let t4 = Fp2.sqr(c2); // c2\u00B2\n  return {\n    c0: Fp2.add(Fp2.mulByNonresidue(t3), t0), // T3 * (u + 1) + T0\n    c1: Fp2.add(Fp2.mulByNonresidue(t4), t1), // T4 * (u + 1) + T1\n    // T1 + (c0 - c1 + c2)\u00B2 + T3 - T0 - T4\n    c2: Fp2.sub(Fp2.sub(Fp2.add(Fp2.add(t1, Fp2.sqr(Fp2.add(Fp2.sub(c0, c1), c2))), t3), t0), t4),\n  };\n};\ntype Fp6Utils = {\n  fromBigSix: (tuple: BigintSix) => Fp6;\n  mulByNonresidue: (num: Fp6) => Fp6;\n  frobeniusMap(num: Fp6, power: number): Fp6;\n  multiplyBy1(num: Fp6, b1: Fp2): Fp6;\n  multiplyBy01(num: Fp6, b0: Fp2, b1: Fp2): Fp6;\n  multiplyByFp2(lhs: Fp6, rhs: Fp2): Fp6;\n};\n\nconst Fp6: mod.IField<Fp6> & Fp6Utils = {\n  ORDER: Fp2.ORDER, // TODO: unused, but need to verify\n  BITS: 3 * Fp2.BITS,\n  BYTES: 3 * Fp2.BYTES,\n  MASK: bitMask(3 * Fp2.BITS),\n  ZERO: { c0: Fp2.ZERO, c1: Fp2.ZERO, c2: Fp2.ZERO },\n  ONE: { c0: Fp2.ONE, c1: Fp2.ZERO, c2: Fp2.ZERO },\n  create: (num) => num,\n  isValid: ({ c0, c1, c2 }) => Fp2.isValid(c0) && Fp2.isValid(c1) && Fp2.isValid(c2),\n  is0: ({ c0, c1, c2 }) => Fp2.is0(c0) && Fp2.is0(c1) && Fp2.is0(c2),\n  neg: ({ c0, c1, c2 }) => ({ c0: Fp2.neg(c0), c1: Fp2.neg(c1), c2: Fp2.neg(c2) }),\n  eql: ({ c0, c1, c2 }, { c0: r0, c1: r1, c2: r2 }) =>\n    Fp2.eql(c0, r0) && Fp2.eql(c1, r1) && Fp2.eql(c2, r2),\n  sqrt: () => {\n    throw new Error('Not implemented');\n  },\n  // Do we need division by bigint at all? Should be done via order:\n  div: (lhs, rhs) => Fp6.mul(lhs, typeof rhs === 'bigint' ? Fp.inv(Fp.create(rhs)) : Fp6.inv(rhs)),\n  pow: (num, power) => mod.FpPow(Fp6, num, power),\n  invertBatch: (nums) => mod.FpInvertBatch(Fp6, nums),\n  // Normalized\n  add: Fp6Add,\n  sub: Fp6Subtract,\n  mul: Fp6Multiply,\n  sqr: Fp6Square,\n  // NonNormalized stuff\n  addN: Fp6Add,\n  subN: Fp6Subtract,\n  mulN: Fp6Multiply,\n  sqrN: Fp6Square,\n\n  inv: ({ c0, c1, c2 }) => {\n    let t0 = Fp2.sub(Fp2.sqr(c0), Fp2.mulByNonresidue(Fp2.mul(c2, c1))); // c0\u00B2 - c2 * c1 * (u + 1)\n    let t1 = Fp2.sub(Fp2.mulByNonresidue(Fp2.sqr(c2)), Fp2.mul(c0, c1)); // c2\u00B2 * (u + 1) - c0 * c1\n    let t2 = Fp2.sub(Fp2.sqr(c1), Fp2.mul(c0, c2)); // c1\u00B2 - c0 * c2\n    // 1/(((c2 * T1 + c1 * T2) * v) + c0 * T0)\n    let t4 = Fp2.inv(\n      Fp2.add(Fp2.mulByNonresidue(Fp2.add(Fp2.mul(c2, t1), Fp2.mul(c1, t2))), Fp2.mul(c0, t0))\n    );\n    return { c0: Fp2.mul(t4, t0), c1: Fp2.mul(t4, t1), c2: Fp2.mul(t4, t2) };\n  },\n  // Bytes utils\n  fromBytes: (b: Uint8Array): Fp6 => {\n    if (b.length !== Fp6.BYTES) throw new Error(`fromBytes wrong length=${b.length}`);\n    return {\n      c0: Fp2.fromBytes(b.subarray(0, Fp2.BYTES)),\n      c1: Fp2.fromBytes(b.subarray(Fp2.BYTES, 2 * Fp2.BYTES)),\n      c2: Fp2.fromBytes(b.subarray(2 * Fp2.BYTES)),\n    };\n  },\n  toBytes: ({ c0, c1, c2 }): Uint8Array =>\n    concatB(Fp2.toBytes(c0), Fp2.toBytes(c1), Fp2.toBytes(c2)),\n  cmov: ({ c0, c1, c2 }: Fp6, { c0: r0, c1: r1, c2: r2 }: Fp6, c) => ({\n    c0: Fp2.cmov(c0, r0, c),\n    c1: Fp2.cmov(c1, r1, c),\n    c2: Fp2.cmov(c2, r2, c),\n  }),\n  // Utils\n  //   fromTriple(triple: [Fp2, Fp2, Fp2]) {\n  //     return new Fp6(...triple);\n  //   }\n  //   toString() {\n  //     return `Fp6(${this.c0} + ${this.c1} * v, ${this.c2} * v^2)`;\n  //   }\n  fromBigSix: (t: BigintSix): Fp6 => {\n    if (!Array.isArray(t) || t.length !== 6) throw new Error('Invalid Fp6 usage');\n    return {\n      c0: Fp2.fromBigTuple(t.slice(0, 2)),\n      c1: Fp2.fromBigTuple(t.slice(2, 4)),\n      c2: Fp2.fromBigTuple(t.slice(4, 6)),\n    };\n  },\n  frobeniusMap: ({ c0, c1, c2 }, power: number) => ({\n    c0: Fp2.frobeniusMap(c0, power),\n    c1: Fp2.mul(Fp2.frobeniusMap(c1, power), FP6_FROBENIUS_COEFFICIENTS_1[power % 6]),\n    c2: Fp2.mul(Fp2.frobeniusMap(c2, power), FP6_FROBENIUS_COEFFICIENTS_2[power % 6]),\n  }),\n  mulByNonresidue: ({ c0, c1, c2 }) => ({ c0: Fp2.mulByNonresidue(c2), c1: c0, c2: c1 }),\n\n  // Sparse multiplication\n  multiplyBy1: ({ c0, c1, c2 }, b1: Fp2): Fp6 => ({\n    c0: Fp2.mulByNonresidue(Fp2.mul(c2, b1)),\n    c1: Fp2.mul(c0, b1),\n    c2: Fp2.mul(c1, b1),\n  }),\n  // Sparse multiplication\n  multiplyBy01({ c0, c1, c2 }, b0: Fp2, b1: Fp2): Fp6 {\n    let t0 = Fp2.mul(c0, b0); // c0 * b0\n    let t1 = Fp2.mul(c1, b1); // c1 * b1\n    return {\n      // ((c1 + c2) * b1 - T1) * (u + 1) + T0\n      c0: Fp2.add(Fp2.mulByNonresidue(Fp2.sub(Fp2.mul(Fp2.add(c1, c2), b1), t1)), t0),\n      // (b0 + b1) * (c0 + c1) - T0 - T1\n      c1: Fp2.sub(Fp2.sub(Fp2.mul(Fp2.add(b0, b1), Fp2.add(c0, c1)), t0), t1),\n      // (c0 + c2) * b0 - T0 + T1\n      c2: Fp2.add(Fp2.sub(Fp2.mul(Fp2.add(c0, c2), b0), t0), t1),\n    };\n  },\n\n  multiplyByFp2: ({ c0, c1, c2 }, rhs: Fp2): Fp6 => ({\n    c0: Fp2.mul(c0, rhs),\n    c1: Fp2.mul(c1, rhs),\n    c2: Fp2.mul(c2, rhs),\n  }),\n};\n\nconst FP6_FROBENIUS_COEFFICIENTS_1 = [\n  [BigInt('0x1'), BigInt('0x0')],\n  [\n    BigInt('0x0'),\n    BigInt(\n      '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaac'\n    ),\n  ],\n  [\n    BigInt(\n      '0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffe'\n    ),\n    BigInt('0x0'),\n  ],\n  [BigInt('0x0'), BigInt('0x1')],\n  [\n    BigInt(\n      '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaac'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt('0x0'),\n    BigInt(\n      '0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffe'\n    ),\n  ],\n].map((pair) => Fp2.fromBigTuple(pair));\nconst FP6_FROBENIUS_COEFFICIENTS_2 = [\n  [BigInt('0x1'), BigInt('0x0')],\n  [\n    BigInt(\n      '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaad'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaac'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaa'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffe'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffeffff'\n    ),\n    BigInt('0x0'),\n  ],\n].map((pair) => Fp2.fromBigTuple(pair));\n\n// Finite extension field over irreducible polynominal.\n// Fp\u2081\u2082 = Fp\u2086\u00B2 => Fp\u2082\u00B3\n// Fp\u2086(w) / (w\u00B2 - \u03B3) where \u03B3 = v\ntype Fp12 = { c0: Fp6; c1: Fp6 };\n// The BLS parameter x for BLS12-381\nconst BLS_X = BigInt('0xd201000000010000');\nconst BLS_X_LEN = bitLen(BLS_X);\n\n// prettier-ignore\ntype BigintTwelve = [\n    bigint, bigint, bigint, bigint, bigint, bigint,\n    bigint, bigint, bigint, bigint, bigint, bigint\n  ];\nconst Fp12Add = ({ c0, c1 }: Fp12, { c0: r0, c1: r1 }: Fp12) => ({\n  c0: Fp6.add(c0, r0),\n  c1: Fp6.add(c1, r1),\n});\nconst Fp12Subtract = ({ c0, c1 }: Fp12, { c0: r0, c1: r1 }: Fp12) => ({\n  c0: Fp6.sub(c0, r0),\n  c1: Fp6.sub(c1, r1),\n});\nconst Fp12Multiply = ({ c0, c1 }: Fp12, rhs: Fp12 | bigint) => {\n  if (typeof rhs === 'bigint') return { c0: Fp6.mul(c0, rhs), c1: Fp6.mul(c1, rhs) };\n  let { c0: r0, c1: r1 } = rhs;\n  let t1 = Fp6.mul(c0, r0); // c0 * r0\n  let t2 = Fp6.mul(c1, r1); // c1 * r1\n  return {\n    c0: Fp6.add(t1, Fp6.mulByNonresidue(t2)), // T1 + T2 * v\n    // (c0 + c1) * (r0 + r1) - (T1 + T2)\n    c1: Fp6.sub(Fp6.mul(Fp6.add(c0, c1), Fp6.add(r0, r1)), Fp6.add(t1, t2)),\n  };\n};\nconst Fp12Square = ({ c0, c1 }: Fp12) => {\n  let ab = Fp6.mul(c0, c1); // c0 * c1\n  return {\n    // (c1 * v + c0) * (c0 + c1) - AB - AB * v\n    c0: Fp6.sub(\n      Fp6.sub(Fp6.mul(Fp6.add(Fp6.mulByNonresidue(c1), c0), Fp6.add(c0, c1)), ab),\n      Fp6.mulByNonresidue(ab)\n    ),\n    c1: Fp6.add(ab, ab),\n  }; // AB + AB\n};\nfunction Fp4Square(a: Fp2, b: Fp2): { first: Fp2; second: Fp2 } {\n  const a2 = Fp2.sqr(a);\n  const b2 = Fp2.sqr(b);\n  return {\n    first: Fp2.add(Fp2.mulByNonresidue(b2), a2), // b\u00B2 * Nonresidue + a\u00B2\n    second: Fp2.sub(Fp2.sub(Fp2.sqr(Fp2.add(a, b)), a2), b2), // (a + b)\u00B2 - a\u00B2 - b\u00B2\n  };\n}\ntype Fp12Utils = {\n  fromBigTwelve: (t: BigintTwelve) => Fp12;\n  frobeniusMap(num: Fp12, power: number): Fp12;\n  multiplyBy014(num: Fp12, o0: Fp2, o1: Fp2, o4: Fp2): Fp12;\n  multiplyByFp2(lhs: Fp12, rhs: Fp2): Fp12;\n  conjugate(num: Fp12): Fp12;\n  finalExponentiate(num: Fp12): Fp12;\n  _cyclotomicSquare(num: Fp12): Fp12;\n  _cyclotomicExp(num: Fp12, n: bigint): Fp12;\n};\n\nconst Fp12: mod.IField<Fp12> & Fp12Utils = {\n  ORDER: Fp2.ORDER, // TODO: unused, but need to verify\n  BITS: 2 * Fp2.BITS,\n  BYTES: 2 * Fp2.BYTES,\n  MASK: bitMask(2 * Fp2.BITS),\n  ZERO: { c0: Fp6.ZERO, c1: Fp6.ZERO },\n  ONE: { c0: Fp6.ONE, c1: Fp6.ZERO },\n  create: (num) => num,\n  isValid: ({ c0, c1 }) => Fp6.isValid(c0) && Fp6.isValid(c1),\n  is0: ({ c0, c1 }) => Fp6.is0(c0) && Fp6.is0(c1),\n  neg: ({ c0, c1 }) => ({ c0: Fp6.neg(c0), c1: Fp6.neg(c1) }),\n  eql: ({ c0, c1 }, { c0: r0, c1: r1 }) => Fp6.eql(c0, r0) && Fp6.eql(c1, r1),\n  sqrt: () => {\n    throw new Error('Not implemented');\n  },\n  inv: ({ c0, c1 }) => {\n    let t = Fp6.inv(Fp6.sub(Fp6.sqr(c0), Fp6.mulByNonresidue(Fp6.sqr(c1)))); // 1 / (c0\u00B2 - c1\u00B2 * v)\n    return { c0: Fp6.mul(c0, t), c1: Fp6.neg(Fp6.mul(c1, t)) }; // ((C0 * T) * T) + (-C1 * T) * w\n  },\n  div: (lhs, rhs) =>\n    Fp12.mul(lhs, typeof rhs === 'bigint' ? Fp.inv(Fp.create(rhs)) : Fp12.inv(rhs)),\n  pow: (num, power) => mod.FpPow(Fp12, num, power),\n  invertBatch: (nums) => mod.FpInvertBatch(Fp12, nums),\n  // Normalized\n  add: Fp12Add,\n  sub: Fp12Subtract,\n  mul: Fp12Multiply,\n  sqr: Fp12Square,\n  // NonNormalized stuff\n  addN: Fp12Add,\n  subN: Fp12Subtract,\n  mulN: Fp12Multiply,\n  sqrN: Fp12Square,\n\n  // Bytes utils\n  fromBytes: (b: Uint8Array): Fp12 => {\n    if (b.length !== Fp12.BYTES) throw new Error(`fromBytes wrong length=${b.length}`);\n    return {\n      c0: Fp6.fromBytes(b.subarray(0, Fp6.BYTES)),\n      c1: Fp6.fromBytes(b.subarray(Fp6.BYTES)),\n    };\n  },\n  toBytes: ({ c0, c1 }): Uint8Array => concatB(Fp6.toBytes(c0), Fp6.toBytes(c1)),\n  cmov: ({ c0, c1 }, { c0: r0, c1: r1 }, c) => ({\n    c0: Fp6.cmov(c0, r0, c),\n    c1: Fp6.cmov(c1, r1, c),\n  }),\n  // Utils\n  // toString() {\n  //   return `Fp12(${this.c0} + ${this.c1} * w)`;\n  // },\n  // fromTuple(c: [Fp6, Fp6]) {\n  //   return new Fp12(...c);\n  // }\n  fromBigTwelve: (t: BigintTwelve): Fp12 => ({\n    c0: Fp6.fromBigSix(t.slice(0, 6) as BigintSix),\n    c1: Fp6.fromBigSix(t.slice(6, 12) as BigintSix),\n  }),\n  // Raises to q**i -th power\n  frobeniusMap(lhs, power: number) {\n    const r0 = Fp6.frobeniusMap(lhs.c0, power);\n    const { c0, c1, c2 } = Fp6.frobeniusMap(lhs.c1, power);\n    const coeff = FP12_FROBENIUS_COEFFICIENTS[power % 12];\n    return {\n      c0: r0,\n      c1: Fp6.create({\n        c0: Fp2.mul(c0, coeff),\n        c1: Fp2.mul(c1, coeff),\n        c2: Fp2.mul(c2, coeff),\n      }),\n    };\n  },\n  // Sparse multiplication\n  multiplyBy014: ({ c0, c1 }, o0: Fp2, o1: Fp2, o4: Fp2) => {\n    let t0 = Fp6.multiplyBy01(c0, o0, o1);\n    let t1 = Fp6.multiplyBy1(c1, o4);\n    return {\n      c0: Fp6.add(Fp6.mulByNonresidue(t1), t0), // T1 * v + T0\n      // (c1 + c0) * [o0, o1+o4] - T0 - T1\n      c1: Fp6.sub(Fp6.sub(Fp6.multiplyBy01(Fp6.add(c1, c0), o0, Fp2.add(o1, o4)), t0), t1),\n    };\n  },\n  multiplyByFp2: ({ c0, c1 }, rhs: Fp2): Fp12 => ({\n    c0: Fp6.multiplyByFp2(c0, rhs),\n    c1: Fp6.multiplyByFp2(c1, rhs),\n  }),\n  conjugate: ({ c0, c1 }): Fp12 => ({ c0, c1: Fp6.neg(c1) }),\n\n  // A cyclotomic group is a subgroup of Fp^n defined by\n  //   G\u03A6\u2099(p) = {\u03B1 \u2208 Fp\u207F : \u03B1^\u03A6\u2099(p) = 1}\n  // The result of any pairing is in a cyclotomic subgroup\n  // https://eprint.iacr.org/2009/565.pdf\n  _cyclotomicSquare: ({ c0, c1 }): Fp12 => {\n    const { c0: c0c0, c1: c0c1, c2: c0c2 } = c0;\n    const { c0: c1c0, c1: c1c1, c2: c1c2 } = c1;\n    const { first: t3, second: t4 } = Fp4Square(c0c0, c1c1);\n    const { first: t5, second: t6 } = Fp4Square(c1c0, c0c2);\n    const { first: t7, second: t8 } = Fp4Square(c0c1, c1c2);\n    let t9 = Fp2.mulByNonresidue(t8); // T8 * (u + 1)\n    return {\n      c0: Fp6.create({\n        c0: Fp2.add(Fp2.mul(Fp2.sub(t3, c0c0), _2n), t3), // 2 * (T3 - c0c0)  + T3\n        c1: Fp2.add(Fp2.mul(Fp2.sub(t5, c0c1), _2n), t5), // 2 * (T5 - c0c1)  + T5\n        c2: Fp2.add(Fp2.mul(Fp2.sub(t7, c0c2), _2n), t7),\n      }), // 2 * (T7 - c0c2)  + T7\n      c1: Fp6.create({\n        c0: Fp2.add(Fp2.mul(Fp2.add(t9, c1c0), _2n), t9), // 2 * (T9 + c1c0) + T9\n        c1: Fp2.add(Fp2.mul(Fp2.add(t4, c1c1), _2n), t4), // 2 * (T4 + c1c1) + T4\n        c2: Fp2.add(Fp2.mul(Fp2.add(t6, c1c2), _2n), t6),\n      }),\n    }; // 2 * (T6 + c1c2) + T6\n  },\n  _cyclotomicExp(num, n) {\n    let z = Fp12.ONE;\n    for (let i = BLS_X_LEN - 1; i >= 0; i--) {\n      z = Fp12._cyclotomicSquare(z);\n      if (bitGet(n, i)) z = Fp12.mul(z, num);\n    }\n    return z;\n  },\n  // https://eprint.iacr.org/2010/354.pdf\n  // https://eprint.iacr.org/2009/565.pdf\n  finalExponentiate: (num) => {\n    const x = BLS_X;\n    // this^(q\u2076) / this\n    const t0 = Fp12.div(Fp12.frobeniusMap(num, 6), num);\n    // t0^(q\u00B2) * t0\n    const t1 = Fp12.mul(Fp12.frobeniusMap(t0, 2), t0);\n    const t2 = Fp12.conjugate(Fp12._cyclotomicExp(t1, x));\n    const t3 = Fp12.mul(Fp12.conjugate(Fp12._cyclotomicSquare(t1)), t2);\n    const t4 = Fp12.conjugate(Fp12._cyclotomicExp(t3, x));\n    const t5 = Fp12.conjugate(Fp12._cyclotomicExp(t4, x));\n    const t6 = Fp12.mul(Fp12.conjugate(Fp12._cyclotomicExp(t5, x)), Fp12._cyclotomicSquare(t2));\n    const t7 = Fp12.conjugate(Fp12._cyclotomicExp(t6, x));\n    const t2_t5_pow_q2 = Fp12.frobeniusMap(Fp12.mul(t2, t5), 2);\n    const t4_t1_pow_q3 = Fp12.frobeniusMap(Fp12.mul(t4, t1), 3);\n    const t6_t1c_pow_q1 = Fp12.frobeniusMap(Fp12.mul(t6, Fp12.conjugate(t1)), 1);\n    const t7_t3c_t1 = Fp12.mul(Fp12.mul(t7, Fp12.conjugate(t3)), t1);\n    // (t2 * t5)^(q\u00B2) * (t4 * t1)^(q\u00B3) * (t6 * t1.conj)^(q^1) * t7 * t3.conj * t1\n    return Fp12.mul(Fp12.mul(Fp12.mul(t2_t5_pow_q2, t4_t1_pow_q3), t6_t1c_pow_q1), t7_t3c_t1);\n  },\n};\nconst FP12_FROBENIUS_COEFFICIENTS = [\n  [BigInt('0x1'), BigInt('0x0')],\n  [\n    BigInt(\n      '0x1904d3bf02bb0667c231beb4202c0d1f0fd603fd3cbd5f4f7b2443d784bab9c4f67ea53d63e7813d8d0775ed92235fb8'\n    ),\n    BigInt(\n      '0x00fc3e2b36c4e03288e9e902231f9fb854a14787b6c7b36fec0c8ec971f63c5f282d5ac14d6c7ec22cf78a126ddc4af3'\n    ),\n  ],\n  [\n    BigInt(\n      '0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffeffff'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x135203e60180a68ee2e9c448d77a2cd91c3dedd930b1cf60ef396489f61eb45e304466cf3e67fa0af1ee7b04121bdea2'\n    ),\n    BigInt(\n      '0x06af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09'\n    ),\n  ],\n  [\n    BigInt(\n      '0x00000000000000005f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffe'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x144e4211384586c16bd3ad4afa99cc9170df3560e77982d0db45f3536814f0bd5871c1908bd478cd1ee605167ff82995'\n    ),\n    BigInt(\n      '0x05b2cfd9013a5fd8df47fa6b48b1e045f39816240c0b8fee8beadf4d8e9c0566c63a3e6e257f87329b18fae980078116'\n    ),\n  ],\n  [\n    BigInt(\n      '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaaa'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x00fc3e2b36c4e03288e9e902231f9fb854a14787b6c7b36fec0c8ec971f63c5f282d5ac14d6c7ec22cf78a126ddc4af3'\n    ),\n    BigInt(\n      '0x1904d3bf02bb0667c231beb4202c0d1f0fd603fd3cbd5f4f7b2443d784bab9c4f67ea53d63e7813d8d0775ed92235fb8'\n    ),\n  ],\n  [\n    BigInt(\n      '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaac'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x06af0e0437ff400b6831e36d6bd17ffe48395dabc2d3435e77f76e17009241c5ee67992f72ec05f4c81084fbede3cc09'\n    ),\n    BigInt(\n      '0x135203e60180a68ee2e9c448d77a2cd91c3dedd930b1cf60ef396489f61eb45e304466cf3e67fa0af1ee7b04121bdea2'\n    ),\n  ],\n  [\n    BigInt(\n      '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaad'\n    ),\n    BigInt('0x0'),\n  ],\n  [\n    BigInt(\n      '0x05b2cfd9013a5fd8df47fa6b48b1e045f39816240c0b8fee8beadf4d8e9c0566c63a3e6e257f87329b18fae980078116'\n    ),\n    BigInt(\n      '0x144e4211384586c16bd3ad4afa99cc9170df3560e77982d0db45f3536814f0bd5871c1908bd478cd1ee605167ff82995'\n    ),\n  ],\n].map((n) => Fp2.fromBigTuple(n));\n// END OF CURVE FIELDS\n\n// HashToCurve\n\n// 3-isogeny map from E' to E https://www.rfc-editor.org/rfc/rfc9380#appendix-E.3\nconst isogenyMapG2 = isogenyMap(\n  Fp2,\n  [\n    // xNum\n    [\n      [\n        '0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6',\n        '0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97d6',\n      ],\n      [\n        '0x0',\n        '0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71a',\n      ],\n      [\n        '0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71e',\n        '0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38d',\n      ],\n      [\n        '0x171d6541fa38ccfaed6dea691f5fb614cb14b4e7f4e810aa22d6108f142b85757098e38d0f671c7188e2aaaaaaaa5ed1',\n        '0x0',\n      ],\n    ],\n    // xDen\n    [\n      [\n        '0x0',\n        '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa63',\n      ],\n      [\n        '0xc',\n        '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa9f',\n      ],\n      ['0x1', '0x0'], // LAST 1\n    ],\n    // yNum\n    [\n      [\n        '0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706',\n        '0x1530477c7ab4113b59a4c18b076d11930f7da5d4a07f649bf54439d87d27e500fc8c25ebf8c92f6812cfc71c71c6d706',\n      ],\n      [\n        '0x0',\n        '0x5c759507e8e333ebb5b7a9a47d7ed8532c52d39fd3a042a88b58423c50ae15d5c2638e343d9c71c6238aaaaaaaa97be',\n      ],\n      [\n        '0x11560bf17baa99bc32126fced787c88f984f87adf7ae0c7f9a208c6b4f20a4181472aaa9cb8d555526a9ffffffffc71c',\n        '0x8ab05f8bdd54cde190937e76bc3e447cc27c3d6fbd7063fcd104635a790520c0a395554e5c6aaaa9354ffffffffe38f',\n      ],\n      [\n        '0x124c9ad43b6cf79bfbf7043de3811ad0761b0f37a1e26286b0e977c69aa274524e79097a56dc4bd9e1b371c71c718b10',\n        '0x0',\n      ],\n    ],\n    // yDen\n    [\n      [\n        '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fb',\n        '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa8fb',\n      ],\n      [\n        '0x0',\n        '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffa9d3',\n      ],\n      [\n        '0x12',\n        '0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaa99',\n      ],\n      ['0x1', '0x0'], // LAST 1\n    ],\n  ].map((i) => i.map((pair) => Fp2.fromBigTuple(pair.map(BigInt)))) as [Fp2[], Fp2[], Fp2[], Fp2[]]\n);\n// 11-isogeny map from E' to E\nconst isogenyMapG1 = isogenyMap(\n  Fp,\n  [\n    // xNum\n    [\n      '0x11a05f2b1e833340b809101dd99815856b303e88a2d7005ff2627b56cdb4e2c85610c2d5f2e62d6eaeac1662734649b7',\n      '0x17294ed3e943ab2f0588bab22147a81c7c17e75b2f6a8417f565e33c70d1e86b4838f2a6f318c356e834eef1b3cb83bb',\n      '0xd54005db97678ec1d1048c5d10a9a1bce032473295983e56878e501ec68e25c958c3e3d2a09729fe0179f9dac9edcb0',\n      '0x1778e7166fcc6db74e0609d307e55412d7f5e4656a8dbf25f1b33289f1b330835336e25ce3107193c5b388641d9b6861',\n      '0xe99726a3199f4436642b4b3e4118e5499db995a1257fb3f086eeb65982fac18985a286f301e77c451154ce9ac8895d9',\n      '0x1630c3250d7313ff01d1201bf7a74ab5db3cb17dd952799b9ed3ab9097e68f90a0870d2dcae73d19cd13c1c66f652983',\n      '0xd6ed6553fe44d296a3726c38ae652bfb11586264f0f8ce19008e218f9c86b2a8da25128c1052ecaddd7f225a139ed84',\n      '0x17b81e7701abdbe2e8743884d1117e53356de5ab275b4db1a682c62ef0f2753339b7c8f8c8f475af9ccb5618e3f0c88e',\n      '0x80d3cf1f9a78fc47b90b33563be990dc43b756ce79f5574a2c596c928c5d1de4fa295f296b74e956d71986a8497e317',\n      '0x169b1f8e1bcfa7c42e0c37515d138f22dd2ecb803a0c5c99676314baf4bb1b7fa3190b2edc0327797f241067be390c9e',\n      '0x10321da079ce07e272d8ec09d2565b0dfa7dccdde6787f96d50af36003b14866f69b771f8c285decca67df3f1605fb7b',\n      '0x6e08c248e260e70bd1e962381edee3d31d79d7e22c837bc23c0bf1bc24c6b68c24b1b80b64d391fa9c8ba2e8ba2d229',\n    ],\n    // xDen\n    [\n      '0x8ca8d548cff19ae18b2e62f4bd3fa6f01d5ef4ba35b48ba9c9588617fc8ac62b558d681be343df8993cf9fa40d21b1c',\n      '0x12561a5deb559c4348b4711298e536367041e8ca0cf0800c0126c2588c48bf5713daa8846cb026e9e5c8276ec82b3bff',\n      '0xb2962fe57a3225e8137e629bff2991f6f89416f5a718cd1fca64e00b11aceacd6a3d0967c94fedcfcc239ba5cb83e19',\n      '0x3425581a58ae2fec83aafef7c40eb545b08243f16b1655154cca8abc28d6fd04976d5243eecf5c4130de8938dc62cd8',\n      '0x13a8e162022914a80a6f1d5f43e7a07dffdfc759a12062bb8d6b44e833b306da9bd29ba81f35781d539d395b3532a21e',\n      '0xe7355f8e4e667b955390f7f0506c6e9395735e9ce9cad4d0a43bcef24b8982f7400d24bc4228f11c02df9a29f6304a5',\n      '0x772caacf16936190f3e0c63e0596721570f5799af53a1894e2e073062aede9cea73b3538f0de06cec2574496ee84a3a',\n      '0x14a7ac2a9d64a8b230b3f5b074cf01996e7f63c21bca68a81996e1cdf9822c580fa5b9489d11e2d311f7d99bbdcc5a5e',\n      '0xa10ecf6ada54f825e920b3dafc7a3cce07f8d1d7161366b74100da67f39883503826692abba43704776ec3a79a1d641',\n      '0x95fc13ab9e92ad4476d6e3eb3a56680f682b4ee96f7d03776df533978f31c1593174e4b4b7865002d6384d168ecdd0a',\n      '0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n      '0x90d97c81ba24ee0259d1f094980dcfa11ad138e48a869522b52af6c956543d3cd0c7aee9b3ba3c2be9845719707bb33',\n      '0x134996a104ee5811d51036d776fb46831223e96c254f383d0f906343eb67ad34d6c56711962fa8bfe097e75a2e41c696',\n      '0xcc786baa966e66f4a384c86a3b49942552e2d658a31ce2c344be4b91400da7d26d521628b00523b8dfe240c72de1f6',\n      '0x1f86376e8981c217898751ad8746757d42aa7b90eeb791c09e4a3ec03251cf9de405aba9ec61deca6355c77b0e5f4cb',\n      '0x8cc03fdefe0ff135caf4fe2a21529c4195536fbe3ce50b879833fd221351adc2ee7f8dc099040a841b6daecf2e8fedb',\n      '0x16603fca40634b6a2211e11db8f0a6a074a7d0d4afadb7bd76505c3d3ad5544e203f6326c95a807299b23ab13633a5f0',\n      '0x4ab0b9bcfac1bbcb2c977d027796b3ce75bb8ca2be184cb5231413c4d634f3747a87ac2460f415ec961f8855fe9d6f2',\n      '0x987c8d5333ab86fde9926bd2ca6c674170a05bfe3bdd81ffd038da6c26c842642f64550fedfe935a15e4ca31870fb29',\n      '0x9fc4018bd96684be88c9e221e4da1bb8f3abd16679dc26c1e8b6e6a1f20cabe69d65201c78607a360370e577bdba587',\n      '0xe1bba7a1186bdb5223abde7ada14a23c42a0ca7915af6fe06985e7ed1e4d43b9b3f7055dd4eba6f2bafaaebca731c30',\n      '0x19713e47937cd1be0dfd0b8f1d43fb93cd2fcbcb6caf493fd1183e416389e61031bf3a5cce3fbafce813711ad011c132',\n      '0x18b46a908f36f6deb918c143fed2edcc523559b8aaf0c2462e6bfe7f911f643249d9cdf41b44d606ce07c8a4d0074d8e',\n      '0xb182cac101b9399d155096004f53f447aa7b12a3426b08ec02710e807b4633f06c851c1919211f20d4c04f00b971ef8',\n      '0x245a394ad1eca9b72fc00ae7be315dc757b3b080d4c158013e6632d3c40659cc6cf90ad1c232a6442d9d3f5db980133',\n      '0x5c129645e44cf1102a159f748c4a3fc5e673d81d7e86568d9ab0f5d396a7ce46ba1049b6579afb7866b1e715475224b',\n      '0x15e6be4e990f03ce4ea50b3b42df2eb5cb181d8f84965a3957add4fa95af01b2b665027efec01c7704b456be69c8b604',\n    ],\n    // yDen\n    [\n      '0x16112c4c3a9c98b252181140fad0eae9601a6de578980be6eec3232b5be72e7a07f3688ef60c206d01479253b03663c1',\n      '0x1962d75c2381201e1a0cbd6c43c348b885c84ff731c4d59ca4a10356f453e01f78a4260763529e3532f6102c2e49a03d',\n      '0x58df3306640da276faaae7d6e8eb15778c4855551ae7f310c35a5dd279cd2eca6757cd636f96f891e2538b53dbf67f2',\n      '0x16b7d288798e5395f20d23bf89edb4d1d115c5dbddbcd30e123da489e726af41727364f2c28297ada8d26d98445f5416',\n      '0xbe0e079545f43e4b00cc912f8228ddcc6d19c9f0f69bbb0542eda0fc9dec916a20b15dc0fd2ededda39142311a5001d',\n      '0x8d9e5297186db2d9fb266eaac783182b70152c65550d881c5ecd87b6f0f5a6449f38db9dfa9cce202c6477faaf9b7ac',\n      '0x166007c08a99db2fc3ba8734ace9824b5eecfdfa8d0cf8ef5dd365bc400a0051d5fa9c01a58b1fb93d1a1399126a775c',\n      '0x16a3ef08be3ea7ea03bcddfabba6ff6ee5a4375efa1f4fd7feb34fd206357132b920f5b00801dee460ee415a15812ed9',\n      '0x1866c8ed336c61231a1be54fd1d74cc4f9fb0ce4c6af5920abc5750c4bf39b4852cfe2f7bb9248836b233d9d55535d4a',\n      '0x167a55cda70a6e1cea820597d94a84903216f763e13d87bb5308592e7ea7d4fbc7385ea3d529b35e346ef48bb8913f55',\n      '0x4d2f259eea405bd48f010a01ad2911d9c6dd039bb61a6290e591b36e636a5c871a5c29f4f83060400f8b49cba8f6aa8',\n      '0xaccbb67481d033ff5852c1e48c50c477f94ff8aefce42d28c0f9a88cea7913516f968986f7ebbea9684b529e2561092',\n      '0xad6b9514c767fe3c3613144b45f1496543346d98adf02267d5ceef9a00d9b8693000763e3b90ac11e99b138573345cc',\n      '0x2660400eb2e4f3b628bdd0d53cd76f2bf565b94e72927c1cb748df27942480e420517bd8714cc80d1fadc1326ed06f7',\n      '0xe0fa1d816ddc03e6b24255e0d7819c171c40f65e273b853324efcd6356caa205ca2f570f13497804415473a1d634b8f',\n      '0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n  ].map((i) => i.map((j) => BigInt(j))) as [Fp[], Fp[], Fp[], Fp[]]\n);\n\n// SWU Map - Fp2 to G2': y\u00B2 = x\u00B3 + 240i * x + 1012 + 1012i\nconst G2_SWU = mapToCurveSimpleSWU(Fp2, {\n  A: Fp2.create({ c0: Fp.create(_0n), c1: Fp.create(BigInt(240)) }), // A' = 240 * I\n  B: Fp2.create({ c0: Fp.create(BigInt(1012)), c1: Fp.create(BigInt(1012)) }), // B' = 1012 * (1 + I)\n  Z: Fp2.create({ c0: Fp.create(BigInt(-2)), c1: Fp.create(BigInt(-1)) }), // Z: -(2 + I)\n});\n// Optimized SWU Map - Fp to G1\nconst G1_SWU = mapToCurveSimpleSWU(Fp, {\n  A: Fp.create(\n    BigInt(\n      '0x144698a3b8e9433d693a02c96d4982b0ea985383ee66a8d8e8981aefd881ac98936f8da0e0f97f5cf428082d584c1d'\n    )\n  ),\n  B: Fp.create(\n    BigInt(\n      '0x12e2908d11688030018b12e8753eee3b2016c1f0f24f4070a0b9c14fcef35ef55a23215a316ceaa5d1cc48e98e172be0'\n    )\n  ),\n  Z: Fp.create(BigInt(11)),\n});\n\n// Endomorphisms (for fast cofactor clearing)\n// \u03A8(P) endomorphism\nconst ut_root = Fp6.create({ c0: Fp2.ZERO, c1: Fp2.ONE, c2: Fp2.ZERO });\nconst wsq = Fp12.create({ c0: ut_root, c1: Fp6.ZERO });\nconst wcu = Fp12.create({ c0: Fp6.ZERO, c1: ut_root });\nconst [wsq_inv, wcu_inv] = Fp12.invertBatch([wsq, wcu]);\nfunction psi(x: Fp2, y: Fp2): [Fp2, Fp2] {\n  // Untwist Fp2->Fp12 && frobenius(1) && twist back\n  const x2 = Fp12.mul(Fp12.frobeniusMap(Fp12.multiplyByFp2(wsq_inv, x), 1), wsq).c0.c0;\n  const y2 = Fp12.mul(Fp12.frobeniusMap(Fp12.multiplyByFp2(wcu_inv, y), 1), wcu).c0.c0;\n  return [x2, y2];\n}\n// \u03A8 endomorphism\nfunction G2psi(c: ProjConstructor<Fp2>, P: ProjPointType<Fp2>) {\n  const affine = P.toAffine();\n  const p = psi(affine.x, affine.y);\n  return new c(p[0], p[1], Fp2.ONE);\n}\n// \u03A8\u00B2(P) endomorphism\n// 1 / F2(2)^((p-1)/3) in GF(p\u00B2)\nconst PSI2_C1 = BigInt(\n  '0x1a0111ea397fe699ec02408663d4de85aa0d857d89759ad4897d29650fb85f9b409427eb4f49fffd8bfd00000000aaac'\n);\n\nfunction psi2(x: Fp2, y: Fp2): [Fp2, Fp2] {\n  return [Fp2.mul(x, PSI2_C1), Fp2.neg(y)];\n}\nfunction G2psi2(c: ProjConstructor<Fp2>, P: ProjPointType<Fp2>) {\n  const affine = P.toAffine();\n  const p = psi2(affine.x, affine.y);\n  return new c(p[0], p[1], Fp2.ONE);\n}\n\n// Default hash_to_field options are for hash to G2.\n//\n// Parameter definitions are in section 5.3 of the spec unless otherwise noted.\n// Parameter values come from section 8.8.2 of the spec.\n// https://www.rfc-editor.org/rfc/rfc9380#section-8.8.2\n//\n// Base field F is GF(p^m)\n// p = 0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab\n// m = 2 (or 1 for G1 see section 8.8.1)\n// k = 128\nconst htfDefaults = Object.freeze({\n  // DST: a domain separation tag\n  // defined in section 2.2.5\n  // Use utils.getDSTLabel(), utils.setDSTLabel(value)\n  DST: 'BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_',\n  encodeDST: 'BLS_SIG_BLS12381G2_XMD:SHA-256_SSWU_RO_NUL_',\n  // p: the characteristic of F\n  //    where F is a finite field of characteristic p and order q = p^m\n  p: Fp.ORDER,\n  // m: the extension degree of F, m >= 1\n  //     where F is a finite field of characteristic p and order q = p^m\n  m: 2,\n  // k: the target security level for the suite in bits\n  // defined in section 5.1\n  k: 128,\n  // option to use a message that has already been processed by\n  // expand_message_xmd\n  expand: 'xmd',\n  // Hash functions for: expand_message_xmd is appropriate for use with a\n  // wide range of hash functions, including SHA-2, SHA-3, BLAKE2, and others.\n  // BBS+ uses blake2: https://github.com/hyperledger/aries-framework-go/issues/2247\n  hash: sha256,\n} as const);\n\n// Encoding utils\n// Point on G1 curve: (x, y)\n\n// Compressed point of infinity\nconst COMPRESSED_ZERO = setMask(Fp.toBytes(_0n), { infinity: true, compressed: true }); // set compressed & point-at-infinity bits\n\nfunction parseMask(bytes: Uint8Array) {\n  // Copy, so we can remove mask data. It will be removed also later, when Fp.create will call modulo.\n  bytes = bytes.slice();\n  const mask = bytes[0] & 0b1110_0000;\n  const compressed = !!((mask >> 7) & 1); // compression bit (0b1000_0000)\n  const infinity = !!((mask >> 6) & 1); // point at infinity bit (0b0100_0000)\n  const sort = !!((mask >> 5) & 1); // sort bit (0b0010_0000)\n  bytes[0] &= 0b0001_1111; // clear mask (zero first 3 bits)\n  return { compressed, infinity, sort, value: bytes };\n}\n\nfunction setMask(\n  bytes: Uint8Array,\n  mask: { compressed?: boolean; infinity?: boolean; sort?: boolean }\n) {\n  if (bytes[0] & 0b1110_0000) throw new Error('setMask: non-empty mask');\n  if (mask.compressed) bytes[0] |= 0b1000_0000;\n  if (mask.infinity) bytes[0] |= 0b0100_0000;\n  if (mask.sort) bytes[0] |= 0b0010_0000;\n  return bytes;\n}\n\nfunction signatureG1ToRawBytes(point: ProjPointType<Fp>) {\n  point.assertValidity();\n  const isZero = point.equals(bls12_381.G1.ProjectivePoint.ZERO);\n  const { x, y } = point.toAffine();\n  if (isZero) return COMPRESSED_ZERO.slice();\n  const P = Fp.ORDER;\n  const sort = Boolean((y * _2n) / P);\n  return setMask(numberToBytesBE(x, Fp.BYTES), { compressed: true, sort });\n}\n\nfunction signatureG2ToRawBytes(point: ProjPointType<Fp2>) {\n  // NOTE: by some reasons it was missed in bls12-381, looks like bug\n  point.assertValidity();\n  const len = Fp.BYTES;\n  if (point.equals(bls12_381.G2.ProjectivePoint.ZERO))\n    return concatB(COMPRESSED_ZERO, numberToBytesBE(_0n, len));\n  const { x, y } = point.toAffine();\n  const { re: x0, im: x1 } = Fp2.reim(x);\n  const { re: y0, im: y1 } = Fp2.reim(y);\n  const tmp = y1 > _0n ? y1 * _2n : y0 * _2n;\n  const sort = Boolean((tmp / Fp.ORDER) & _1n);\n  const z2 = x0;\n  return concatB(\n    setMask(numberToBytesBE(x1, len), { sort, compressed: true }),\n    numberToBytesBE(z2, len)\n  );\n}\n\n// To verify curve parameters, see pairing-friendly-curves spec:\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-pairing-friendly-curves-11\n// Basic math is done over finite fields over p.\n// More complicated math is done over polynominal extension fields.\n// To simplify calculations in Fp12, we construct extension tower:\n// Fp\u2081\u2082 = Fp\u2086\u00B2 => Fp\u2082\u00B3\n// Fp(u) / (u\u00B2 - \u03B2) where \u03B2 = -1\n// Fp\u2082(v) / (v\u00B3 - \u03BE) where \u03BE = u + 1\n// Fp\u2086(w) / (w\u00B2 - \u03B3) where \u03B3 = v\n// Here goes constants && point encoding format\nexport const bls12_381: CurveFn<Fp, Fp2, Fp6, Fp12> = bls({\n  // Fields\n  fields: {\n    Fp,\n    Fp2,\n    Fp6,\n    Fp12,\n    Fr,\n  },\n  // G1 is the order-q subgroup of E1(Fp) : y\u00B2 = x\u00B3 + 4, #E1(Fp) = h1q, where\n  // characteristic; z + (z\u2074 - z\u00B2 + 1)(z - 1)\u00B2/3\n  G1: {\n    Fp,\n    // cofactor; (z - 1)\u00B2/3\n    h: BigInt('0x396c8c005555e1568c00aaab0000aaab'),\n    // generator's coordinates\n    // x = 3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507\n    // y = 1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569\n    Gx: BigInt(\n      '0x17f1d3a73197d7942695638c4fa9ac0fc3688c4f9774b905a14e3a3f171bac586c55e83ff97a1aeffb3af00adb22c6bb'\n    ),\n    Gy: BigInt(\n      '0x08b3f481e3aaa0f1a09e30ed741d8ae4fcf5e095d5d00af600db18cb2c04b3edd03cc744a2888ae40caa232946c5e7e1'\n    ),\n    a: Fp.ZERO,\n    b: _4n,\n    htfDefaults: { ...htfDefaults, m: 1, DST: 'BLS_SIG_BLS12381G1_XMD:SHA-256_SSWU_RO_NUL_' },\n    wrapPrivateKey: true,\n    allowInfinityPoint: true,\n    // Checks is the point resides in prime-order subgroup.\n    // point.isTorsionFree() should return true for valid points\n    // It returns false for shitty points.\n    // https://eprint.iacr.org/2021/1130.pdf\n    isTorsionFree: (c, point): boolean => {\n      // \u03C6 endomorphism\n      const cubicRootOfUnityModP = BigInt(\n        '0x5f19672fdf76ce51ba69c6076a0f77eaddb3a93be6f89688de17d813620a00022e01fffffffefffe'\n      );\n      const phi = new c(Fp.mul(point.px, cubicRootOfUnityModP), point.py, point.pz);\n\n      // todo: unroll\n      const xP = point.multiplyUnsafe(bls12_381.params.x).negate(); // [x]P\n      const u2P = xP.multiplyUnsafe(bls12_381.params.x); // [u2]P\n      return u2P.equals(phi);\n\n      // https://eprint.iacr.org/2019/814.pdf\n      // (z\u00B2 \u2212 1)/3\n      // const c1 = BigInt('0x396c8c005555e1560000000055555555');\n      // const P = this;\n      // const S = P.sigma();\n      // const Q = S.double();\n      // const S2 = S.sigma();\n      // // [(z\u00B2 \u2212 1)/3](2\u03C3(P) \u2212 P \u2212 \u03C3\u00B2(P)) \u2212 \u03C3\u00B2(P) = O\n      // const left = Q.subtract(P).subtract(S2).multiplyUnsafe(c1);\n      // const C = left.subtract(S2);\n      // return C.isZero();\n    },\n    // Clear cofactor of G1\n    // https://eprint.iacr.org/2019/403\n    clearCofactor: (_c, point) => {\n      // return this.multiplyUnsafe(CURVE.h);\n      return point.multiplyUnsafe(bls12_381.params.x).add(point); // x*P + P\n    },\n    mapToCurve: (scalars: bigint[]) => {\n      const { x, y } = G1_SWU(Fp.create(scalars[0]));\n      return isogenyMapG1(x, y);\n    },\n    fromBytes: (bytes: Uint8Array): AffinePoint<Fp> => {\n      const { compressed, infinity, sort, value } = parseMask(bytes);\n      if (value.length === 48 && compressed) {\n        // TODO: Fp.bytes\n        const P = Fp.ORDER;\n        const compressedValue = bytesToNumberBE(value);\n        // Zero\n        const x = Fp.create(compressedValue & Fp.MASK);\n        if (infinity) {\n          if (x !== _0n) throw new Error('G1: non-empty compressed point at infinity');\n          return { x: _0n, y: _0n };\n        }\n        const right = Fp.add(Fp.pow(x, _3n), Fp.create(bls12_381.params.G1b)); // y\u00B2 = x\u00B3 + b\n        let y = Fp.sqrt(right);\n        if (!y) throw new Error('Invalid compressed G1 point');\n        if ((y * _2n) / P !== BigInt(sort)) y = Fp.neg(y);\n        return { x: Fp.create(x), y: Fp.create(y) };\n      } else if (value.length === 96 && !compressed) {\n        // Check if the infinity flag is set\n        const x = bytesToNumberBE(value.subarray(0, Fp.BYTES));\n        const y = bytesToNumberBE(value.subarray(Fp.BYTES));\n        if (infinity) {\n          if (x !== _0n || y !== _0n) throw new Error('G1: non-empty point at infinity');\n          return bls12_381.G1.ProjectivePoint.ZERO.toAffine();\n        }\n        return { x: Fp.create(x), y: Fp.create(y) };\n      } else {\n        throw new Error('Invalid point G1, expected 48/96 bytes');\n      }\n    },\n    toBytes: (c, point, isCompressed) => {\n      const isZero = point.equals(c.ZERO);\n      const { x, y } = point.toAffine();\n      if (isCompressed) {\n        if (isZero) return COMPRESSED_ZERO.slice();\n        const P = Fp.ORDER;\n        const sort = Boolean((y * _2n) / P);\n        return setMask(numberToBytesBE(x, Fp.BYTES), { compressed: true, sort });\n      } else {\n        if (isZero) {\n          // 2x PUBLIC_KEY_LENGTH\n          const x = concatB(new Uint8Array([0x40]), new Uint8Array(2 * Fp.BYTES - 1));\n          return x;\n        } else {\n          return concatB(numberToBytesBE(x, Fp.BYTES), numberToBytesBE(y, Fp.BYTES));\n        }\n      }\n    },\n    ShortSignature: {\n      fromHex(hex: Hex): ProjPointType<Fp> {\n        const { infinity, sort, value } = parseMask(ensureBytes('signatureHex', hex, 48));\n        const P = Fp.ORDER;\n        const compressedValue = bytesToNumberBE(value);\n        // Zero\n        if (infinity) return bls12_381.G1.ProjectivePoint.ZERO;\n        const x = Fp.create(compressedValue & Fp.MASK);\n        const right = Fp.add(Fp.pow(x, _3n), Fp.create(bls12_381.params.G1b)); // y\u00B2 = x\u00B3 + b\n        let y = Fp.sqrt(right);\n        if (!y) throw new Error('Invalid compressed G1 point');\n        const aflag = BigInt(sort);\n        if ((y * _2n) / P !== aflag) y = Fp.neg(y);\n        const point = bls12_381.G1.ProjectivePoint.fromAffine({ x, y });\n        point.assertValidity();\n        return point;\n      },\n      toRawBytes(point: ProjPointType<Fp>) {\n        return signatureG1ToRawBytes(point);\n      },\n      toHex(point: ProjPointType<Fp>) {\n        return bytesToHex(signatureG1ToRawBytes(point));\n      },\n    },\n  },\n  // G2 is the order-q subgroup of E2(Fp\u00B2) : y\u00B2 = x\u00B3+4(1+\u221A\u22121),\n  // where Fp2 is Fp[\u221A\u22121]/(x2+1). #E2(Fp2 ) = h2q, where\n  // G\u00B2 - 1\n  // h2q\n  G2: {\n    Fp: Fp2,\n    // cofactor\n    h: BigInt(\n      '0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5'\n    ),\n    Gx: Fp2.fromBigTuple([\n      BigInt(\n        '0x024aa2b2f08f0a91260805272dc51051c6e47ad4fa403b02b4510b647ae3d1770bac0326a805bbefd48056c8c121bdb8'\n      ),\n      BigInt(\n        '0x13e02b6052719f607dacd3a088274f65596bd0d09920b61ab5da61bbdc7f5049334cf11213945d57e5ac7d055d042b7e'\n      ),\n    ]),\n    // y =\n    // 927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582,\n    // 1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905\n    Gy: Fp2.fromBigTuple([\n      BigInt(\n        '0x0ce5d527727d6e118cc9cdc6da2e351aadfd9baa8cbdd3a76d429a695160d12c923ac9cc3baca289e193548608b82801'\n      ),\n      BigInt(\n        '0x0606c4a02ea734cc32acd2b02bc28b99cb3e287e85a763af267492ab572e99ab3f370d275cec1da1aaa9075ff05f79be'\n      ),\n    ]),\n    a: Fp2.ZERO,\n    b: Fp2.fromBigTuple([_4n, _4n]),\n    hEff: BigInt(\n      '0xbc69f08f2ee75b3584c6a0ea91b352888e2a8e9145ad7689986ff031508ffe1329c2f178731db956d82bf015d1212b02ec0ec69d7477c1ae954cbc06689f6a359894c0adebbf6b4e8020005aaa95551'\n    ),\n    htfDefaults: { ...htfDefaults },\n    wrapPrivateKey: true,\n    allowInfinityPoint: true,\n    mapToCurve: (scalars: bigint[]) => {\n      const { x, y } = G2_SWU(Fp2.fromBigTuple(scalars));\n      return isogenyMapG2(x, y);\n    },\n    // Checks is the point resides in prime-order subgroup.\n    // point.isTorsionFree() should return true for valid points\n    // It returns false for shitty points.\n    // https://eprint.iacr.org/2021/1130.pdf\n    isTorsionFree: (c, P): boolean => {\n      return P.multiplyUnsafe(bls12_381.params.x).negate().equals(G2psi(c, P)); // \u03C8(P) == [u](P)\n      // Older version: https://eprint.iacr.org/2019/814.pdf\n      // \u03A8\u00B2(P) => \u03A8\u00B3(P) => [z]\u03A8\u00B3(P) where z = -x => [z]\u03A8\u00B3(P) - \u03A8\u00B2(P) + P == O\n      // return P.psi2().psi().mulNegX().subtract(psi2).add(P).isZero();\n    },\n    // Maps the point into the prime-order subgroup G2.\n    // clear_cofactor_bls12381_g2 from cfrg-hash-to-curve-11\n    // https://eprint.iacr.org/2017/419.pdf\n    // prettier-ignore\n    clearCofactor: (c, P) => {\n      const x = bls12_381.params.x;\n      let t1 = P.multiplyUnsafe(x).negate();  // [-x]P\n      let t2 = G2psi(c, P);                   // \u03A8(P)\n      let t3 = P.double();                    // 2P\n      t3 = G2psi2(c, t3);                     // \u03A8\u00B2(2P)\n      t3 = t3.subtract(t2);                   // \u03A8\u00B2(2P) - \u03A8(P)\n      t2 = t1.add(t2);                        // [-x]P + \u03A8(P)\n      t2 = t2.multiplyUnsafe(x).negate();     // [x\u00B2]P - [x]\u03A8(P)\n      t3 = t3.add(t2);                        // \u03A8\u00B2(2P) - \u03A8(P) + [x\u00B2]P - [x]\u03A8(P)\n      t3 = t3.subtract(t1);                   // \u03A8\u00B2(2P) - \u03A8(P) + [x\u00B2]P - [x]\u03A8(P) + [x]P\n      const Q = t3.subtract(P);               // \u03A8\u00B2(2P) - \u03A8(P) + [x\u00B2]P - [x]\u03A8(P) + [x]P - 1P\n      return Q;                               // [x\u00B2-x-1]P + [x-1]\u03A8(P) + \u03A8\u00B2(2P)\n    },\n    fromBytes: (bytes: Uint8Array): AffinePoint<Fp2> => {\n      const { compressed, infinity, sort, value } = parseMask(bytes);\n      if (\n        (!compressed && !infinity && sort) || // 00100000\n        (!compressed && infinity && sort) || // 01100000\n        (sort && infinity && compressed) // 11100000\n      ) {\n        throw new Error('Invalid encoding flag: ' + (bytes[0] & 0b1110_0000));\n      }\n      const L = Fp.BYTES;\n      const slc = (b: Uint8Array, from: number, to?: number) => bytesToNumberBE(b.slice(from, to));\n      if (value.length === 96 && compressed) {\n        const b = bls12_381.params.G2b;\n        const P = Fp.ORDER;\n        if (infinity) {\n          // check that all bytes are 0\n          if (value.reduce((p, c) => (p !== 0 ? c + 1 : c), 0) > 0) {\n            throw new Error('Invalid compressed G2 point');\n          }\n          return { x: Fp2.ZERO, y: Fp2.ZERO };\n        }\n        const x_1 = slc(value, 0, L);\n        const x_0 = slc(value, L, 2 * L);\n        const x = Fp2.create({ c0: Fp.create(x_0), c1: Fp.create(x_1) });\n        const right = Fp2.add(Fp2.pow(x, _3n), b); // y\u00B2 = x\u00B3 + 4 * (u+1) = x\u00B3 + b\n        let y = Fp2.sqrt(right);\n        const Y_bit = y.c1 === _0n ? (y.c0 * _2n) / P : (y.c1 * _2n) / P ? _1n : _0n;\n        y = sort && Y_bit > 0 ? y : Fp2.neg(y);\n        return { x, y };\n      } else if (value.length === 192 && !compressed) {\n        if (infinity) {\n          if (value.reduce((p, c) => (p !== 0 ? c + 1 : c), 0) > 0) {\n            throw new Error('Invalid uncompressed G2 point');\n          }\n          return { x: Fp2.ZERO, y: Fp2.ZERO };\n        }\n        const x1 = slc(value, 0, L);\n        const x0 = slc(value, L, 2 * L);\n        const y1 = slc(value, 2 * L, 3 * L);\n        const y0 = slc(value, 3 * L, 4 * L);\n        return { x: Fp2.fromBigTuple([x0, x1]), y: Fp2.fromBigTuple([y0, y1]) };\n      } else {\n        throw new Error('Invalid point G2, expected 96/192 bytes');\n      }\n    },\n    toBytes: (c, point, isCompressed) => {\n      const { BYTES: len, ORDER: P } = Fp;\n      const isZero = point.equals(c.ZERO);\n      const { x, y } = point.toAffine();\n      if (isCompressed) {\n        if (isZero) return concatB(COMPRESSED_ZERO, numberToBytesBE(_0n, len));\n        const flag = Boolean(y.c1 === _0n ? (y.c0 * _2n) / P : (y.c1 * _2n) / P);\n        return concatB(\n          setMask(numberToBytesBE(x.c1, len), { compressed: true, sort: flag }),\n          numberToBytesBE(x.c0, len)\n        );\n      } else {\n        if (isZero) return concatB(new Uint8Array([0x40]), new Uint8Array(4 * len - 1)); // bytes[0] |= 1 << 6;\n        const { re: x0, im: x1 } = Fp2.reim(x);\n        const { re: y0, im: y1 } = Fp2.reim(y);\n        return concatB(\n          numberToBytesBE(x1, len),\n          numberToBytesBE(x0, len),\n          numberToBytesBE(y1, len),\n          numberToBytesBE(y0, len)\n        );\n      }\n    },\n    Signature: {\n      // TODO: Optimize, it's very slow because of sqrt.\n      fromHex(hex: Hex): ProjPointType<Fp2> {\n        const { infinity, sort, value } = parseMask(ensureBytes('signatureHex', hex));\n        const P = Fp.ORDER;\n        const half = value.length / 2;\n        if (half !== 48 && half !== 96)\n          throw new Error('Invalid compressed signature length, must be 96 or 192');\n        const z1 = bytesToNumberBE(value.slice(0, half));\n        const z2 = bytesToNumberBE(value.slice(half));\n        // Indicates the infinity point\n        if (infinity) return bls12_381.G2.ProjectivePoint.ZERO;\n        const x1 = Fp.create(z1 & Fp.MASK);\n        const x2 = Fp.create(z2);\n        const x = Fp2.create({ c0: x2, c1: x1 });\n        const y2 = Fp2.add(Fp2.pow(x, _3n), bls12_381.params.G2b); // y\u00B2 = x\u00B3 + 4\n        // The slow part\n        let y = Fp2.sqrt(y2);\n        if (!y) throw new Error('Failed to find a square root');\n\n        // Choose the y whose leftmost bit of the imaginary part is equal to the a_flag1\n        // If y1 happens to be zero, then use the bit of y0\n        const { re: y0, im: y1 } = Fp2.reim(y);\n        const aflag1 = BigInt(sort);\n        const isGreater = y1 > _0n && (y1 * _2n) / P !== aflag1;\n        const isZero = y1 === _0n && (y0 * _2n) / P !== aflag1;\n        if (isGreater || isZero) y = Fp2.neg(y);\n        const point = bls12_381.G2.ProjectivePoint.fromAffine({ x, y });\n        point.assertValidity();\n        return point;\n      },\n      toRawBytes(point: ProjPointType<Fp2>) {\n        return signatureG2ToRawBytes(point);\n      },\n      toHex(point: ProjPointType<Fp2>) {\n        return bytesToHex(signatureG2ToRawBytes(point));\n      },\n    },\n  },\n  params: {\n    x: BLS_X, // The BLS parameter x for BLS12-381\n    r: Fr.ORDER, // order; z\u2074 \u2212 z\u00B2 + 1; CURVE.n from other curves\n  },\n  htfDefaults,\n  hash: sha256,\n  randomBytes,\n});\n", "import { bls12_381 } from '@noble/curves/bls12-381';\nimport { toHex } from './buffer';\n\nexport let verify: (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => boolean;\n\n/**\n *\n * @param pk primary key: Uint8Array\n * @param sig signature: Uint8Array\n * @param msg message: Uint8Array\n * @returns boolean\n */\nexport function blsVerify(pk: Uint8Array, sig: Uint8Array, msg: Uint8Array): boolean {\n  const primaryKey = typeof pk === 'string' ? pk : toHex(pk);\n  const signature = typeof sig === 'string' ? sig : toHex(sig);\n  const message = typeof msg === 'string' ? msg : toHex(msg);\n  return bls12_381.verifyShortSignature(signature, message, primaryKey);\n}\n", "import { PipeArrayBuffer, lebDecode } from '@dfinity/candid';\n\nexport const decodeLeb128 = (buf: ArrayBuffer): bigint => {\n  return lebDecode(new PipeArrayBuffer(buf));\n};\n\n// time is a LEB128-encoded Nat\nexport const decodeTime = (buf: ArrayBuffer): Date => {\n  const decoded = decodeLeb128(buf);\n\n  // nanoseconds to milliseconds\n  return new Date(Number(decoded) / 1_000_000);\n};\n", "import * as cbor from './cbor';\nimport { AgentError } from './errors';\nimport { hash } from './request_id';\nimport { concat, fromHex, toHex } from './utils/buffer';\nimport { Principal } from '@dfinity/principal';\nimport * as bls from './utils/bls';\nimport { decodeTime } from './utils/leb';\n\n/**\n * A certificate may fail verification with respect to the provided public key\n */\nexport class CertificateVerificationError extends AgentError {\n  constructor(reason: string) {\n    super(`Invalid certificate: ${reason}`);\n  }\n}\n\nexport interface Cert {\n  tree: HashTree;\n  signature: ArrayBuffer;\n  delegation?: Delegation;\n}\n\nconst NodeId = {\n  Empty: 0,\n  Fork: 1,\n  Labeled: 2,\n  Leaf: 3,\n  Pruned: 4,\n};\n\nexport type NodeIdType = typeof NodeId[keyof typeof NodeId];\n\nexport { NodeId };\n\nexport type HashTree =\n  | [typeof NodeId.Empty]\n  | [typeof NodeId.Fork, HashTree, HashTree]\n  | [typeof NodeId.Labeled, ArrayBuffer, HashTree]\n  | [typeof NodeId.Leaf, ArrayBuffer]\n  | [typeof NodeId.Pruned, ArrayBuffer];\n\n/**\n * Make a human readable string out of a hash tree.\n * @param tree\n */\nexport function hashTreeToString(tree: HashTree): string {\n  const indent = (s: string) =>\n    s\n      .split('\\n')\n      .map(x => '  ' + x)\n      .join('\\n');\n  function labelToString(label: ArrayBuffer): string {\n    const decoder = new TextDecoder(undefined, { fatal: true });\n    try {\n      return JSON.stringify(decoder.decode(label));\n    } catch (e) {\n      return `data(...${label.byteLength} bytes)`;\n    }\n  }\n\n  switch (tree[0]) {\n    case NodeId.Empty:\n      return '()';\n    case NodeId.Fork: {\n      if (tree[1] instanceof Array && tree[2] instanceof ArrayBuffer) {\n        const left = hashTreeToString(tree[1]);\n        const right = hashTreeToString(tree[2]);\n        return `sub(\\n left:\\n${indent(left)}\\n---\\n right:\\n${indent(right)}\\n)`;\n      } else {\n        throw new Error('Invalid tree structure for fork');\n      }\n    }\n    case NodeId.Labeled: {\n      if (tree[1] instanceof ArrayBuffer && tree[2] instanceof ArrayBuffer) {\n        const label = labelToString(tree[1]);\n        const sub = hashTreeToString(tree[2]);\n        return `label(\\n label:\\n${indent(label)}\\n sub:\\n${indent(sub)}\\n)`;\n      } else {\n        throw new Error('Invalid tree structure for labeled');\n      }\n    }\n    case NodeId.Leaf: {\n      if (!tree[1]) {\n        throw new Error('Invalid tree structure for leaf');\n      } else if (Array.isArray(tree[1])) {\n        return JSON.stringify(tree[1]);\n      }\n      return `leaf(...${tree[1].byteLength} bytes)`;\n    }\n    case NodeId.Pruned: {\n      if (!tree[1]) {\n        throw new Error('Invalid tree structure for pruned');\n      } else if (Array.isArray(tree[1])) {\n        return JSON.stringify(tree[1]);\n      }\n\n      return `pruned(${toHex(new Uint8Array(tree[1]))}`;\n    }\n    default: {\n      return `unknown(${JSON.stringify(tree[0])})`;\n    }\n  }\n}\n\ninterface Delegation extends Record<string, unknown> {\n  subnet_id: ArrayBuffer;\n  certificate: ArrayBuffer;\n}\n\nfunction isBufferEqual(a: ArrayBuffer, b: ArrayBuffer): boolean {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  const a8 = new Uint8Array(a);\n  const b8 = new Uint8Array(b);\n  for (let i = 0; i < a8.length; i++) {\n    if (a8[i] !== b8[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\ntype VerifyFunc = (pk: Uint8Array, sig: Uint8Array, msg: Uint8Array) => Promise<boolean> | boolean;\n\nexport interface CreateCertificateOptions {\n  /**\n   * The bytes encoding the certificate to be verified\n   */\n  certificate: ArrayBuffer;\n  /**\n   * The root key against which to verify the certificate\n   * (normally, the root key of the IC main network)\n   */\n  rootKey: ArrayBuffer;\n  /**\n   * The effective canister ID of the request when verifying a response, or\n   * the signing canister ID when verifying a certified variable.\n   */\n  canisterId: Principal;\n  /**\n   * BLS Verification strategy. Default strategy uses wasm for performance, but that may not be available in all contexts.\n   */\n  blsVerify?: VerifyFunc;\n\n  /**\n   * The maximum age of the certificate in minutes. Default is 5 minutes.\n   * @default 5\n   * This is used to verify the time the certificate was signed, particularly for validating Delegation certificates, which can live for longer than the default window of +/- 5 minutes. If the certificate is\n   * older than the specified age, it will fail verification.\n   */\n  maxAgeInMinutes?: number;\n}\n\nexport class Certificate {\n  private readonly cert: Cert;\n\n  /**\n   * Create a new instance of a certificate, automatically verifying it. Throws a\n   * CertificateVerificationError if the certificate cannot be verified.\n   * @constructs  Certificate\n   * @param {CreateCertificateOptions} options {@link CreateCertificateOptions}\n   * @param {ArrayBuffer} options.certificate The bytes of the certificate\n   * @param {ArrayBuffer} options.rootKey The root key to verify against\n   * @param {Principal} options.canisterId The effective or signing canister ID\n   * @param {number} options.maxAgeInMinutes The maximum age of the certificate in minutes. Default is 5 minutes.\n   * @throws {CertificateVerificationError}\n   */\n  public static async create(options: CreateCertificateOptions): Promise<Certificate> {\n    const cert = Certificate.createUnverified(options);\n\n    await cert.verify();\n    return cert;\n  }\n\n  private static createUnverified(options: CreateCertificateOptions): Certificate {\n    let blsVerify = options.blsVerify;\n    if (!blsVerify) {\n      blsVerify = bls.blsVerify;\n    }\n    return new Certificate(\n      options.certificate,\n      options.rootKey,\n      options.canisterId,\n      blsVerify,\n      options.maxAgeInMinutes,\n    );\n  }\n\n  private constructor(\n    certificate: ArrayBuffer,\n    private _rootKey: ArrayBuffer,\n    private _canisterId: Principal,\n    private _blsVerify: VerifyFunc,\n    // Default to 5 minutes\n    private _maxAgeInMinutes: number = 5,\n  ) {\n    this.cert = cbor.decode(new Uint8Array(certificate));\n  }\n\n  public lookup(path: Array<ArrayBuffer | string>): ArrayBuffer | undefined {\n    // constrain the type of the result, so that empty HashTree is undefined\n    return lookupResultToBuffer(lookup_path(path, this.cert.tree));\n  }\n\n  public lookup_label(label: ArrayBuffer): ArrayBuffer | HashTree | undefined {\n    return this.lookup([label]);\n  }\n\n  private async verify(): Promise<void> {\n    const rootHash = await reconstruct(this.cert.tree);\n    const derKey = await this._checkDelegationAndGetKey(this.cert.delegation);\n    const sig = this.cert.signature;\n    const key = extractDER(derKey);\n    const msg = concat(domain_sep('ic-state-root'), rootHash);\n    let sigVer = false;\n\n    const lookupTime = this.lookup(['time']);\n    if (!lookupTime) {\n      // Should never happen - time is always present in IC certificates\n      throw new CertificateVerificationError('Certificate does not contain a time');\n    }\n\n    const FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n    const MAX_AGE_IN_MSEC = this._maxAgeInMinutes * 60 * 1000;\n    const now = Date.now();\n    const earliestCertificateTime = now - MAX_AGE_IN_MSEC;\n    const fiveMinutesFromNow = now + FIVE_MINUTES_IN_MSEC;\n\n    const certTime = decodeTime(lookupTime);\n\n    if (certTime.getTime() < earliestCertificateTime) {\n      throw new CertificateVerificationError(\n        `Certificate is signed more than ${this._maxAgeInMinutes} minutes in the past. Certificate time: ` +\n          certTime.toISOString() +\n          ' Current time: ' +\n          new Date(now).toISOString(),\n      );\n    } else if (certTime.getTime() > fiveMinutesFromNow) {\n      throw new CertificateVerificationError(\n        'Certificate is signed more than 5 minutes in the future. Certificate time: ' +\n          certTime.toISOString() +\n          ' Current time: ' +\n          new Date(now).toISOString(),\n      );\n    }\n\n    try {\n      sigVer = await this._blsVerify(new Uint8Array(key), new Uint8Array(sig), new Uint8Array(msg));\n    } catch (err) {\n      sigVer = false;\n    }\n    if (!sigVer) {\n      throw new CertificateVerificationError('Signature verification failed');\n    }\n  }\n\n  private async _checkDelegationAndGetKey(d?: Delegation): Promise<ArrayBuffer> {\n    if (!d) {\n      return this._rootKey;\n    }\n\n    const cert: Certificate = await Certificate.createUnverified({\n      certificate: d.certificate,\n      rootKey: this._rootKey,\n      canisterId: this._canisterId,\n      blsVerify: this._blsVerify,\n      // Do not check max age for delegation certificates\n      maxAgeInMinutes: Infinity,\n    });\n\n    if (cert.cert.delegation) {\n      throw new CertificateVerificationError('Delegation certificates cannot be nested');\n    }\n\n    await cert.verify();\n\n    const canisterInRange = check_canister_ranges({\n      canisterId: this._canisterId,\n      subnetId: Principal.fromUint8Array(new Uint8Array(d.subnet_id)),\n      tree: cert.cert.tree,\n    });\n    if (!canisterInRange) {\n      throw new CertificateVerificationError(\n        `Canister ${this._canisterId} not in range of delegations for subnet 0x${toHex(\n          d.subnet_id,\n        )}`,\n      );\n    }\n    const publicKeyLookup = cert.lookup(['subnet', d.subnet_id, 'public_key']);\n    if (!publicKeyLookup) {\n      throw new Error(`Could not find subnet key for subnet 0x${toHex(d.subnet_id)}`);\n    }\n    return publicKeyLookup;\n  }\n}\n\nconst DER_PREFIX = fromHex(\n  '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100',\n);\nconst KEY_LENGTH = 96;\n\nfunction extractDER(buf: ArrayBuffer): ArrayBuffer {\n  const expectedLength = DER_PREFIX.byteLength + KEY_LENGTH;\n  if (buf.byteLength !== expectedLength) {\n    throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);\n  }\n  const prefix = buf.slice(0, DER_PREFIX.byteLength);\n  if (!isBufferEqual(prefix, DER_PREFIX)) {\n    throw new TypeError(\n      `BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`,\n    );\n  }\n\n  return buf.slice(DER_PREFIX.byteLength);\n}\n\n/**\n * utility function to constrain the type of a path\n * @param {ArrayBuffer | HashTree | undefined} result - the result of a lookup\n * @returns ArrayBuffer or Undefined\n */\nexport function lookupResultToBuffer(\n  result: ArrayBuffer | HashTree | undefined,\n): ArrayBuffer | undefined {\n  if (result instanceof ArrayBuffer) {\n    return result;\n  } else if (result instanceof Uint8Array) {\n    return result.buffer;\n  }\n  return undefined;\n}\n\n/**\n * @param t\n */\nexport async function reconstruct(t: HashTree): Promise<ArrayBuffer> {\n  switch (t[0]) {\n    case NodeId.Empty:\n      return hash(domain_sep('ic-hashtree-empty'));\n    case NodeId.Pruned:\n      return t[1] as ArrayBuffer;\n    case NodeId.Leaf:\n      return hash(concat(domain_sep('ic-hashtree-leaf'), t[1] as ArrayBuffer));\n    case NodeId.Labeled:\n      return hash(\n        concat(\n          domain_sep('ic-hashtree-labeled'),\n          t[1] as ArrayBuffer,\n          await reconstruct(t[2] as HashTree),\n        ),\n      );\n    case NodeId.Fork:\n      return hash(\n        concat(\n          domain_sep('ic-hashtree-fork'),\n          await reconstruct(t[1] as HashTree),\n          await reconstruct(t[2] as HashTree),\n        ),\n      );\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction domain_sep(s: string): ArrayBuffer {\n  const len = new Uint8Array([s.length]);\n  const str = new TextEncoder().encode(s);\n  return concat(len, str);\n}\n\n/**\n * @param path\n * @param tree\n */\nexport function lookup_path(\n  path: Array<ArrayBuffer | string>,\n  tree: HashTree,\n): ArrayBuffer | HashTree | undefined {\n  if (path.length === 0) {\n    switch (tree[0]) {\n      case NodeId.Leaf: {\n        // should not be undefined\n        if (!tree[1]) throw new Error('Invalid tree structure for leaf');\n        if (tree[1] instanceof ArrayBuffer) {\n          return tree[1];\n        } else if (tree[1] instanceof Uint8Array) {\n          return tree[1].buffer;\n        } else return tree[1];\n      }\n      case NodeId.Fork: {\n        return tree;\n      }\n      default: {\n        return tree;\n      }\n    }\n  }\n\n  const label = typeof path[0] === 'string' ? new TextEncoder().encode(path[0]) : path[0];\n  const t = find_label(label, flatten_forks(tree));\n  if (t) {\n    return lookup_path(path.slice(1), t);\n  }\n}\n\n/**\n * If the tree is a fork, flatten it into an array of trees\n * @param t - the tree to flatten\n * @returns HashTree[] - the flattened tree\n */\nexport function flatten_forks(t: HashTree): HashTree[] {\n  switch (t[0]) {\n    case NodeId.Empty:\n      return [];\n    case NodeId.Fork:\n      return flatten_forks(t[1] as HashTree).concat(flatten_forks(t[2] as HashTree));\n    default:\n      return [t];\n  }\n}\n\nfunction find_label(l: ArrayBuffer, trees: HashTree[]): HashTree | undefined {\n  if (trees.length === 0) {\n    return undefined;\n  }\n  for (const t of trees) {\n    if (t[0] === NodeId.Labeled) {\n      const p = t[1] as ArrayBuffer;\n      if (isBufferEqual(l, p)) {\n        return t[2];\n      }\n    }\n  }\n}\n\n/**\n * Check if a canister falls within a range of canisters\n * @param canisterId Principal\n * @param ranges [Principal, Principal][]\n * @returns\n */\nexport function check_canister_ranges(params: {\n  canisterId: Principal;\n  subnetId: Principal;\n  tree: HashTree;\n}): boolean {\n  const { canisterId, subnetId, tree } = params;\n  const rangeLookup = lookup_path(['subnet', subnetId.toUint8Array(), 'canister_ranges'], tree);\n\n  if (!rangeLookup || !(rangeLookup instanceof ArrayBuffer)) {\n    throw new Error(`Could not find canister ranges for subnet ${subnetId}`);\n  }\n\n  const ranges_arr: Array<[Uint8Array, Uint8Array]> = cbor.decode(rangeLookup);\n  const ranges: Array<[Principal, Principal]> = ranges_arr.map(v => [\n    Principal.fromUint8Array(v[0]),\n    Principal.fromUint8Array(v[1]),\n  ]);\n\n  const canisterInRange = ranges.some(r => r[0].ltEq(canisterId) && r[1].gtEq(canisterId));\n\n  return canisterInRange;\n}\n", "/** @module CanisterStatus */\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../errors';\nimport { HttpAgent } from '../agent/http';\nimport {\n  Cert,\n  Certificate,\n  CreateCertificateOptions,\n  HashTree,\n  flatten_forks,\n  check_canister_ranges,\n  lookupResultToBuffer,\n  lookup_path,\n} from '../certificate';\nimport { toHex } from '../utils/buffer';\nimport * as Cbor from '../cbor';\nimport { decodeLeb128, decodeTime } from '../utils/leb';\nimport { DerEncodedPublicKey } from '..';\n\n/**\n * Represents the useful information about a subnet\n * @param {string} subnetId the principal id of the canister's subnet\n * @param {string[]} nodeKeys the keys of the individual nodes in the subnet\n */\nexport type SubnetStatus = {\n  // Principal as a string\n  subnetId: string;\n  nodeKeys: Map<string, DerEncodedPublicKey>;\n  metrics?: {\n    num_canisters: bigint;\n    canister_state_bytes: bigint;\n    consumed_cycles_total: {\n      current: bigint;\n      deleted: bigint;\n    };\n    update_transactions_total: bigint;\n  };\n};\n\n/**\n * Types of an entry on the canisterStatus map.\n * An entry of null indicates that the request failed, due to lack of permissions or the result being missing.\n */\nexport type Status =\n  | string\n  | ArrayBuffer\n  | Date\n  | ArrayBuffer[]\n  | Principal[]\n  | SubnetStatus\n  | bigint\n  | null;\n\n/**\n * Interface to define a custom path. Nested paths will be represented as individual buffers, and can be created from text using TextEncoder.\n * @param {string} key the key to use to access the returned value in the canisterStatus map\n * @param {ArrayBuffer[]} path the path to the desired value, represented as an array of buffers\n * @param {string} decodeStrategy the strategy to use to decode the returned value\n */\nexport class CustomPath implements CustomPath {\n  public key: string;\n  public path: ArrayBuffer[] | string;\n  public decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw';\n  constructor(\n    key: string,\n    path: ArrayBuffer[] | string,\n    decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw',\n  ) {\n    this.key = key;\n    this.path = path;\n    this.decodeStrategy = decodeStrategy;\n  }\n}\n\n/**\n * @deprecated Use {@link CustomPath} instead\n * @param {string} key the key to use to access the returned value in the canisterStatus map\n * @param {string} path the path to the desired value, represented as a string\n * @param {string} decodeStrategy the strategy to use to decode the returned value\n */\nexport interface MetaData {\n  kind: 'metadata';\n  key: string;\n  path: string | ArrayBuffer;\n  decodeStrategy: 'cbor' | 'hex' | 'leb128' | 'utf-8' | 'raw';\n}\n\n/**\n * Pre-configured fields for canister status paths\n */\nexport type Path =\n  | 'time'\n  | 'controllers'\n  | 'subnet'\n  | 'module_hash'\n  | 'candid'\n  | MetaData\n  | CustomPath;\n\nexport type StatusMap = Map<Path | string, Status>;\n\nexport type CanisterStatusOptions = {\n  canisterId: Principal;\n  agent: HttpAgent;\n  paths?: Path[] | Set<Path>;\n  blsVerify?: CreateCertificateOptions['blsVerify'];\n};\n\n/**\n * Request information in the request_status state tree for a given canister.\n * Can be used to request information about the canister's controllers, time, module hash, candid interface, and more.\n * @param {CanisterStatusOptions} options {@link CanisterStatusOptions}\n * @param {CanisterStatusOptions['canisterId']} options.canisterId {@link Principal}\n * @param {CanisterStatusOptions['agent']} options.agent {@link HttpAgent} optional authenticated agent to use to make the canister request. Useful for accessing private metadata under icp:private\n * @param {CanisterStatusOptions['paths']} options.paths {@link Path[]}\n * @returns {Status} object populated with data from the requested paths\n * @example\n * const status = await canisterStatus({\n *   paths: ['controllers', 'candid'],\n *   ...options\n * });\n *\n * const controllers = status.get('controllers');\n */\nexport const request = async (options: {\n  canisterId: Principal;\n  agent: HttpAgent;\n  paths?: Path[] | Set<Path>;\n}): Promise<StatusMap> => {\n  const { agent, paths } = options;\n  const canisterId = Principal.from(options.canisterId);\n\n  const uniquePaths = [...new Set(paths)];\n\n  // Map path options to their correct formats\n  const encodedPaths = uniquePaths.map(path => {\n    return encodePath(path, canisterId);\n  });\n  const status = new Map<string | Path, Status>();\n\n  const promises = uniquePaths.map((path, index) => {\n    return (async () => {\n      try {\n        const response = await agent.readState(canisterId, {\n          paths: [encodedPaths[index]],\n        });\n        const cert = await Certificate.create({\n          certificate: response.certificate,\n          rootKey: agent.rootKey,\n          canisterId: canisterId,\n        });\n\n        const lookup = (cert: Certificate, path: Path) => {\n          if (path === 'subnet') {\n            const data = fetchNodeKeys(response.certificate, canisterId, agent.rootKey);\n            return {\n              path: path,\n              data,\n            };\n          } else {\n            return {\n              path: path,\n              data: lookupResultToBuffer(cert.lookup(encodePath(path, canisterId))),\n            };\n          }\n        };\n\n        // must pass in the rootKey if we have no delegation\n        const { path, data } = lookup(cert, uniquePaths[index]);\n        if (!data) {\n          // Typically, the cert lookup will throw\n          console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n          if (typeof path === 'string') {\n            status.set(path, null);\n          } else {\n            status.set(path.key, null);\n          }\n        } else {\n          switch (path) {\n            case 'time': {\n              status.set(path, decodeTime(data));\n              break;\n            }\n            case 'controllers': {\n              status.set(path, decodeControllers(data));\n              break;\n            }\n            case 'module_hash': {\n              status.set(path, decodeHex(data));\n              break;\n            }\n            case 'subnet': {\n              status.set(path, data);\n              break;\n            }\n            case 'candid': {\n              status.set(path, new TextDecoder().decode(data));\n              break;\n            }\n            default: {\n              // Check for CustomPath signature\n              if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n                switch (path.decodeStrategy) {\n                  case 'raw':\n                    status.set(path.key, data);\n                    break;\n                  case 'leb128': {\n                    status.set(path.key, decodeLeb128(data));\n                    break;\n                  }\n                  case 'cbor': {\n                    status.set(path.key, decodeCbor(data));\n                    break;\n                  }\n                  case 'hex': {\n                    status.set(path.key, decodeHex(data));\n                    break;\n                  }\n                  case 'utf-8': {\n                    status.set(path.key, decodeUtf8(data));\n                  }\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        // Break on signature verification errors\n        if ((error as AgentError)?.message?.includes('Invalid certificate')) {\n          throw new AgentError((error as AgentError).message);\n        }\n        if (typeof path !== 'string' && 'key' in path && 'path' in path) {\n          status.set(path.key, null);\n        } else {\n          status.set(path, null);\n        }\n        console.group();\n        console.warn(`Expected to find result for path ${path}, but instead found nothing.`);\n        console.warn(error);\n        console.groupEnd();\n      }\n    })();\n  });\n\n  // Fetch all values separately, as each option can fail\n  await Promise.all(promises);\n\n  return status;\n};\n\nexport const fetchNodeKeys = (\n  certificate: ArrayBuffer,\n  canisterId: Principal,\n  root_key?: ArrayBuffer | Uint8Array,\n): SubnetStatus => {\n  if (!canisterId._isPrincipal) {\n    throw new Error('Invalid canisterId');\n  }\n  const cert = Cbor.decode(new Uint8Array(certificate)) as Cert;\n  const tree = cert.tree;\n  let delegation = cert.delegation;\n  let subnetId: Principal;\n  if (delegation && delegation.subnet_id) {\n    subnetId = Principal.fromUint8Array(new Uint8Array(delegation.subnet_id));\n  }\n\n  // On local replica, with System type subnet, there is no delegation\n  else if (!delegation && typeof root_key !== 'undefined') {\n    subnetId = Principal.selfAuthenticating(new Uint8Array(root_key));\n    delegation = {\n      subnet_id: subnetId.toUint8Array(),\n      certificate: new ArrayBuffer(0),\n    };\n  }\n  // otherwise use default NNS subnet id\n  else {\n    subnetId = Principal.selfAuthenticating(\n      Principal.fromText(\n        'tdb26-jop6k-aogll-7ltgs-eruif-6kk7m-qpktf-gdiqx-mxtrf-vb5e6-eqe',\n      ).toUint8Array(),\n    );\n    delegation = {\n      subnet_id: subnetId.toUint8Array(),\n      certificate: new ArrayBuffer(0),\n    };\n  }\n\n  const canisterInRange = check_canister_ranges({ canisterId, subnetId, tree });\n  if (!canisterInRange) {\n    throw new Error('Canister not in range');\n  }\n\n  const nodeTree = lookup_path(['subnet', delegation?.subnet_id as ArrayBuffer, 'node'], tree);\n  const nodeForks = flatten_forks(nodeTree as HashTree) as HashTree[];\n  nodeForks.length;\n  const nodeKeys = new Map<string, DerEncodedPublicKey>();\n  nodeForks.forEach(fork => {\n    Object.getPrototypeOf(new Uint8Array(fork[1] as ArrayBuffer));\n    const node_id = Principal.from(new Uint8Array(fork[1] as ArrayBuffer)).toText();\n    const derEncodedPublicKey = lookup_path(['public_key'], fork[2] as HashTree) as ArrayBuffer;\n    if (derEncodedPublicKey.byteLength !== 44) {\n      throw new Error('Invalid public key length');\n    } else {\n      nodeKeys.set(node_id, derEncodedPublicKey as DerEncodedPublicKey);\n    }\n  });\n\n  return {\n    subnetId: Principal.fromUint8Array(new Uint8Array(delegation.subnet_id)).toText(),\n    nodeKeys,\n  };\n};\n\nexport const encodePath = (path: Path, canisterId: Principal): ArrayBuffer[] => {\n  const encoder = new TextEncoder();\n\n  const encode = (arg: string): ArrayBuffer => {\n    return new DataView(encoder.encode(arg).buffer).buffer;\n  };\n  const canisterBuffer = new DataView(canisterId.toUint8Array().buffer).buffer;\n  switch (path) {\n    case 'time':\n      return [encode('time')];\n    case 'controllers':\n      return [encode('canister'), canisterBuffer, encode('controllers')];\n    case 'module_hash':\n      return [encode('canister'), canisterBuffer, encode('module_hash')];\n    case 'subnet':\n      return [encode('subnet')];\n    case 'candid':\n      return [encode('canister'), canisterBuffer, encode('metadata'), encode('candid:service')];\n    default: {\n      // Check for CustomPath signature\n      if ('key' in path && 'path' in path) {\n        // For simplified metadata queries\n        if (typeof path['path'] === 'string' || path['path'] instanceof ArrayBuffer) {\n          const metaPath = path.path;\n          const encoded = typeof metaPath === 'string' ? encode(metaPath) : metaPath;\n\n          return [encode('canister'), canisterBuffer, encode('metadata'), encoded];\n\n          // For non-metadata, return the provided custompath\n        } else {\n          return path['path'];\n        }\n      }\n    }\n  }\n  throw new Error(\n    `An unexpeected error was encountered while encoding your path for canister status. Please ensure that your path, ${path} was formatted correctly.`,\n  );\n};\n\nconst decodeHex = (buf: ArrayBuffer): string => {\n  return toHex(buf);\n};\n\nconst decodeCbor = (buf: ArrayBuffer): ArrayBuffer[] => {\n  return Cbor.decode(buf);\n};\n\nconst decodeUtf8 = (buf: ArrayBuffer): string => {\n  return new TextDecoder().decode(buf);\n};\n\n// Controllers are CBOR-encoded buffers\nconst decodeControllers = (buf: ArrayBuffer): Principal[] => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const controllersRaw = decodeCbor(buf);\n  return controllersRaw.map((buf: ArrayBuffer) => {\n    return Principal.fromUint8Array(new Uint8Array(buf));\n  });\n};\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\nimport { mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, FHash, Hex } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n// Edwards curves must declare params a & d.\nexport type CurveType = BasicCurve<bigint> & {\n  a: bigint; // curve param a\n  d: bigint; // curve param d\n  hash: FHash; // Hashing\n  randomBytes: (bytesLength?: number) => Uint8Array; // CSPRNG\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array; // clears bits to get valid field elemtn\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array; // Used for hashing\n  uvRatio?: (u: bigint, v: bigint) => { isValid: boolean; value: bigint }; // Ratio \u221A(u/v)\n  prehash?: FHash; // RFC 8032 pre-hashing of messages to sign() / verify()\n  mapToCurve?: (scalar: bigint[]) => AffinePoint<bigint>; // for hash-to-curve standard\n};\n\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    curve,\n    {\n      hash: 'function',\n      a: 'bigint',\n      d: 'bigint',\n      randomBytes: 'function',\n    },\n    {\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      uvRatio: 'function',\n      mapToCurve: 'function',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...opts } as const);\n}\n\n// Instance of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointType extends Group<ExtPointType> {\n  readonly ex: bigint;\n  readonly ey: bigint;\n  readonly ez: bigint;\n  readonly et: bigint;\n  get x(): bigint;\n  get y(): bigint;\n  assertValidity(): void;\n  multiply(scalar: bigint): ExtPointType;\n  multiplyUnsafe(scalar: bigint): ExtPointType;\n  isSmallOrder(): boolean;\n  isTorsionFree(): boolean;\n  clearCofactor(): ExtPointType;\n  toAffine(iz?: bigint): AffinePoint<bigint>;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n}\n// Static methods of Extended Point with coordinates in X, Y, Z, T\nexport interface ExtPointConstructor extends GroupConstructor<ExtPointType> {\n  new (x: bigint, y: bigint, z: bigint, t: bigint): ExtPointType;\n  fromAffine(p: AffinePoint<bigint>): ExtPointType;\n  fromHex(hex: Hex): ExtPointType;\n  fromPrivateKey(privateKey: Hex): ExtPointType;\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  sign: (message: Hex, privateKey: Hex, options?: { context?: Hex }) => Uint8Array;\n  verify: (\n    sig: Hex,\n    message: Hex,\n    publicKey: Hex,\n    options?: { context?: Hex; zip215: boolean }\n  ) => boolean;\n  ExtendedPoint: ExtPointConstructor;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    getExtendedPublicKey: (key: Hex) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: ExtPointType;\n      pointBytes: Uint8Array;\n    };\n  };\n};\n\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nexport function twistedEdwards(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor,\n  } = CURVE;\n  const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n  const modP = Fp.create; // Function overrides\n\n  // sqrt(u/v)\n  const uvRatio =\n    CURVE.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes); // NOOP\n  const domain =\n    CURVE.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n  const inBig = (n: bigint) => typeof n === 'bigint' && _0n < n; // n in [1..]\n  const inRange = (n: bigint, max: bigint) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n  const in0MaskRange = (n: bigint) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n  function assertInRange(n: bigint, max: bigint) {\n    // n in [1..max-1]\n    if (inRange(n, max)) return n;\n    throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n  }\n  function assertGE0(n: bigint) {\n    // n in [0..CURVE_ORDER-1]\n    return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n  }\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function isPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Extended Point works in extended coordinates: (x, y, z, t) \u220B (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements ExtPointType {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n\n    constructor(\n      readonly ex: bigint,\n      readonly ey: bigint,\n      readonly ez: bigint,\n      readonly et: bigint\n    ) {\n      if (!in0MaskRange(ex)) throw new Error('x required');\n      if (!in0MaskRange(ey)) throw new Error('y required');\n      if (!in0MaskRange(ez)) throw new Error('z required');\n      if (!in0MaskRange(et)) throw new Error('t required');\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      if (!in0MaskRange(x) || !in0MaskRange(y)) throw new Error('invalid affine point');\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity(): void {\n      const { a, d } = CURVE;\n      if (this.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n      // Equation in affine coordinates: ax\u00B2 + y\u00B2 = 1 + dx\u00B2y\u00B2\n      // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX\u00B2 + Y\u00B2)Z\u00B2 = Z\u2074 + dX\u00B2Y\u00B2\n      const { ex: X, ey: Y, ez: Z, et: T } = this;\n      const X2 = modP(X * X); // X\u00B2\n      const Y2 = modP(Y * Y); // Y\u00B2\n      const Z2 = modP(Z * Z); // Z\u00B2\n      const Z4 = modP(Z2 * Z2); // Z\u2074\n      const aX2 = modP(X2 * a); // aX\u00B2\n      const left = modP(Z2 * modP(aX2 + Y2)); // (aX\u00B2 + Y\u00B2)Z\u00B2\n      const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z\u2074 + dX\u00B2Y\u00B2\n      if (left !== right) throw new Error('bad point: equation left != right (1)');\n      // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n      const XY = modP(X * Y);\n      const ZT = modP(Z * T);\n      if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      isPoint(other);\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    protected is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      isPoint(other);\n      const { a, d } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n      return Point.normalizeZ([p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    multiplyUnsafe(scalar: bigint): Point {\n      let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n      if (n === _0n) return I;\n      if (this.equals(I) || n === _1n) return this;\n      if (this.equals(G)) return this.wNAF(n).p;\n      return wnaf.unsafeLadder(this, n);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz?: bigint): AffinePoint<bigint> {\n      const { ex: x, ey: y, ez: z } = this;\n      const is0 = this.is0();\n      if (iz == null) iz = is0 ? _8n : (Fp.inv(z) as bigint); // 8 was chosen arbitrarily\n      const ax = modP(x * iz);\n      const ay = modP(y * iz);\n      const zz = modP(z * iz);\n      if (is0) return { x: _0n, y: _1n };\n      if (zz !== _1n) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n\n    clearCofactor(): Point {\n      const { h: cofactor } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex: Hex, zip215 = false): Point {\n      const { d, a } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n      if (y === _0n) {\n        // y=0 is allowed\n      } else {\n        // RFC8032 prohibits >= p, but ZIP215 doesn't\n        if (zip215) assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n        else assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n      }\n\n      // Ed25519: x\u00B2 = (y\u00B2-1)/(dy\u00B2+1) mod p. Ed448: x\u00B2 = (y\u00B2-1)/(dy\u00B2-1) mod p. Generic case:\n      // ax\u00B2+y\u00B2=1+dx\u00B2y\u00B2 => y\u00B2-1=dx\u00B2y\u00B2-ax\u00B2 => y\u00B2-1=x\u00B2(dy\u00B2-a) => x\u00B2=(y\u00B2-1)/(dy\u00B2-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y\u00B2 - 1\n      const v = modP(d * y2 - a); // v = d y\u00B2 + 1.\n      let { isValid, value: x } = uvRatio(u, v); // \u221A(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('Point.fromHex: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n    static fromPrivateKey(privKey: Hex) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex(): string {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  const { BASE: G, ZERO: I } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key: Hex) {\n    const len = nByteLength;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey: Hex): Uint8Array {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Hex = new Uint8Array(), ...msgs: Uint8Array[]) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg: Hex, privKey: Hex, options: { context?: Hex } = {}): Uint8Array {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    assertGE0(s); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n  }\n\n  const verifyOpts: { context?: Hex; zip215?: boolean } = VERIFY_DEFAULT;\n  function verify(sig: Hex, msg: Hex, publicKey: Hex, options = verifyOpts): boolean {\n    const { context, zip215 } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    // zip215: true is good for consensus-critical apps and allows points < 2^256\n    // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n    let A, R, SB;\n    try {\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false;\n\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: (): Uint8Array => randomBytes(Fp.BYTES),\n\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    },\n  };\n\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils,\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport { bytesToNumberLE, ensureBytes, numberToBytesLE, validateObject } from './utils.js';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\ntype Hex = string | Uint8Array;\n\nexport type CurveType = {\n  P: bigint; // finite field prime\n  nByteLength: number;\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array;\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array;\n  a: bigint;\n  montgomeryBits: number;\n  powPminus2?: (x: bigint) => bigint;\n  xyToU?: (x: bigint, y: bigint) => bigint;\n  Gu: bigint;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n};\nexport type CurveFn = {\n  scalarMult: (scalar: Hex, u: Hex) => Uint8Array;\n  scalarMultBase: (scalar: Hex) => Uint8Array;\n  getSharedSecret: (privateKeyA: Hex, publicKeyB: Hex) => Uint8Array;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  utils: { randomPrivateKey: () => Uint8Array };\n  GuBytes: Uint8Array;\n};\n\nfunction validateOpts(curve: CurveType) {\n  validateObject(\n    curve,\n    {\n      a: 'bigint',\n    },\n    {\n      montgomeryBits: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      powPminus2: 'function',\n      Gu: 'bigint',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...curve } as const);\n}\n\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef);\n  const { P } = CURVE;\n  const modP = (n: bigint) => mod(n, P);\n  const montgomeryBits = CURVE.montgomeryBits;\n  const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n  const fieldLen = CURVE.nByteLength;\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes);\n  const powPminus2 = CURVE.powPminus2 || ((x: bigint) => pow(x, P - BigInt(2), P));\n\n  // cswap from RFC7748. But it is not from RFC7748!\n  /*\n    cswap(swap, x_2, x_3):\n         dummy = mask(swap) AND (x_2 XOR x_3)\n         x_2 = x_2 XOR dummy\n         x_3 = x_3 XOR dummy\n         Return (x_2, x_3)\n  Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n   and x_3, computed, e.g., as mask(swap) = 0 - swap.\n  */\n  function cswap(swap: bigint, x_2: bigint, x_3: bigint): [bigint, bigint] {\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy);\n    x_3 = modP(x_3 + dummy);\n    return [x_2, x_3];\n  }\n\n  // Accepts 0 as well\n  function assertFieldElement(n: bigint): bigint {\n    if (typeof n === 'bigint' && _0n <= n && n < P) return n;\n    throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n  }\n\n  // x25519 from 4\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n  const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n  /**\n   *\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(pointU: bigint, scalar: bigint): bigint {\n    const u = assertFieldElement(pointU);\n    // Section 5: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.\n    const k = assertFieldElement(scalar);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw: [bigint, bigint];\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = (k >> t) & _1n;\n      swap ^= k_t;\n      sw = cswap(swap, x_2, x_3);\n      x_2 = sw[0];\n      x_3 = sw[1];\n      sw = cswap(swap, z_2, z_3);\n      z_2 = sw[0];\n      z_3 = sw[1];\n      swap = k_t;\n\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    // (x_2, x_3) = cswap(swap, x_2, x_3)\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    // (z_2, z_3) = cswap(swap, z_2, z_3)\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    // z_2^(p - 2)\n    const z2 = powPminus2(z_2);\n    // Return x_2 * (z_2^(p - 2))\n    return modP(x_2 * z2);\n  }\n\n  function encodeUCoordinate(u: bigint): Uint8Array {\n    return numberToBytesLE(modP(u), montgomeryBytes);\n  }\n\n  function decodeUCoordinate(uEnc: Hex): bigint {\n    // Section 5: When receiving such an array, implementations of X25519\n    // MUST mask the most significant bit in the final byte.\n    const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n    if (fieldLen === 32) u[31] &= 127; // 0b0111_1111\n    return bytesToNumberLE(u);\n  }\n  function decodeScalar(n: Hex): bigint {\n    const bytes = ensureBytes('scalar', n);\n    const len = bytes.length;\n    if (len !== montgomeryBytes && len !== fieldLen)\n      throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${len}`);\n    return bytesToNumberLE(adjustScalarBytes(bytes));\n  }\n  function scalarMult(scalar: Hex, u: Hex): Uint8Array {\n    const pointU = decodeUCoordinate(u);\n    const _scalar = decodeScalar(scalar);\n    const pu = montgomeryLadder(pointU, _scalar);\n    // The result was not contributory\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('Invalid private or public key received');\n    return encodeUCoordinate(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  const GuBytes = encodeUCoordinate(CURVE.Gu);\n  function scalarMultBase(scalar: Hex): Uint8Array {\n    return scalarMult(scalar, GuBytes);\n  }\n\n  return {\n    scalarMult,\n    scalarMultBase,\n    getSharedSecret: (privateKey: Hex, publicKey: Hex) => scalarMult(privateKey, publicKey),\n    getPublicKey: (privateKey: Hex): Uint8Array => scalarMultBase(privateKey),\n    utils: { randomPrivateKey: () => CURVE.randomBytes!(CURVE.nByteLength) },\n    GuBytes: GuBytes,\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { ExtPointType, twistedEdwards } from './abstract/edwards.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport {\n  bytesToHex,\n  bytesToNumberLE,\n  ensureBytes,\n  equalBytes,\n  Hex,\n  numberToBytesLE,\n} from './abstract/utils.js';\nimport { createHasher, htfBasicOpts, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { AffinePoint, Group } from './abstract/curve.js';\n\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\n\nconst ED25519_P = BigInt(\n  '57896044618658097711785492504343953926634992332820282019728792003956564819949'\n);\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n\nfunction ed25519_pow_2_252_3(x: bigint) {\n  const P = ED25519_P;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\n\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v\u00B3\n  const v7 = mod(v3 * v3 * v, P); // v\u2077\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv\u00B3)(uv\u2077)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx\u00B2\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx\u00B2 = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx\u00B2 = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx\u00B2 = -u\u221A(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n\nconst Fp = Field(ED25519_P, undefined, true);\n\nconst ed25519Defaults = {\n  // Param: a\n  a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n  // d is equal to -121665/121666 over finite field.\n  // Negative number is P - number, and division is invert(number, P)\n  d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n  // Finite field \uD835\uDD3Dp over which we'll do calculations; 2n**255n - 19n\n  Fp,\n  // Subgroup order: how many points curve has\n  // 2n**252n + 27742317777372353535851937790883648493n;\n  n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n  // Cofactor\n  h: BigInt(8),\n  // Base point (x, y) aka generator point\n  Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n  Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n  hash: sha512,\n  randomBytes,\n  adjustScalarBytes,\n  // dom2\n  // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n  // Constant-time, u/\u221Av\n  uvRatio,\n} as const;\n\nexport const ed25519 = /* @__PURE__ */ twistedEdwards(ed25519Defaults);\n\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    utf8ToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\n\nexport const ed25519ctx = /* @__PURE__ */ twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n});\nexport const ed25519ph = /* @__PURE__ */ twistedEdwards({\n  ...ed25519Defaults,\n  domain: ed25519_domain,\n  prehash: sha512,\n});\n\nexport const x25519 = /* @__PURE__ */ (() =>\n  montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x: bigint): bigint => {\n      const P = ED25519_P;\n      // x^(p-2) aka x^(2^255-21)\n      const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n      return mod(pow2(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n  }))();\n\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub: Hex): Uint8Array {\n  const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv: Uint8Array): Uint8Array {\n  const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n  return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\n\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\n\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u: bigint) {\n  let tv1 = Fp.sqr(u);       //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);  //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);      //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);     //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);         //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);         //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);         //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);          //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = FpSqrtEven(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\n\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    ed25519.ExtendedPoint,\n    (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n    {\n      DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n      encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n\nfunction assertRstPoint(other: unknown) {\n  if (!(other instanceof RistPoint)) throw new Error('RistrettoPoint expected');\n}\n\n// \u221A(-1) aka \u221A(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// \u221A(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / \u221A(a-d)\nconst INVSQRT_A_MINUS_D = BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d\u00B2\nconst ONE_MINUS_D_SQ = BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)\u00B2\nconst D_MINUS_ONE_SQ = BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/\u221A(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes: Uint8Array) =>\n  ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\ntype ExtendedPoint = ExtPointType;\n\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0: bigint): ExtendedPoint {\n  const { d } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint implements Group<RistPoint> {\n  static BASE: RistPoint;\n  static ZERO: RistPoint;\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(private readonly ep: ExtendedPoint) {}\n\n  static fromAffine(ap: AffinePoint<bigint>) {\n    return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n\n  /**\n   * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-byte output of a hash function\n   */\n  static hashToCurve(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistPoint(R1.add(R2));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const { a, d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes(): Uint8Array {\n    let { ex: x, ey: y, ez: z, et: t } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toRawBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  // Compare one point to another.\n  equals(other: RistPoint): boolean {\n    assertRstPoint(other);\n    const { ex: X1, ey: Y1 } = this.ep;\n    const { ex: X2, ey: Y2 } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  add(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.add(other.ep));\n  }\n\n  subtract(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiplyUnsafe(scalar));\n  }\n\n  double(): RistPoint {\n    return new RistPoint(this.ep.double());\n  }\n\n  negate(): RistPoint {\n    return new RistPoint(this.ep.negate());\n  }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n  if (!RistPoint.BASE) RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n  if (!RistPoint.ZERO) RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n  return RistPoint;\n})();\n\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg: Uint8Array, options: htfBasicOpts) => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistPoint.hashToCurve(uniform_bytes);\n  return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n", "export type ExpirableMapOptions<K, V> = {\n  source?: Iterable<[K, V]>;\n  expirationTime?: number;\n};\n\n/**\n * A map that expires entries after a given time.\n * Defaults to 10 minutes.\n */\nexport class ExpirableMap<K, V> implements Map<K, V> {\n  // Internals\n  #inner: Map<K, { value: V; timestamp: number }>;\n  #expirationTime: number;\n\n  [Symbol.iterator]: () => IterableIterator<[K, V]> = this.entries.bind(this);\n  [Symbol.toStringTag] = 'ExpirableMap';\n\n  /**\n   * Create a new ExpirableMap.\n   * @param {ExpirableMapOptions<any, any>} options - options for the map.\n   * @param {Iterable<[any, any]>} options.source - an optional source of entries to initialize the map with.\n   * @param {number} options.expirationTime - the time in milliseconds after which entries will expire.\n   */\n  constructor(options: ExpirableMapOptions<K, V> = {}) {\n    const { source = [], expirationTime = 10 * 60 * 1000 } = options;\n    const currentTime = Date.now();\n    this.#inner = new Map(\n      [...source].map(([key, value]) => [key, { value, timestamp: currentTime }]),\n    );\n    this.#expirationTime = expirationTime;\n  }\n\n  /**\n   * Prune removes all expired entries.\n   */\n  prune() {\n    const currentTime = Date.now();\n    for (const [key, entry] of this.#inner.entries()) {\n      if (currentTime - entry.timestamp > this.#expirationTime) {\n        this.#inner.delete(key);\n      }\n    }\n    return this;\n  }\n\n  // Implementing the Map interface\n\n  /**\n   * Set the value for the given key. Prunes expired entries.\n   * @param key for the entry\n   * @param value of the entry\n   * @returns this\n   */\n  set(key: K, value: V) {\n    this.prune();\n    const entry = {\n      value,\n      timestamp: Date.now(),\n    };\n    this.#inner.set(key, entry);\n\n    return this;\n  }\n\n  /**\n   * Get the value associated with the key, if it exists and has not expired.\n   * @param key K\n   * @returns the value associated with the key, or undefined if the key is not present or has expired.\n   */\n  get(key: K) {\n    const entry = this.#inner.get(key);\n    if (entry === undefined) {\n      return undefined;\n    }\n    if (Date.now() - entry.timestamp > this.#expirationTime) {\n      this.#inner.delete(key);\n      return undefined;\n    }\n    return entry.value;\n  }\n\n  /**\n   * Clear all entries.\n   */\n  clear() {\n    this.#inner.clear();\n  }\n\n  /**\n   * Entries returns the entries of the map, without the expiration time.\n   * @returns an iterator over the entries of the map.\n   */\n  entries(): IterableIterator<[K, V]> {\n    const iterator = this.#inner.entries();\n    const generator = function* () {\n      for (const [key, value] of iterator) {\n        yield [key, value.value] as [K, V];\n      }\n    };\n    return generator();\n  }\n\n  /**\n   * Values returns the values of the map, without the expiration time.\n   * @returns an iterator over the values of the map.\n   */\n  values(): IterableIterator<V> {\n    const iterator = this.#inner.values();\n    const generator = function* () {\n      for (const value of iterator) {\n        yield value.value;\n      }\n    };\n    return generator();\n  }\n\n  /**\n   * Keys returns the keys of the map\n   * @returns an iterator over the keys of the map.\n   */\n  keys(): IterableIterator<K> {\n    return this.#inner.keys();\n  }\n\n  /**\n   * forEach calls the callbackfn on each entry of the map.\n   * @param callbackfn to call on each entry\n   * @param thisArg to use as this when calling the callbackfn\n   */\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: ExpirableMap<K, V>) {\n    for (const [key, value] of this.#inner.entries()) {\n      callbackfn.call(thisArg, value.value, key, this);\n    }\n  }\n\n  /**\n   * has returns true if the key exists and has not expired.\n   * @param key K\n   * @returns true if the key exists and has not expired.\n   */\n  has(key: K): boolean {\n    return this.#inner.has(key);\n  }\n\n  /**\n   * delete the entry for the given key.\n   * @param key K\n   * @returns true if the key existed and has been deleted.\n   */\n  delete(key: K) {\n    return this.#inner.delete(key);\n  }\n\n  /**\n   * get size of the map.\n   * @returns the size of the map.\n   */\n  get size() {\n    return this.#inner.size;\n  }\n}\n", "import { bufEquals } from './utils/buffer';\n\nexport const encodeLenBytes = (len: number): number => {\n  if (len <= 0x7f) {\n    return 1;\n  } else if (len <= 0xff) {\n    return 2;\n  } else if (len <= 0xffff) {\n    return 3;\n  } else if (len <= 0xffffff) {\n    return 4;\n  } else {\n    throw new Error('Length too long (> 4 bytes)');\n  }\n};\n\nexport const encodeLen = (buf: Uint8Array, offset: number, len: number): number => {\n  if (len <= 0x7f) {\n    buf[offset] = len;\n    return 1;\n  } else if (len <= 0xff) {\n    buf[offset] = 0x81;\n    buf[offset + 1] = len;\n    return 2;\n  } else if (len <= 0xffff) {\n    buf[offset] = 0x82;\n    buf[offset + 1] = len >> 8;\n    buf[offset + 2] = len;\n    return 3;\n  } else if (len <= 0xffffff) {\n    buf[offset] = 0x83;\n    buf[offset + 1] = len >> 16;\n    buf[offset + 2] = len >> 8;\n    buf[offset + 3] = len;\n    return 4;\n  } else {\n    throw new Error('Length too long (> 4 bytes)');\n  }\n};\n\nexport const decodeLenBytes = (buf: Uint8Array, offset: number): number => {\n  if (buf[offset] < 0x80) return 1;\n  if (buf[offset] === 0x80) throw new Error('Invalid length 0');\n  if (buf[offset] === 0x81) return 2;\n  if (buf[offset] === 0x82) return 3;\n  if (buf[offset] === 0x83) return 4;\n  throw new Error('Length too long (> 4 bytes)');\n};\n\nexport const decodeLen = (buf: Uint8Array, offset: number): number => {\n  const lenBytes = decodeLenBytes(buf, offset);\n  if (lenBytes === 1) return buf[offset];\n  else if (lenBytes === 2) return buf[offset + 1];\n  else if (lenBytes === 3) return (buf[offset + 1] << 8) + buf[offset + 2];\n  else if (lenBytes === 4)\n    return (buf[offset + 1] << 16) + (buf[offset + 2] << 8) + buf[offset + 3];\n  throw new Error('Length too long (> 4 bytes)');\n};\n\n/**\n * A DER encoded `SEQUENCE(OID)` for DER-encoded-COSE\n */\nexport const DER_COSE_OID = Uint8Array.from([\n  ...[0x30, 0x0c], // SEQUENCE\n  ...[0x06, 0x0a], // OID with 10 bytes\n  ...[0x2b, 0x06, 0x01, 0x04, 0x01, 0x83, 0xb8, 0x43, 0x01, 0x01], // DER encoded COSE\n]);\n\n/**\n * A DER encoded `SEQUENCE(OID)` for the Ed25519 algorithm\n */\nexport const ED25519_OID = Uint8Array.from([\n  ...[0x30, 0x05], // SEQUENCE\n  ...[0x06, 0x03], // OID with 3 bytes\n  ...[0x2b, 0x65, 0x70], // id-Ed25519 OID\n]);\n\n/**\n * A DER encoded `SEQUENCE(OID)` for secp256k1 with the ECDSA algorithm\n */\nexport const SECP256K1_OID = Uint8Array.from([\n  ...[0x30, 0x10], // SEQUENCE\n  ...[0x06, 0x07], // OID with 7 bytes\n  ...[0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01], // OID ECDSA\n  ...[0x06, 0x05], // OID with 5 bytes\n  ...[0x2b, 0x81, 0x04, 0x00, 0x0a], // OID secp256k1\n]);\n\n/**\n * Wraps the given `payload` in a DER encoding tagged with the given encoded `oid` like so:\n * `SEQUENCE(oid, BITSTRING(payload))`\n *\n * @param payload The payload to encode as the bit string\n * @param oid The DER encoded (and SEQUENCE wrapped!) OID to tag the payload with\n */\nexport function wrapDER(payload: ArrayBuffer, oid: Uint8Array): Uint8Array {\n  // The Bit String header needs to include the unused bit count byte in its length\n  const bitStringHeaderLength = 2 + encodeLenBytes(payload.byteLength + 1);\n  const len = oid.byteLength + bitStringHeaderLength + payload.byteLength;\n  let offset = 0;\n  const buf = new Uint8Array(1 + encodeLenBytes(len) + len);\n  // Sequence\n  buf[offset++] = 0x30;\n  // Sequence Length\n  offset += encodeLen(buf, offset, len);\n\n  // OID\n  buf.set(oid, offset);\n  offset += oid.byteLength;\n\n  // Bit String Header\n  buf[offset++] = 0x03;\n  offset += encodeLen(buf, offset, payload.byteLength + 1);\n  // 0 padding\n  buf[offset++] = 0x00;\n  buf.set(new Uint8Array(payload), offset);\n\n  return buf;\n}\n\n/**\n * Extracts a payload from the given `derEncoded` data, and checks that it was tagged with the given `oid`.\n *\n * `derEncoded = SEQUENCE(oid, BITSTRING(payload))`\n *\n * @param derEncoded The DER encoded and tagged data\n * @param oid The DER encoded (and SEQUENCE wrapped!) expected OID\n * @returns The unwrapped payload\n */\nexport const unwrapDER = (derEncoded: ArrayBuffer, oid: Uint8Array): Uint8Array => {\n  let offset = 0;\n  const expect = (n: number, msg: string) => {\n    if (buf[offset++] !== n) {\n      throw new Error('Expected: ' + msg);\n    }\n  };\n\n  const buf = new Uint8Array(derEncoded);\n  expect(0x30, 'sequence');\n  offset += decodeLenBytes(buf, offset);\n\n  if (!bufEquals(buf.slice(offset, offset + oid.byteLength), oid)) {\n    throw new Error('Not the expected OID.');\n  }\n  offset += oid.byteLength;\n\n  expect(0x03, 'bit string');\n  const payloadLen = decodeLen(buf, offset) - 1; // Subtracting 1 to account for the 0 padding\n  offset += decodeLenBytes(buf, offset);\n  expect(0x00, '0 padding');\n  const result = buf.slice(offset);\n  if (payloadLen !== result.length) {\n    throw new Error(\n      `DER payload mismatch: Expected length ${payloadLen} actual length ${result.length}`,\n    );\n  }\n  return result;\n};\n", "import { DerEncodedPublicKey, PublicKey } from './auth';\nimport { ED25519_OID, unwrapDER, wrapDER } from './der';\n\nexport class Ed25519PublicKey implements PublicKey {\n  public static from(key: PublicKey): Ed25519PublicKey {\n    return this.fromDer(key.toDer());\n  }\n\n  public static fromRaw(rawKey: ArrayBuffer): Ed25519PublicKey {\n    return new Ed25519PublicKey(rawKey);\n  }\n\n  public static fromDer(derKey: DerEncodedPublicKey): Ed25519PublicKey {\n    return new Ed25519PublicKey(this.derDecode(derKey));\n  }\n\n  // The length of Ed25519 public keys is always 32 bytes.\n  private static RAW_KEY_LENGTH = 32;\n\n  private static derEncode(publicKey: ArrayBuffer): DerEncodedPublicKey {\n    return wrapDER(publicKey, ED25519_OID).buffer as DerEncodedPublicKey;\n  }\n\n  private static derDecode(key: DerEncodedPublicKey): ArrayBuffer {\n    const unwrapped = unwrapDER(key, ED25519_OID);\n    if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    return unwrapped;\n  }\n\n  #rawKey: ArrayBuffer;\n\n  public get rawKey(): ArrayBuffer {\n    return this.#rawKey;\n  }\n\n  #derKey: DerEncodedPublicKey;\n\n  public get derKey(): DerEncodedPublicKey {\n    return this.#derKey;\n  }\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  private constructor(key: ArrayBuffer) {\n    if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    this.#rawKey = key;\n    this.#derKey = Ed25519PublicKey.derEncode(key);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this.derKey;\n  }\n\n  public toRaw(): ArrayBuffer {\n    return this.rawKey;\n  }\n}\n", "import { AgentError } from './errors';\n\nexport type ObserveFunction<T> = (data: T, ...rest: unknown[]) => void;\n\nexport class Observable<T> extends Function {\n  observers: ObserveFunction<T>[];\n\n  constructor() {\n    super();\n    this.observers = [];\n    return new Proxy(this, {\n      apply: (target, _, args) => target.#call(args[0], ...args.slice(1)),\n    });\n  }\n\n  #call(message: T, ...rest: unknown[]) {\n    this.notify(message, ...rest);\n  }\n\n  subscribe(func: ObserveFunction<T>) {\n    this.observers.push(func);\n  }\n\n  unsubscribe(func: ObserveFunction<T>) {\n    this.observers = this.observers.filter(observer => observer !== func);\n  }\n\n  notify(data: T, ...rest: unknown[]) {\n    this.observers.forEach(observer => observer(data, ...rest));\n  }\n}\n\nexport type AgentLog =\n  | {\n      message: string;\n      level: 'warn' | 'info';\n    }\n  | {\n      message: string;\n      level: 'error';\n      error: AgentError;\n    };\n\nexport class ObservableLog extends Observable<AgentLog> {\n  constructor() {\n    super();\n    return new Proxy(this, {\n      apply: (target, _, args) => target.#call(args[0], ...args.slice(1)),\n    });\n  }\n  log(message: string, ...rest: unknown[]) {\n    this.notify({ message, level: 'info' }, ...rest);\n  }\n  warn(message: string, ...rest: unknown[]) {\n    this.notify({ message, level: 'warn' }, ...rest);\n  }\n  error(message: string, error: AgentError, ...rest: unknown[]) {\n    this.notify({ message, level: 'error', error }, ...rest);\n  }\n  #call(message: string, ...rest: unknown[]) {\n    this.log(message, ...rest);\n  }\n}\n", "import { JsonObject } from '@dfinity/candid';\nimport { Principal } from '@dfinity/principal';\nimport { AgentError } from '../../errors';\nimport { AnonymousIdentity, Identity } from '../../auth';\nimport * as cbor from '../../cbor';\nimport { RequestId, hashOfMap, requestIdOf } from '../../request_id';\nimport { bufFromBufLike, concat, fromHex } from '../../utils/buffer';\nimport {\n  Agent,\n  ApiQueryResponse,\n  QueryFields,\n  QueryResponse,\n  ReadStateOptions,\n  ReadStateResponse,\n  SubmitResponse,\n} from '../api';\nimport { Expiry, httpHeadersTransform, makeNonceTransform } from './transforms';\nimport {\n  CallRequest,\n  Endpoint,\n  HttpAgentRequest,\n  HttpAgentRequestTransformFn,\n  HttpAgentSubmitRequest,\n  makeNonce,\n  Nonce,\n  QueryRequest,\n  ReadRequestType,\n  SubmitRequestType,\n} from './types';\nimport { AgentHTTPResponseError } from './errors';\nimport { SubnetStatus, request } from '../../canisterStatus';\nimport { CertificateVerificationError, HashTree, lookup_path } from '../../certificate';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport { ExpirableMap } from '../../utils/expirableMap';\nimport { Ed25519PublicKey } from '../../public_key';\nimport { decodeTime } from '../../utils/leb';\nimport { ObservableLog } from '../../observable';\n\nexport * from './transforms';\nexport { Nonce, makeNonce } from './types';\n\nexport enum RequestStatusResponseStatus {\n  Received = 'received',\n  Processing = 'processing',\n  Replied = 'replied',\n  Rejected = 'rejected',\n  Unknown = 'unknown',\n  Done = 'done',\n}\n\n// Default delta for ingress expiry is 5 minutes.\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000;\n\n// Root public key for the IC, encoded as hex\nexport const IC_ROOT_KEY =\n  '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +\n  'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +\n  '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +\n  'b01291091c5f87b98883463f98091a0baaae';\n\nexport const MANAGEMENT_CANISTER_ID = 'aaaaa-aa';\n\n// IC0 domain info\nconst IC0_DOMAIN = 'ic0.app';\nconst IC0_SUB_DOMAIN = '.ic0.app';\n\nconst ICP0_DOMAIN = 'icp0.io';\nconst ICP0_SUB_DOMAIN = '.icp0.io';\n\nconst ICP_API_DOMAIN = 'icp-api.io';\nconst ICP_API_SUB_DOMAIN = '.icp-api.io';\n\nclass HttpDefaultFetchError extends AgentError {\n  constructor(public readonly message: string) {\n    super(message);\n  }\n}\nexport class IdentityInvalidError extends AgentError {\n  constructor(public readonly message: string) {\n    super(message);\n  }\n}\n\n// HttpAgent options that can be used at construction.\nexport interface HttpAgentOptions {\n  // Another HttpAgent to inherit configuration (pipeline and fetch) of. This\n  // is only used at construction.\n  source?: HttpAgent;\n\n  // A surrogate to the global fetch function. Useful for testing.\n  fetch?: typeof fetch;\n\n  // Additional options to pass along to fetch. Will not override fields that\n  // the agent already needs to set\n  // Should follow the RequestInit interface, but we intentially support non-standard fields\n  fetchOptions?: Record<string, unknown>;\n\n  // Additional options to pass along to fetch for the call API.\n  callOptions?: Record<string, unknown>;\n\n  // The host to use for the client. By default, uses the same host as\n  // the current page.\n  host?: string;\n\n  // The principal used to send messages. This cannot be empty at the request\n  // time (will throw).\n  identity?: Identity | Promise<Identity>;\n\n  credentials?: {\n    name: string;\n    password?: string;\n  };\n  /**\n   * Adds a unique {@link Nonce} with each query.\n   * Enabling will prevent queries from being answered with a cached response.\n   * @example\n   * const agent = new HttpAgent({ useQueryNonces: true });\n   * agent.addTransform(makeNonceTransform(makeNonce);\n   * @default false\n   */\n  useQueryNonces?: boolean;\n  /**\n   * Number of times to retry requests before throwing an error\n   * @default 3\n   */\n  retryTimes?: number;\n  /**\n   * Whether the agent should verify signatures signed by node keys on query responses. Increases security, but adds overhead and must make a separate request to cache the node keys for the canister's subnet.\n   * @default true\n   */\n  verifyQuerySignatures?: boolean;\n  /**\n   * Whether to log to the console. Defaults to false.\n   */\n  logToConsole?: boolean;\n}\n\nfunction getDefaultFetch(): typeof fetch {\n  let defaultFetch;\n\n  if (typeof window !== 'undefined') {\n    // Browser context\n    if (window.fetch) {\n      defaultFetch = window.fetch.bind(window);\n    } else {\n      throw new HttpDefaultFetchError(\n        'Fetch implementation was not available. You appear to be in a browser context, but window.fetch was not present.',\n      );\n    }\n  } else if (typeof global !== 'undefined') {\n    // Node context\n    if (global.fetch) {\n      defaultFetch = global.fetch.bind(global);\n    } else {\n      throw new HttpDefaultFetchError(\n        'Fetch implementation was not available. You appear to be in a Node.js context, but global.fetch was not available.',\n      );\n    }\n  } else if (typeof self !== 'undefined') {\n    if (self.fetch) {\n      defaultFetch = self.fetch.bind(self);\n    }\n  }\n\n  if (defaultFetch) {\n    return defaultFetch;\n  }\n  throw new HttpDefaultFetchError(\n    'Fetch implementation was not available. Please provide fetch to the HttpAgent constructor, or ensure it is available in the window or global context.',\n  );\n}\n\n// A HTTP agent allows users to interact with a client of the internet computer\n// using the available methods. It exposes an API that closely follows the\n// public view of the internet computer, and is not intended to be exposed\n// directly to the majority of users due to its low-level interface.\n//\n// There is a pipeline to apply transformations to the request before sending\n// it to the client. This is to decouple signature, nonce generation and\n// other computations so that this class can stay as simple as possible while\n// allowing extensions.\nexport class HttpAgent implements Agent {\n  public rootKey = fromHex(IC_ROOT_KEY);\n  private _identity: Promise<Identity> | null;\n  private readonly _fetch: typeof fetch;\n  private readonly _fetchOptions?: Record<string, unknown>;\n  private readonly _callOptions?: Record<string, unknown>;\n  private _timeDiffMsecs = 0;\n  private readonly _host: URL;\n  private readonly _credentials: string | undefined;\n  private _rootKeyFetched = false;\n  private readonly _retryTimes; // Retry requests N times before erroring by default\n  public readonly _isAgent = true;\n\n  // The UTC time in milliseconds when the latest request was made\n  #waterMark = 0;\n\n  get waterMark(): number {\n    return this.#waterMark;\n  }\n\n  public log: ObservableLog = new ObservableLog();\n\n  #queryPipeline: HttpAgentRequestTransformFn[] = [];\n  #updatePipeline: HttpAgentRequestTransformFn[] = [];\n\n  #subnetKeys: ExpirableMap<string, SubnetStatus> = new ExpirableMap({\n    expirationTime: 5 * 60 * 1000, // 5 minutes\n  });\n  #verifyQuerySignatures = true;\n\n  constructor(options: HttpAgentOptions = {}) {\n    if (options.source) {\n      if (!(options.source instanceof HttpAgent)) {\n        throw new Error(\"An Agent's source can only be another HttpAgent\");\n      }\n      this._identity = options.source._identity;\n      this._fetch = options.source._fetch;\n      this._host = options.source._host;\n      this._credentials = options.source._credentials;\n    } else {\n      this._fetch = options.fetch || getDefaultFetch() || fetch.bind(global);\n      this._fetchOptions = options.fetchOptions;\n      this._callOptions = options.callOptions;\n    }\n    if (options.host !== undefined) {\n      if (!options.host.match(/^[a-z]+:/) && typeof window !== 'undefined') {\n        this._host = new URL(window.location.protocol + '//' + options.host);\n      } else {\n        this._host = new URL(options.host);\n      }\n    } else if (options.source !== undefined) {\n      // Safe to ignore here.\n      this._host = options.source._host;\n    } else {\n      const location = typeof window !== 'undefined' ? window.location : undefined;\n      if (!location) {\n        this._host = new URL('https://icp-api.io');\n        this.log.warn(\n          'Could not infer host from window.location, defaulting to mainnet gateway of https://icp-api.io. Please provide a host to the HttpAgent constructor to avoid this warning.',\n        );\n      }\n      // Mainnet, local, and remote environments will have the api route available\n      const knownHosts = ['ic0.app', 'icp0.io', '127.0.0.1', 'localhost'];\n      const remoteHosts = ['.github.dev', '.gitpod.io'];\n      const hostname = location?.hostname;\n      let knownHost;\n      if (hostname && typeof hostname === 'string') {\n        if (remoteHosts.some(host => hostname.endsWith(host))) {\n          knownHost = hostname;\n        } else {\n          knownHost = knownHosts.find(host => hostname.endsWith(host));\n        }\n      }\n\n      if (location && knownHost) {\n        // If the user is on a boundary-node provided host, we can use the same host for the agent\n        this._host = new URL(\n          `${location.protocol}//${knownHost}${location.port ? ':' + location.port : ''}`,\n        );\n      } else {\n        this._host = new URL('https://icp-api.io');\n        this.log.warn(\n          'Could not infer host from window.location, defaulting to mainnet gateway of https://icp-api.io. Please provide a host to the HttpAgent constructor to avoid this warning.',\n        );\n      }\n    }\n    if (options.verifyQuerySignatures !== undefined) {\n      this.#verifyQuerySignatures = options.verifyQuerySignatures;\n    }\n    // Default is 3\n    this._retryTimes = options.retryTimes ?? 3;\n    // Rewrite to avoid redirects\n    if (this._host.hostname.endsWith(IC0_SUB_DOMAIN)) {\n      this._host.hostname = IC0_DOMAIN;\n    } else if (this._host.hostname.endsWith(ICP0_SUB_DOMAIN)) {\n      this._host.hostname = ICP0_DOMAIN;\n    } else if (this._host.hostname.endsWith(ICP_API_SUB_DOMAIN)) {\n      this._host.hostname = ICP_API_DOMAIN;\n    }\n\n    if (options.credentials) {\n      const { name, password } = options.credentials;\n      this._credentials = `${name}${password ? ':' + password : ''}`;\n    }\n    this._identity = Promise.resolve(options.identity || new AnonymousIdentity());\n\n    // Add a nonce transform to ensure calls are unique\n    this.addTransform('update', makeNonceTransform(makeNonce));\n    if (options.useQueryNonces) {\n      this.addTransform('query', makeNonceTransform(makeNonce));\n    }\n    if (options.logToConsole) {\n      this.log.subscribe(log => {\n        if (log.level === 'error') {\n          console.error(log.message);\n        } else if (log.level === 'warn') {\n          console.warn(log.message);\n        } else {\n          console.log(log.message);\n        }\n      });\n    }\n  }\n\n  public isLocal(): boolean {\n    const hostname = this._host.hostname;\n    return hostname === '127.0.0.1' || hostname.endsWith('127.0.0.1');\n  }\n\n  public addTransform(\n    type: 'update' | 'query',\n    fn: HttpAgentRequestTransformFn,\n    priority = fn.priority || 0,\n  ): void {\n    if (type === 'update') {\n      // Keep the pipeline sorted at all time, by priority.\n      const i = this.#updatePipeline.findIndex(x => (x.priority || 0) < priority);\n      this.#updatePipeline.splice(\n        i >= 0 ? i : this.#updatePipeline.length,\n        0,\n        Object.assign(fn, { priority }),\n      );\n    } else if (type === 'query') {\n      // Keep the pipeline sorted at all time, by priority.\n      const i = this.#queryPipeline.findIndex(x => (x.priority || 0) < priority);\n      this.#queryPipeline.splice(\n        i >= 0 ? i : this.#queryPipeline.length,\n        0,\n        Object.assign(fn, { priority }),\n      );\n    }\n  }\n\n  public async getPrincipal(): Promise<Principal> {\n    if (!this._identity) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n    return (await this._identity).getPrincipal();\n  }\n\n  public async call(\n    canisterId: Principal | string,\n    options: {\n      methodName: string;\n      arg: ArrayBuffer;\n      effectiveCanisterId?: Principal | string;\n    },\n    identity?: Identity | Promise<Identity>,\n  ): Promise<SubmitResponse> {\n    const id = await (identity !== undefined ? await identity : await this._identity);\n    if (!id) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n    const canister = Principal.from(canisterId);\n    const ecid = options.effectiveCanisterId\n      ? Principal.from(options.effectiveCanisterId)\n      : canister;\n\n    const sender: Principal = id.getPrincipal() || Principal.anonymous();\n\n    let ingress_expiry = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS);\n\n    // If the value is off by more than 30 seconds, reconcile system time with the network\n    if (Math.abs(this._timeDiffMsecs) > 1_000 * 30) {\n      ingress_expiry = new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS + this._timeDiffMsecs);\n    }\n\n    const submit: CallRequest = {\n      request_type: SubmitRequestType.Call,\n      canister_id: canister,\n      method_name: options.methodName,\n      arg: options.arg,\n      sender,\n      ingress_expiry,\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let transformedRequest: any = (await this._transform({\n      request: {\n        body: null,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/cbor',\n          ...(this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {}),\n        },\n      },\n      endpoint: Endpoint.Call,\n      body: submit,\n    })) as HttpAgentSubmitRequest;\n\n    // Apply transform for identity.\n    transformedRequest = await id.transformRequest(transformedRequest);\n\n    const body = cbor.encode(transformedRequest.body);\n\n    this.log(`fetching \"/api/v2/canister/${ecid.toText()}/call\" with request:`, transformedRequest);\n\n    // Run both in parallel. The fetch is quite expensive, so we have plenty of time to\n    // calculate the requestId locally.\n    const request = this._requestAndRetry(() =>\n      this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), {\n        ...this._callOptions,\n        ...transformedRequest.request,\n        body,\n      }),\n    );\n\n    const [response, requestId] = await Promise.all([request, requestIdOf(submit)]);\n\n    const responseBuffer = await response.arrayBuffer();\n    const responseBody = (\n      response.status === 200 && responseBuffer.byteLength > 0 ? cbor.decode(responseBuffer) : null\n    ) as SubmitResponse['response']['body'];\n\n    return {\n      requestId,\n      response: {\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n        body: responseBody,\n        headers: httpHeadersTransform(response.headers),\n      },\n    };\n  }\n\n  async #requestAndRetryQuery(\n    args: {\n      ecid: Principal;\n      transformedRequest: HttpAgentRequest;\n      body: ArrayBuffer;\n      requestId: RequestId;\n    },\n    tries = 0,\n  ): Promise<ApiQueryResponse> {\n    const { ecid, transformedRequest, body, requestId } = args;\n    let response: ApiQueryResponse;\n    // Make the request and retry if it throws an error\n    try {\n      const fetchResponse = await this._fetch(\n        '' + new URL(`/api/v2/canister/${ecid.toString()}/query`, this._host),\n        {\n          ...this._fetchOptions,\n          ...transformedRequest.request,\n          body,\n        },\n      );\n      if (fetchResponse.status === 200) {\n        const queryResponse: QueryResponse = cbor.decode(await fetchResponse.arrayBuffer());\n        response = {\n          ...queryResponse,\n          httpDetails: {\n            ok: fetchResponse.ok,\n            status: fetchResponse.status,\n            statusText: fetchResponse.statusText,\n            headers: httpHeadersTransform(fetchResponse.headers),\n          },\n          requestId,\n        };\n      } else {\n        throw new AgentHTTPResponseError(\n          `Server returned an error:\\n` +\n            `  Code: ${fetchResponse.status} (${fetchResponse.statusText})\\n` +\n            `  Body: ${await fetchResponse.text()}\\n`,\n          {\n            ok: fetchResponse.ok,\n            status: fetchResponse.status,\n            statusText: fetchResponse.statusText,\n            headers: httpHeadersTransform(fetchResponse.headers),\n          },\n        );\n      }\n    } catch (error) {\n      if (tries < this._retryTimes) {\n        this.log.warn(\n          `Caught exception while attempting to make query:\\n` +\n            `  ${error}\\n` +\n            `  Retrying query.`,\n        );\n        return await this.#requestAndRetryQuery(args, tries + 1);\n      }\n      throw error;\n    }\n\n    const timestamp = response.signatures?.[0]?.timestamp;\n\n    // Skip watermark verification if the user has set verifyQuerySignatures to false\n    if (!this.#verifyQuerySignatures) {\n      return response;\n    }\n\n    if (!timestamp) {\n      throw new Error(\n        'Timestamp not found in query response. This suggests a malformed or malicious response.',\n      );\n    }\n\n    // Convert the timestamp to milliseconds\n    const timeStampInMs = Number(BigInt(timestamp) / BigInt(1_000_000));\n\n    this.log('watermark and timestamp', {\n      waterMark: this.waterMark,\n      timestamp: timeStampInMs,\n    });\n\n    // If the timestamp is less than the watermark, retry the request up to the retry limit\n    if (Number(this.waterMark) > timeStampInMs) {\n      const error = new AgentError('Timestamp is below the watermark. Retrying query.');\n      this.log.error('Timestamp is below', error, {\n        timestamp,\n        waterMark: this.waterMark,\n      });\n      if (tries < this._retryTimes) {\n        return await this.#requestAndRetryQuery(args, tries + 1);\n      }\n      {\n        throw new AgentError(\n          `Timestamp failed to pass the watermark after retrying the configured ${this._retryTimes} times. We cannot guarantee the integrity of the response since it could be a replay attack.`,\n        );\n      }\n    }\n\n    return response;\n  }\n\n  private async _requestAndRetry(request: () => Promise<Response>, tries = 0): Promise<Response> {\n    let response: Response;\n    try {\n      response = await request();\n    } catch (error) {\n      if (this._retryTimes > tries) {\n        this.log.warn(\n          `Caught exception while attempting to make request:\\n` +\n            `  ${error}\\n` +\n            `  Retrying request.`,\n        );\n        return await this._requestAndRetry(request, tries + 1);\n      }\n      throw error;\n    }\n    if (response.ok) {\n      return response;\n    }\n\n    const responseText = await response.clone().text();\n    const errorMessage =\n      `Server returned an error:\\n` +\n      `  Code: ${response.status} (${response.statusText})\\n` +\n      `  Body: ${responseText}\\n`;\n\n    if (this._retryTimes > tries) {\n      this.log.warn(errorMessage + `  Retrying request.`);\n      return await this._requestAndRetry(request, tries + 1);\n    }\n\n    throw new AgentHTTPResponseError(errorMessage, {\n      ok: response.ok,\n      status: response.status,\n      statusText: response.statusText,\n      headers: httpHeadersTransform(response.headers),\n    });\n  }\n\n  public async query(\n    canisterId: Principal | string,\n    fields: QueryFields,\n    identity?: Identity | Promise<Identity>,\n  ): Promise<ApiQueryResponse> {\n    const ecid = fields.effectiveCanisterId\n      ? Principal.from(fields.effectiveCanisterId)\n      : Principal.from(canisterId);\n\n    this.log(`ecid ${ecid.toString()}`);\n    this.log(`canisterId ${canisterId.toString()}`);\n    const makeQuery = async () => {\n      const id = await (identity !== undefined ? await identity : await this._identity);\n      if (!id) {\n        throw new IdentityInvalidError(\n          \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n        );\n      }\n\n      const canister = Principal.from(canisterId);\n      const sender = id?.getPrincipal() || Principal.anonymous();\n\n      const request: QueryRequest = {\n        request_type: ReadRequestType.Query,\n        canister_id: canister,\n        method_name: fields.methodName,\n        arg: fields.arg,\n        sender,\n        ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n      };\n\n      const requestId = await requestIdOf(request);\n\n      // TODO: remove this any. This can be a Signed or UnSigned request.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      let transformedRequest: HttpAgentRequest = await this._transform({\n        request: {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/cbor',\n            ...(this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {}),\n          },\n        },\n        endpoint: Endpoint.Query,\n        body: request,\n      });\n\n      // Apply transform for identity.\n      transformedRequest = (await id?.transformRequest(transformedRequest)) as HttpAgentRequest;\n\n      const body = cbor.encode(transformedRequest.body);\n\n      const args = {\n        canister: canister.toText(),\n        ecid,\n        transformedRequest,\n        body,\n        requestId,\n      };\n\n      return await this.#requestAndRetryQuery(args);\n    };\n\n    const getSubnetStatus = async (): Promise<SubnetStatus | void> => {\n      if (!this.#verifyQuerySignatures) {\n        return undefined;\n      }\n      const subnetStatus = this.#subnetKeys.get(ecid.toString());\n      if (subnetStatus) {\n        return subnetStatus;\n      }\n      await this.fetchSubnetKeys(ecid.toString());\n      return this.#subnetKeys.get(ecid.toString());\n    };\n    // Attempt to make the query i=retryTimes times\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    // Make query and fetch subnet keys in parallel\n    const [query, subnetStatus] = await Promise.all([makeQuery(), getSubnetStatus()]);\n\n    this.log('Query response:', query);\n    // Skip verification if the user has disabled it\n    if (!this.#verifyQuerySignatures) {\n      return query;\n    }\n\n    try {\n      return this.#verifyQueryResponse(query, subnetStatus);\n    } catch (_) {\n      // In case the node signatures have changed, refresh the subnet keys and try again\n      this.log.warn('Query response verification failed. Retrying with fresh subnet keys.');\n      this.#subnetKeys.delete(canisterId.toString());\n      await this.fetchSubnetKeys(ecid.toString());\n\n      const updatedSubnetStatus = this.#subnetKeys.get(canisterId.toString());\n      if (!updatedSubnetStatus) {\n        throw new CertificateVerificationError(\n          'Invalid signature from replica signed query: no matching node key found.',\n        );\n      }\n      return this.#verifyQueryResponse(query, updatedSubnetStatus);\n    }\n  }\n\n  /**\n   * See https://internetcomputer.org/docs/current/references/ic-interface-spec/#http-query for details on validation\n   * @param queryResponse - The response from the query\n   * @param subnetStatus - The subnet status, including all node keys\n   * @returns ApiQueryResponse\n   */\n  #verifyQueryResponse = (\n    queryResponse: ApiQueryResponse,\n    subnetStatus: SubnetStatus | void,\n  ): ApiQueryResponse => {\n    if (this.#verifyQuerySignatures === false) {\n      // This should not be called if the user has disabled verification\n      return queryResponse;\n    }\n    if (!subnetStatus) {\n      throw new CertificateVerificationError(\n        'Invalid signature from replica signed query: no matching node key found.',\n      );\n    }\n    const { status, signatures = [], requestId } = queryResponse;\n\n    const domainSeparator = new TextEncoder().encode('\\x0Bic-response');\n    for (const sig of signatures) {\n      const { timestamp, identity } = sig;\n      const nodeId = Principal.fromUint8Array(identity).toText();\n      let hash: ArrayBuffer;\n\n      // Hash is constructed differently depending on the status\n      if (status === 'replied') {\n        const { reply } = queryResponse;\n        hash = hashOfMap({\n          status: status,\n          reply: reply,\n          timestamp: BigInt(timestamp),\n          request_id: requestId,\n        });\n      } else if (status === 'rejected') {\n        const { reject_code, reject_message, error_code } = queryResponse;\n        hash = hashOfMap({\n          status: status,\n          reject_code: reject_code,\n          reject_message: reject_message,\n          error_code: error_code,\n          timestamp: BigInt(timestamp),\n          request_id: requestId,\n        });\n      } else {\n        throw new Error(`Unknown status: ${status}`);\n      }\n\n      const separatorWithHash = concat(domainSeparator, new Uint8Array(hash));\n\n      // FIX: check for match without verifying N times\n      const pubKey = subnetStatus?.nodeKeys.get(nodeId);\n      if (!pubKey) {\n        throw new CertificateVerificationError(\n          'Invalid signature from replica signed query: no matching node key found.',\n        );\n      }\n      const rawKey = Ed25519PublicKey.fromDer(pubKey).rawKey;\n      const valid = ed25519.verify(\n        sig.signature,\n        new Uint8Array(separatorWithHash),\n        new Uint8Array(rawKey),\n      );\n      if (valid) return queryResponse;\n\n      throw new CertificateVerificationError(\n        `Invalid signature from replica ${nodeId} signed query.`,\n      );\n    }\n    return queryResponse;\n  };\n\n  public async createReadStateRequest(\n    fields: ReadStateOptions,\n    identity?: Identity | Promise<Identity>,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): Promise<any> {\n    const id = await (identity !== undefined ? await identity : await this._identity);\n    if (!id) {\n      throw new IdentityInvalidError(\n        \"This identity has expired due this application's security policy. Please refresh your authentication.\",\n      );\n    }\n    const sender = id?.getPrincipal() || Principal.anonymous();\n\n    // TODO: remove this any. This can be a Signed or UnSigned request.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const transformedRequest: any = await this._transform({\n      request: {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/cbor',\n          ...(this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {}),\n        },\n      },\n      endpoint: Endpoint.ReadState,\n      body: {\n        request_type: ReadRequestType.ReadState,\n        paths: fields.paths,\n        sender,\n        ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n      },\n    });\n\n    // Apply transform for identity.\n    return id?.transformRequest(transformedRequest);\n  }\n\n  public async readState(\n    canisterId: Principal | string,\n    fields: ReadStateOptions,\n    identity?: Identity | Promise<Identity>,\n    // eslint-disable-next-line\n    request?: any,\n  ): Promise<ReadStateResponse> {\n    const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n\n    const transformedRequest = request ?? (await this.createReadStateRequest(fields, identity));\n    const body = cbor.encode(transformedRequest.body);\n\n    this.log(\n      `fetching \"/api/v2/canister/${canister}/read_state\" with request:`,\n      transformedRequest,\n    );\n    // TODO - https://dfinity.atlassian.net/browse/SDK-1092\n    const response = await this._requestAndRetry(() =>\n      this._fetch('' + new URL(`/api/v2/canister/${canister}/read_state`, this._host), {\n        ...this._fetchOptions,\n        ...transformedRequest.request,\n        body,\n      }),\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Server returned an error:\\n` +\n          `  Code: ${response.status} (${response.statusText})\\n` +\n          `  Body: ${await response.text()}\\n`,\n      );\n    }\n    const decodedResponse: ReadStateResponse = cbor.decode(await response.arrayBuffer());\n\n    this.log('Read state response:', decodedResponse);\n    const parsedTime = await this.parseTimeFromResponse(decodedResponse);\n    if (parsedTime > 0) {\n      this.log('Read state response time:', parsedTime);\n      this.#waterMark = parsedTime;\n    }\n\n    return decodedResponse;\n  }\n\n  public async parseTimeFromResponse(response: ReadStateResponse): Promise<number> {\n    let tree: HashTree;\n    if (response.certificate) {\n      const decoded: { tree: HashTree } | undefined = cbor.decode(response.certificate);\n      if (decoded && 'tree' in decoded) {\n        tree = decoded.tree;\n      } else {\n        throw new Error('Could not decode time from response');\n      }\n      const timeLookup = lookup_path(['time'], tree);\n      if (!timeLookup) {\n        throw new Error('Time was not found in the response or was not in its expected format.');\n      }\n\n      if (!(timeLookup instanceof ArrayBuffer) && !ArrayBuffer.isView(timeLookup)) {\n        throw new Error('Time was not found in the response or was not in its expected format.');\n      }\n      const date = decodeTime(bufFromBufLike(timeLookup));\n      this.log('Time from response:', date);\n      this.log('Time from response in milliseconds:', Number(date));\n      return Number(date);\n    } else {\n      this.log.warn('No certificate found in response');\n    }\n    return 0;\n  }\n\n  /**\n   * Allows agent to sync its time with the network. Can be called during intialization or mid-lifecycle if the device's clock has drifted away from the network time. This is necessary to set the Expiry for a request\n   * @param {Principal} canisterId - Pass a canister ID if you need to sync the time with a particular replica. Uses the management canister by default\n   */\n  public async syncTime(canisterId?: Principal): Promise<void> {\n    const CanisterStatus = await import('../../canisterStatus');\n    const callTime = Date.now();\n    try {\n      if (!canisterId) {\n        this.log(\n          'Syncing time with the IC. No canisterId provided, so falling back to ryjl3-tyaaa-aaaaa-aaaba-cai',\n        );\n      }\n      const status = await CanisterStatus.request({\n        // Fall back with canisterId of the ICP Ledger\n        canisterId: canisterId ?? Principal.from('ryjl3-tyaaa-aaaaa-aaaba-cai'),\n        agent: this,\n        paths: ['time'],\n      });\n\n      const replicaTime = status.get('time');\n      if (replicaTime) {\n        this._timeDiffMsecs = Number(replicaTime as bigint) - Number(callTime);\n      }\n    } catch (error) {\n      this.log.error('Caught exception while attempting to sync time', error as AgentError);\n    }\n  }\n\n  public async status(): Promise<JsonObject> {\n    const headers: Record<string, string> = this._credentials\n      ? {\n          Authorization: 'Basic ' + btoa(this._credentials),\n        }\n      : {};\n\n    this.log(`fetching \"/api/v2/status\"`);\n    const response = await this._requestAndRetry(() =>\n      this._fetch('' + new URL(`/api/v2/status`, this._host), { headers, ...this._fetchOptions }),\n    );\n\n    return cbor.decode(await response.arrayBuffer());\n  }\n\n  public async fetchRootKey(): Promise<ArrayBuffer> {\n    if (!this._rootKeyFetched) {\n      // Hex-encoded version of the replica root key\n      this.rootKey = ((await this.status()) as JsonObject & { root_key: ArrayBuffer }).root_key;\n      this._rootKeyFetched = true;\n    }\n    return this.rootKey;\n  }\n\n  public invalidateIdentity(): void {\n    this._identity = null;\n  }\n\n  public replaceIdentity(identity: Identity): void {\n    this._identity = Promise.resolve(identity);\n  }\n\n  public async fetchSubnetKeys(canisterId: Principal | string) {\n    const effectiveCanisterId: Principal = Principal.from(canisterId);\n    const response = await request({\n      canisterId: effectiveCanisterId,\n      paths: ['subnet'],\n      agent: this,\n    });\n\n    const subnetResponse = response.get('subnet');\n    if (subnetResponse && typeof subnetResponse === 'object' && 'nodeKeys' in subnetResponse) {\n      this.#subnetKeys.set(effectiveCanisterId.toText(), subnetResponse as SubnetStatus);\n      return subnetResponse as SubnetStatus;\n    }\n    // If the subnet status is not returned, return undefined\n    return undefined;\n  }\n\n  protected _transform(request: HttpAgentRequest): Promise<HttpAgentRequest> {\n    let p = Promise.resolve(request);\n    if (request.endpoint === Endpoint.Call) {\n      for (const fn of this.#updatePipeline) {\n        p = p.then(r => fn(r).then(r2 => r2 || r));\n      }\n    } else {\n      for (const fn of this.#queryPipeline) {\n        p = p.then(r => fn(r).then(r2 => r2 || r));\n      }\n    }\n\n    return p;\n  }\n}\n", "import { JsonObject } from '@dfinity/candid';\nimport {\n  Agent,\n  ApiQueryResponse,\n  CallOptions,\n  QueryFields,\n  QueryResponse,\n  ReadStateOptions,\n  ReadStateResponse,\n  SubmitResponse,\n} from './api';\nimport { Principal } from '@dfinity/principal';\n\nexport enum ProxyMessageKind {\n  Error = 'err',\n  GetPrincipal = 'gp',\n  GetPrincipalResponse = 'gpr',\n  Query = 'q',\n  QueryResponse = 'qr',\n  Call = 'c',\n  CallResponse = 'cr',\n  ReadState = 'rs',\n  ReadStateResponse = 'rsr',\n  Status = 's',\n  StatusResponse = 'sr',\n}\n\nexport interface ProxyMessageBase {\n  id: number;\n  type: ProxyMessageKind;\n}\n\nexport interface ProxyMessageError extends ProxyMessageBase {\n  type: ProxyMessageKind.Error;\n  error: any;\n}\n\nexport interface ProxyMessageGetPrincipal extends ProxyMessageBase {\n  type: ProxyMessageKind.GetPrincipal;\n}\n\nexport interface ProxyMessageGetPrincipalResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.GetPrincipalResponse;\n  response: string;\n}\n\nexport interface ProxyMessageQuery extends ProxyMessageBase {\n  type: ProxyMessageKind.Query;\n  args: [string, QueryFields];\n}\n\nexport interface ProxyMessageQueryResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.QueryResponse;\n  response: QueryResponse;\n}\n\nexport interface ProxyMessageCall extends ProxyMessageBase {\n  type: ProxyMessageKind.Call;\n  args: [string, CallOptions];\n}\n\nexport interface ProxyMessageCallResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.CallResponse;\n  response: SubmitResponse;\n}\n\nexport interface ProxyMessageReadState extends ProxyMessageBase {\n  type: ProxyMessageKind.ReadState;\n  args: [string, ReadStateOptions];\n}\n\nexport interface ProxyMessageReadStateResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.ReadStateResponse;\n  response: ReadStateResponse;\n}\n\nexport interface ProxyMessageStatus extends ProxyMessageBase {\n  type: ProxyMessageKind.Status;\n}\n\nexport interface ProxyMessageStatusResponse extends ProxyMessageBase {\n  type: ProxyMessageKind.StatusResponse;\n  response: JsonObject;\n}\n\nexport type ProxyMessage =\n  | ProxyMessageError\n  | ProxyMessageGetPrincipal\n  | ProxyMessageGetPrincipalResponse\n  | ProxyMessageQuery\n  | ProxyMessageQueryResponse\n  | ProxyMessageCall\n  | ProxyMessageReadState\n  | ProxyMessageReadStateResponse\n  | ProxyMessageCallResponse\n  | ProxyMessageStatus\n  | ProxyMessageStatusResponse;\n\n// A Stub Agent that forwards calls to another Agent implementation.\nexport class ProxyStubAgent {\n  constructor(private _frontend: (msg: ProxyMessage) => void, private _agent: Agent) {}\n\n  public onmessage(msg: ProxyMessage): void {\n    switch (msg.type) {\n      case ProxyMessageKind.GetPrincipal:\n        this._agent.getPrincipal().then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.GetPrincipalResponse,\n            response: response.toText(),\n          });\n        });\n        break;\n      case ProxyMessageKind.Query:\n        this._agent.query(...msg.args).then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.QueryResponse,\n            response,\n          });\n        });\n        break;\n      case ProxyMessageKind.Call:\n        this._agent.call(...msg.args).then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.CallResponse,\n            response,\n          });\n        });\n        break;\n      case ProxyMessageKind.ReadState:\n        this._agent.readState(...msg.args).then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.ReadStateResponse,\n            response,\n          });\n        });\n        break;\n      case ProxyMessageKind.Status:\n        this._agent.status().then(response => {\n          this._frontend({\n            id: msg.id,\n            type: ProxyMessageKind.StatusResponse,\n            response,\n          });\n        });\n        break;\n\n      default:\n        throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);\n    }\n  }\n}\n\n// An Agent that forwards calls to a backend. The calls are serialized\nexport class ProxyAgent implements Agent {\n  private _nextId = 0;\n  private _pendingCalls = new Map<number, [(resolve: any) => void, (reject: any) => void]>();\n  public rootKey = null;\n\n  constructor(private _backend: (msg: ProxyMessage) => void) {}\n\n  public onmessage(msg: ProxyMessage): void {\n    const id = msg.id;\n\n    const maybePromise = this._pendingCalls.get(id);\n    if (!maybePromise) {\n      throw new Error('A proxy get the same message twice...');\n    }\n\n    this._pendingCalls.delete(id);\n    const [resolve, reject] = maybePromise;\n\n    switch (msg.type) {\n      case ProxyMessageKind.Error:\n        return reject(msg.error);\n      case ProxyMessageKind.GetPrincipalResponse:\n      case ProxyMessageKind.CallResponse:\n      case ProxyMessageKind.QueryResponse:\n      case ProxyMessageKind.ReadStateResponse:\n      case ProxyMessageKind.StatusResponse:\n        return resolve(msg.response);\n      default:\n        throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);\n    }\n  }\n\n  public async getPrincipal(): Promise<Principal> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.GetPrincipal,\n    }).then(principal => {\n      if (typeof principal !== 'string') {\n        throw new Error('Invalid principal received.');\n      }\n      return Principal.fromText(principal);\n    });\n  }\n\n  public readState(\n    canisterId: Principal | string,\n    fields: ReadStateOptions,\n  ): Promise<ReadStateResponse> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.ReadState,\n      args: [canisterId.toString(), fields],\n    }) as Promise<ReadStateResponse>;\n  }\n\n  public call(canisterId: Principal | string, fields: CallOptions): Promise<SubmitResponse> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.Call,\n      args: [canisterId.toString(), fields],\n    }) as Promise<SubmitResponse>;\n  }\n\n  public status(): Promise<JsonObject> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.Status,\n    }) as Promise<JsonObject>;\n  }\n\n  public query(canisterId: Principal | string, fields: QueryFields): Promise<ApiQueryResponse> {\n    return this._sendAndWait({\n      id: this._nextId++,\n      type: ProxyMessageKind.Query,\n      args: [canisterId.toString(), fields],\n    }) as Promise<ApiQueryResponse>;\n  }\n\n  private async _sendAndWait(msg: ProxyMessage): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._pendingCalls.set(msg.id, [resolve, reject]);\n\n      this._backend(msg);\n    });\n  }\n\n  public async fetchRootKey(): Promise<ArrayBuffer> {\n    // Hex-encoded version of the replica root key\n    const rootKey = ((await this.status()) as any).root_key;\n    this.rootKey = rootKey;\n    return rootKey;\n  }\n}\n", "import { GlobalInternetComputer } from '../index';\nimport { Agent } from './api';\n\nexport * from './api';\nexport * from './http';\nexport * from './http/errors';\nexport * from './proxy';\n\ndeclare const window: GlobalInternetComputer;\ndeclare const global: GlobalInternetComputer;\ndeclare const self: GlobalInternetComputer;\n\nexport function getDefaultAgent(): Agent {\n  const agent =\n    typeof window === 'undefined'\n      ? typeof global === 'undefined'\n        ? typeof self === 'undefined'\n          ? undefined\n          : self.ic.agent\n        : global.ic.agent\n      : window.ic.agent;\n\n  if (!agent) {\n    throw new Error('No Agent could be found.');\n  }\n\n  return agent;\n}\n", "import { Principal } from '@dfinity/principal';\nimport { RequestStatusResponseStatus } from '../agent';\nimport { toHex } from '../utils/buffer';\nimport { PollStrategy } from './index';\nimport { RequestId } from '../request_id';\n\nexport type Predicate<T> = (\n  canisterId: Principal,\n  requestId: RequestId,\n  status: RequestStatusResponseStatus,\n) => Promise<T>;\n\nconst FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n\n/**\n * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second\n * with an exponential backoff factor of 1.2. Timeout after 5 minutes.\n */\nexport function defaultStrategy(): PollStrategy {\n  return chain(conditionalDelay(once(), 1000), backoff(1000, 1.2), timeout(FIVE_MINUTES_IN_MSEC));\n}\n\n/**\n * Predicate that returns true once.\n */\nexport function once(): Predicate<boolean> {\n  let first = true;\n  return async () => {\n    if (first) {\n      first = false;\n      return true;\n    }\n    return false;\n  };\n}\n\n/**\n * Delay the polling once.\n * @param condition A predicate that indicates when to delay.\n * @param timeInMsec The amount of time to delay.\n */\nexport function conditionalDelay(condition: Predicate<boolean>, timeInMsec: number): PollStrategy {\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    if (await condition(canisterId, requestId, status)) {\n      return new Promise(resolve => setTimeout(resolve, timeInMsec));\n    }\n  };\n}\n\n/**\n * Error out after a maximum number of polling has been done.\n * @param count The maximum attempts to poll.\n */\nexport function maxAttempts(count: number): PollStrategy {\n  let attempts = count;\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    if (--attempts <= 0) {\n      throw new Error(\n        `Failed to retrieve a reply for request after ${count} attempts:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n` +\n          `  Request status: ${status}\\n`,\n      );\n    }\n  };\n}\n\n/**\n * Throttle polling.\n * @param throttleInMsec Amount in millisecond to wait between each polling.\n */\nexport function throttle(throttleInMsec: number): PollStrategy {\n  return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));\n}\n\n/**\n * Reject a call after a certain amount of time.\n * @param timeInMsec Time in milliseconds before the polling should be rejected.\n */\nexport function timeout(timeInMsec: number): PollStrategy {\n  const end = Date.now() + timeInMsec;\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    if (Date.now() > end) {\n      throw new Error(\n        `Request timed out after ${timeInMsec} msec:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n` +\n          `  Request status: ${status}\\n`,\n      );\n    }\n  };\n}\n\n/**\n * A strategy that throttle, but using an exponential backoff strategy.\n * @param startingThrottleInMsec The throttle in milliseconds to start with.\n * @param backoffFactor The factor to multiple the throttle time between every poll. For\n *   example if using 2, the throttle will double between every run.\n */\nexport function backoff(startingThrottleInMsec: number, backoffFactor: number): PollStrategy {\n  let currentThrottling = startingThrottleInMsec;\n\n  return () =>\n    new Promise(resolve =>\n      setTimeout(() => {\n        currentThrottling *= backoffFactor;\n        resolve();\n      }, currentThrottling),\n    );\n}\n\n/**\n * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,\n * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.\n * @param strategies A strategy list to chain.\n */\nexport function chain(...strategies: PollStrategy[]): PollStrategy {\n  return async (\n    canisterId: Principal,\n    requestId: RequestId,\n    status: RequestStatusResponseStatus,\n  ) => {\n    for (const a of strategies) {\n      await a(canisterId, requestId, status);\n    }\n  };\n}\n", "import { Principal } from '@dfinity/principal';\nimport { Agent, RequestStatusResponseStatus } from '../agent';\nimport { Certificate, CreateCertificateOptions } from '../certificate';\nimport { RequestId } from '../request_id';\nimport { toHex } from '../utils/buffer';\n\nexport * as strategy from './strategy';\nexport { defaultStrategy } from './strategy';\nexport type PollStrategy = (\n  canisterId: Principal,\n  requestId: RequestId,\n  status: RequestStatusResponseStatus,\n) => Promise<void>;\nexport type PollStrategyFactory = () => PollStrategy;\n\n/**\n * Polls the IC to check the status of the given request then\n * returns the response bytes once the request has been processed.\n * @param agent The agent to use to poll read_state.\n * @param canisterId The effective canister ID.\n * @param requestId The Request ID to poll status for.\n * @param strategy A polling strategy.\n * @param request Request for the readState call.\n */\nexport async function pollForResponse(\n  agent: Agent,\n  canisterId: Principal,\n  requestId: RequestId,\n  strategy: PollStrategy,\n  // eslint-disable-next-line\n  request?: any,\n  blsVerify?: CreateCertificateOptions['blsVerify'],\n): Promise<ArrayBuffer> {\n  const path = [new TextEncoder().encode('request_status'), requestId];\n  const currentRequest = request ?? (await agent.createReadStateRequest?.({ paths: [path] }));\n  const state = await agent.readState(canisterId, { paths: [path] }, undefined, currentRequest);\n  if (agent.rootKey == null) throw new Error('Agent root key not initialized before polling');\n  const cert = await Certificate.create({\n    certificate: state.certificate,\n    rootKey: agent.rootKey,\n    canisterId: canisterId,\n    blsVerify,\n  });\n  const maybeBuf = cert.lookup([...path, new TextEncoder().encode('status')]);\n  let status;\n  if (typeof maybeBuf === 'undefined') {\n    // Missing requestId means we need to wait\n    status = RequestStatusResponseStatus.Unknown;\n  } else {\n    status = new TextDecoder().decode(maybeBuf);\n  }\n\n  switch (status) {\n    case RequestStatusResponseStatus.Replied: {\n      return cert.lookup([...path, 'reply'])!;\n    }\n\n    case RequestStatusResponseStatus.Received:\n    case RequestStatusResponseStatus.Unknown:\n    case RequestStatusResponseStatus.Processing:\n      // Execute the polling strategy, then retry.\n      await strategy(canisterId, requestId, status);\n      return pollForResponse(agent, canisterId, requestId, strategy, currentRequest);\n\n    case RequestStatusResponseStatus.Rejected: {\n      const rejectCode = new Uint8Array(cert.lookup([...path, 'reject_code'])!)[0];\n      const rejectMessage = new TextDecoder().decode(cert.lookup([...path, 'reject_message'])!);\n      throw new Error(\n        `Call was rejected:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n` +\n          `  Reject code: ${rejectCode}\\n` +\n          `  Reject text: ${rejectMessage}\\n`,\n      );\n    }\n\n    case RequestStatusResponseStatus.Done:\n      // This is _technically_ not an error, but we still didn't see the `Replied` status so\n      // we don't know the result and cannot decode it.\n      throw new Error(\n        `Call was marked as done but we never saw the reply:\\n` +\n          `  Request ID: ${toHex(requestId)}\\n`,\n      );\n  }\n  throw new Error('unreachable');\n}\n", "/**\n * This file is generated from the candid for asset management.\n * didc version: 0.3.6\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ IDL }) => {\n  const bitcoin_network = IDL.Variant({\n    mainnet: IDL.Null,\n    testnet: IDL.Null,\n  });\n  const bitcoin_address = IDL.Text;\n  const bitcoin_get_balance_args = IDL.Record({\n    network: bitcoin_network,\n    address: bitcoin_address,\n    min_confirmations: IDL.Opt(IDL.Nat32),\n  });\n  const satoshi = IDL.Nat64;\n  const bitcoin_get_balance_result = satoshi;\n  const bitcoin_get_balance_query_args = IDL.Record({\n    network: bitcoin_network,\n    address: bitcoin_address,\n    min_confirmations: IDL.Opt(IDL.Nat32),\n  });\n  const bitcoin_get_balance_query_result = satoshi;\n  const bitcoin_get_current_fee_percentiles_args = IDL.Record({\n    network: bitcoin_network,\n  });\n  const millisatoshi_per_byte = IDL.Nat64;\n  const bitcoin_get_current_fee_percentiles_result = IDL.Vec(millisatoshi_per_byte);\n  const bitcoin_get_utxos_args = IDL.Record({\n    network: bitcoin_network,\n    filter: IDL.Opt(\n      IDL.Variant({\n        page: IDL.Vec(IDL.Nat8),\n        min_confirmations: IDL.Nat32,\n      }),\n    ),\n    address: bitcoin_address,\n  });\n  const block_hash = IDL.Vec(IDL.Nat8);\n  const outpoint = IDL.Record({\n    txid: IDL.Vec(IDL.Nat8),\n    vout: IDL.Nat32,\n  });\n  const utxo = IDL.Record({\n    height: IDL.Nat32,\n    value: satoshi,\n    outpoint: outpoint,\n  });\n  const bitcoin_get_utxos_result = IDL.Record({\n    next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    tip_height: IDL.Nat32,\n    tip_block_hash: block_hash,\n    utxos: IDL.Vec(utxo),\n  });\n  const bitcoin_get_utxos_query_args = IDL.Record({\n    network: bitcoin_network,\n    filter: IDL.Opt(\n      IDL.Variant({\n        page: IDL.Vec(IDL.Nat8),\n        min_confirmations: IDL.Nat32,\n      }),\n    ),\n    address: bitcoin_address,\n  });\n  const bitcoin_get_utxos_query_result = IDL.Record({\n    next_page: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    tip_height: IDL.Nat32,\n    tip_block_hash: block_hash,\n    utxos: IDL.Vec(utxo),\n  });\n  const bitcoin_send_transaction_args = IDL.Record({\n    transaction: IDL.Vec(IDL.Nat8),\n    network: bitcoin_network,\n  });\n  const canister_id = IDL.Principal;\n  const canister_info_args = IDL.Record({\n    canister_id: canister_id,\n    num_requested_changes: IDL.Opt(IDL.Nat64),\n  });\n  const change_origin = IDL.Variant({\n    from_user: IDL.Record({ user_id: IDL.Principal }),\n    from_canister: IDL.Record({\n      canister_version: IDL.Opt(IDL.Nat64),\n      canister_id: IDL.Principal,\n    }),\n  });\n  const change_details = IDL.Variant({\n    creation: IDL.Record({ controllers: IDL.Vec(IDL.Principal) }),\n    code_deployment: IDL.Record({\n      mode: IDL.Variant({\n        reinstall: IDL.Null,\n        upgrade: IDL.Null,\n        install: IDL.Null,\n      }),\n      module_hash: IDL.Vec(IDL.Nat8),\n    }),\n    controllers_change: IDL.Record({\n      controllers: IDL.Vec(IDL.Principal),\n    }),\n    code_uninstall: IDL.Null,\n  });\n  const change = IDL.Record({\n    timestamp_nanos: IDL.Nat64,\n    canister_version: IDL.Nat64,\n    origin: change_origin,\n    details: change_details,\n  });\n  const canister_info_result = IDL.Record({\n    controllers: IDL.Vec(IDL.Principal),\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    recent_changes: IDL.Vec(change),\n    total_num_changes: IDL.Nat64,\n  });\n  const canister_status_args = IDL.Record({ canister_id: canister_id });\n  const log_visibility = IDL.Variant({\n    controllers: IDL.Null,\n    public: IDL.Null,\n  });\n  const definite_canister_settings = IDL.Record({\n    freezing_threshold: IDL.Nat,\n    controllers: IDL.Vec(IDL.Principal),\n    reserved_cycles_limit: IDL.Nat,\n    log_visibility: log_visibility,\n    memory_allocation: IDL.Nat,\n    compute_allocation: IDL.Nat,\n  });\n  const canister_status_result = IDL.Record({\n    status: IDL.Variant({\n      stopped: IDL.Null,\n      stopping: IDL.Null,\n      running: IDL.Null,\n    }),\n    memory_size: IDL.Nat,\n    cycles: IDL.Nat,\n    settings: definite_canister_settings,\n    idle_cycles_burned_per_day: IDL.Nat,\n    module_hash: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    reserved_cycles: IDL.Nat,\n  });\n  const clear_chunk_store_args = IDL.Record({ canister_id: canister_id });\n  const canister_settings = IDL.Record({\n    freezing_threshold: IDL.Opt(IDL.Nat),\n    controllers: IDL.Opt(IDL.Vec(IDL.Principal)),\n    reserved_cycles_limit: IDL.Opt(IDL.Nat),\n    log_visibility: IDL.Opt(log_visibility),\n    memory_allocation: IDL.Opt(IDL.Nat),\n    compute_allocation: IDL.Opt(IDL.Nat),\n  });\n  const create_canister_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const create_canister_result = IDL.Record({ canister_id: canister_id });\n  const delete_canister_args = IDL.Record({ canister_id: canister_id });\n  const deposit_cycles_args = IDL.Record({ canister_id: canister_id });\n  const ecdsa_curve = IDL.Variant({ secp256k1: IDL.Null });\n  const ecdsa_public_key_args = IDL.Record({\n    key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n    canister_id: IDL.Opt(canister_id),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n  });\n  const ecdsa_public_key_result = IDL.Record({\n    public_key: IDL.Vec(IDL.Nat8),\n    chain_code: IDL.Vec(IDL.Nat8),\n  });\n  const fetch_canister_logs_args = IDL.Record({ canister_id: canister_id });\n  const canister_log_record = IDL.Record({\n    idx: IDL.Nat64,\n    timestamp_nanos: IDL.Nat64,\n    content: IDL.Vec(IDL.Nat8),\n  });\n  const fetch_canister_logs_result = IDL.Record({\n    canister_log_records: IDL.Vec(canister_log_record),\n  });\n  const http_header = IDL.Record({ value: IDL.Text, name: IDL.Text });\n  const http_request_result = IDL.Record({\n    status: IDL.Nat,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(http_header),\n  });\n  const http_request_args = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Variant({\n      get: IDL.Null,\n      head: IDL.Null,\n      post: IDL.Null,\n    }),\n    max_response_bytes: IDL.Opt(IDL.Nat64),\n    body: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    transform: IDL.Opt(\n      IDL.Record({\n        function: IDL.Func(\n          [\n            IDL.Record({\n              context: IDL.Vec(IDL.Nat8),\n              response: http_request_result,\n            }),\n          ],\n          [http_request_result],\n          ['query'],\n        ),\n        context: IDL.Vec(IDL.Nat8),\n      }),\n    ),\n    headers: IDL.Vec(http_header),\n  });\n  const chunk_hash = IDL.Vec(IDL.Nat8);\n  const install_chunked_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module_hash: IDL.Vec(IDL.Nat8),\n    mode: IDL.Variant({\n      reinstall: IDL.Null,\n      upgrade: IDL.Opt(IDL.Record({ skip_pre_upgrade: IDL.Opt(IDL.Bool) })),\n      install: IDL.Null,\n    }),\n    chunk_hashes_list: IDL.Vec(chunk_hash),\n    target_canister: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n    storage_canister: IDL.Opt(canister_id),\n  });\n  const wasm_module = IDL.Vec(IDL.Nat8);\n  const install_code_args = IDL.Record({\n    arg: IDL.Vec(IDL.Nat8),\n    wasm_module: wasm_module,\n    mode: IDL.Variant({\n      reinstall: IDL.Null,\n      upgrade: IDL.Opt(IDL.Record({ skip_pre_upgrade: IDL.Opt(IDL.Bool) })),\n      install: IDL.Null,\n    }),\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const node_metrics_history_args = IDL.Record({\n    start_at_timestamp_nanos: IDL.Nat64,\n    subnet_id: IDL.Principal,\n  });\n  const node_metrics = IDL.Record({\n    num_block_failures_total: IDL.Nat64,\n    node_id: IDL.Principal,\n    num_blocks_total: IDL.Nat64,\n  });\n  const node_metrics_history_result = IDL.Vec(\n    IDL.Record({\n      timestamp_nanos: IDL.Nat64,\n      node_metrics: IDL.Vec(node_metrics),\n    }),\n  );\n  const provisional_create_canister_with_cycles_args = IDL.Record({\n    settings: IDL.Opt(canister_settings),\n    specified_id: IDL.Opt(canister_id),\n    amount: IDL.Opt(IDL.Nat),\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const provisional_create_canister_with_cycles_result = IDL.Record({\n    canister_id: canister_id,\n  });\n  const provisional_top_up_canister_args = IDL.Record({\n    canister_id: canister_id,\n    amount: IDL.Nat,\n  });\n  const raw_rand_result = IDL.Vec(IDL.Nat8);\n  const sign_with_ecdsa_args = IDL.Record({\n    key_id: IDL.Record({ name: IDL.Text, curve: ecdsa_curve }),\n    derivation_path: IDL.Vec(IDL.Vec(IDL.Nat8)),\n    message_hash: IDL.Vec(IDL.Nat8),\n  });\n  const sign_with_ecdsa_result = IDL.Record({\n    signature: IDL.Vec(IDL.Nat8),\n  });\n  const start_canister_args = IDL.Record({ canister_id: canister_id });\n  const stop_canister_args = IDL.Record({ canister_id: canister_id });\n  const stored_chunks_args = IDL.Record({ canister_id: canister_id });\n  const stored_chunks_result = IDL.Vec(chunk_hash);\n  const uninstall_code_args = IDL.Record({\n    canister_id: canister_id,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const update_settings_args = IDL.Record({\n    canister_id: IDL.Principal,\n    settings: canister_settings,\n    sender_canister_version: IDL.Opt(IDL.Nat64),\n  });\n  const upload_chunk_args = IDL.Record({\n    chunk: IDL.Vec(IDL.Nat8),\n    canister_id: IDL.Principal,\n  });\n  const upload_chunk_result = chunk_hash;\n  return IDL.Service({\n    bitcoin_get_balance: IDL.Func([bitcoin_get_balance_args], [bitcoin_get_balance_result], []),\n    bitcoin_get_balance_query: IDL.Func(\n      [bitcoin_get_balance_query_args],\n      [bitcoin_get_balance_query_result],\n      ['query'],\n    ),\n    bitcoin_get_current_fee_percentiles: IDL.Func(\n      [bitcoin_get_current_fee_percentiles_args],\n      [bitcoin_get_current_fee_percentiles_result],\n      [],\n    ),\n    bitcoin_get_utxos: IDL.Func([bitcoin_get_utxos_args], [bitcoin_get_utxos_result], []),\n    bitcoin_get_utxos_query: IDL.Func(\n      [bitcoin_get_utxos_query_args],\n      [bitcoin_get_utxos_query_result],\n      ['query'],\n    ),\n    bitcoin_send_transaction: IDL.Func([bitcoin_send_transaction_args], [], []),\n    canister_info: IDL.Func([canister_info_args], [canister_info_result], []),\n    canister_status: IDL.Func([canister_status_args], [canister_status_result], []),\n    clear_chunk_store: IDL.Func([clear_chunk_store_args], [], []),\n    create_canister: IDL.Func([create_canister_args], [create_canister_result], []),\n    delete_canister: IDL.Func([delete_canister_args], [], []),\n    deposit_cycles: IDL.Func([deposit_cycles_args], [], []),\n    ecdsa_public_key: IDL.Func([ecdsa_public_key_args], [ecdsa_public_key_result], []),\n    fetch_canister_logs: IDL.Func(\n      [fetch_canister_logs_args],\n      [fetch_canister_logs_result],\n      ['query'],\n    ),\n    http_request: IDL.Func([http_request_args], [http_request_result], []),\n    install_chunked_code: IDL.Func([install_chunked_code_args], [], []),\n    install_code: IDL.Func([install_code_args], [], []),\n    node_metrics_history: IDL.Func([node_metrics_history_args], [node_metrics_history_result], []),\n    provisional_create_canister_with_cycles: IDL.Func(\n      [provisional_create_canister_with_cycles_args],\n      [provisional_create_canister_with_cycles_result],\n      [],\n    ),\n    provisional_top_up_canister: IDL.Func([provisional_top_up_canister_args], [], []),\n    raw_rand: IDL.Func([], [raw_rand_result], []),\n    sign_with_ecdsa: IDL.Func([sign_with_ecdsa_args], [sign_with_ecdsa_result], []),\n    start_canister: IDL.Func([start_canister_args], [], []),\n    stop_canister: IDL.Func([stop_canister_args], [], []),\n    stored_chunks: IDL.Func([stored_chunks_args], [stored_chunks_result], []),\n    uninstall_code: IDL.Func([uninstall_code_args], [], []),\n    update_settings: IDL.Func([update_settings_args], [], []),\n    upload_chunk: IDL.Func([upload_chunk_args], [upload_chunk_result], []),\n  });\n};\n", "import { Buffer } from 'buffer/';\nimport {\n  Agent,\n  getDefaultAgent,\n  HttpDetailsResponse,\n  QueryResponseRejected,\n  QueryResponseStatus,\n  ReplicaRejectCode,\n  SubmitResponse,\n} from './agent';\nimport { AgentError } from './errors';\nimport { IDL } from '@dfinity/candid';\nimport { pollForResponse, PollStrategyFactory, strategy } from './polling';\nimport { Principal } from '@dfinity/principal';\nimport { RequestId } from './request_id';\nimport { toHex } from './utils/buffer';\nimport { CreateCertificateOptions } from './certificate';\nimport managementCanisterIdl from './canisters/management_idl';\nimport _SERVICE, { canister_settings } from './canisters/management_service';\n\nexport class ActorCallError extends AgentError {\n  constructor(\n    public readonly canisterId: Principal,\n    public readonly methodName: string,\n    public readonly type: 'query' | 'update',\n    public readonly props: Record<string, string>,\n  ) {\n    super(\n      [\n        `Call failed:`,\n        `  Canister: ${canisterId.toText()}`,\n        `  Method: ${methodName} (${type})`,\n        ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n      ].join('\\n'),\n    );\n  }\n}\n\nexport class QueryCallRejectedError extends ActorCallError {\n  constructor(\n    canisterId: Principal,\n    methodName: string,\n    public readonly result: QueryResponseRejected,\n  ) {\n    super(canisterId, methodName, 'query', {\n      Status: result.status,\n      Code: ReplicaRejectCode[result.reject_code] ?? `Unknown Code \"${result.reject_code}\"`,\n      Message: result.reject_message,\n    });\n  }\n}\n\nexport class UpdateCallRejectedError extends ActorCallError {\n  constructor(\n    canisterId: Principal,\n    methodName: string,\n    public readonly requestId: RequestId,\n    public readonly response: SubmitResponse['response'],\n  ) {\n    super(canisterId, methodName, 'update', {\n      'Request ID': toHex(requestId),\n      ...(response.body\n        ? {\n            ...(response.body.error_code\n              ? {\n                  'Error code': response.body.error_code,\n                }\n              : {}),\n            'Reject code': String(response.body.reject_code),\n            'Reject message': response.body.reject_message,\n          }\n        : {\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n          }),\n    });\n  }\n}\n\n/**\n * Configuration to make calls to the Replica.\n */\nexport interface CallConfig {\n  /**\n   * An agent to use in this call, otherwise the actor or call will try to discover the\n   * agent to use.\n   */\n  agent?: Agent;\n\n  /**\n   * A polling strategy factory that dictates how much and often we should poll the\n   * read_state endpoint to get the result of an update call.\n   */\n  pollingStrategyFactory?: PollStrategyFactory;\n\n  /**\n   * The canister ID of this Actor.\n   */\n  canisterId?: string | Principal;\n\n  /**\n   * The effective canister ID. This should almost always be ignored.\n   */\n  effectiveCanisterId?: Principal;\n}\n\n/**\n * Configuration that can be passed to customize the Actor behaviour.\n */\nexport interface ActorConfig extends CallConfig {\n  /**\n   * The Canister ID of this Actor. This is required for an Actor.\n   */\n  canisterId: string | Principal;\n\n  /**\n   * An override function for update calls' CallConfig. This will be called on every calls.\n   */\n  callTransform?(\n    methodName: string,\n    args: unknown[],\n    callConfig: CallConfig,\n  ): Partial<CallConfig> | void;\n\n  /**\n   * An override function for query calls' CallConfig. This will be called on every query.\n   */\n  queryTransform?(\n    methodName: string,\n    args: unknown[],\n    callConfig: CallConfig,\n  ): Partial<CallConfig> | void;\n\n  /**\n   * Polyfill for BLS Certificate verification in case wasm is not supported\n   */\n  blsVerify?: CreateCertificateOptions['blsVerify'];\n}\n\n// TODO: move this to proper typing when Candid support TypeScript.\n/**\n * A subclass of an actor. Actor class itself is meant to be a based class.\n */\nexport type ActorSubclass<T = Record<string, ActorMethod>> = Actor & T;\n\n/**\n * An actor method type, defined for each methods of the actor service.\n */\nexport interface ActorMethod<Args extends unknown[] = unknown[], Ret = unknown> {\n  (...args: Args): Promise<Ret>;\n  withOptions(options: CallConfig): (...args: Args) => Promise<Ret>;\n}\n\n/**\n * An actor method type, defined for each methods of the actor service.\n */\nexport interface ActorMethodWithHttpDetails<Args extends unknown[] = unknown[], Ret = unknown>\n  extends ActorMethod {\n  (...args: Args): Promise<{ httpDetails: HttpDetailsResponse; result: Ret }>;\n}\n\nexport type FunctionWithArgsAndReturn<Args extends unknown[] = unknown[], Ret = unknown> = (\n  ...args: Args\n) => Ret;\n\n// Update all entries of T with the extra information from ActorMethodWithInfo\nexport type ActorMethodMappedWithHttpDetails<T> = {\n  [K in keyof T]: T[K] extends FunctionWithArgsAndReturn<infer Args, infer Ret>\n    ? ActorMethodWithHttpDetails<Args, Ret>\n    : never;\n};\n\n/**\n * The mode used when installing a canister.\n */\nexport type CanisterInstallMode =\n  | {\n      reinstall: null;\n    }\n  | {\n      upgrade:\n        | []\n        | [\n            {\n              skip_pre_upgrade: [] | [boolean];\n            },\n          ];\n    }\n  | {\n      install: null;\n    };\n\n/**\n * Internal metadata for actors. It's an enhanced version of ActorConfig with\n * some fields marked as required (as they are defaulted) and canisterId as\n * a Principal type.\n */\ninterface ActorMetadata {\n  service: IDL.ServiceClass;\n  agent?: Agent;\n  config: ActorConfig;\n}\n\nconst metadataSymbol = Symbol.for('ic-agent-metadata');\n\nexport interface CreateActorClassOpts {\n  httpDetails?: boolean;\n}\n\ninterface CreateCanisterSettings {\n  freezing_threshold?: bigint;\n  controllers?: Array<Principal>;\n  memory_allocation?: bigint;\n  compute_allocation?: bigint;\n}\n\n/**\n * An actor base class. An actor is an object containing only functions that will\n * return a promise. These functions are derived from the IDL definition.\n */\nexport class Actor {\n  /**\n   * Get the Agent class this Actor would call, or undefined if the Actor would use\n   * the default agent (global.ic.agent).\n   * @param actor The actor to get the agent of.\n   */\n  public static agentOf(actor: Actor): Agent | undefined {\n    return actor[metadataSymbol].config.agent;\n  }\n\n  /**\n   * Get the interface of an actor, in the form of an instance of a Service.\n   * @param actor The actor to get the interface of.\n   */\n  public static interfaceOf(actor: Actor): IDL.ServiceClass {\n    return actor[metadataSymbol].service;\n  }\n\n  public static canisterIdOf(actor: Actor): Principal {\n    return Principal.from(actor[metadataSymbol].config.canisterId);\n  }\n\n  public static async install(\n    fields: {\n      module: ArrayBuffer;\n      mode?: CanisterInstallMode;\n      arg?: ArrayBuffer;\n    },\n    config: ActorConfig,\n  ): Promise<void> {\n    const mode = fields.mode === undefined ? { install: null } : fields.mode;\n    // Need to transform the arg into a number array.\n    const arg = fields.arg ? [...new Uint8Array(fields.arg)] : [];\n    // Same for module.\n    const wasmModule = [...new Uint8Array(fields.module)];\n    const canisterId =\n      typeof config.canisterId === 'string'\n        ? Principal.fromText(config.canisterId)\n        : config.canisterId;\n\n    await getManagementCanister(config).install_code({\n      mode,\n      arg,\n      wasm_module: wasmModule,\n      canister_id: canisterId,\n      sender_canister_version: [],\n    });\n  }\n\n  public static async createCanister(\n    config?: CallConfig,\n    settings?: CreateCanisterSettings,\n  ): Promise<Principal> {\n    function settingsToCanisterSettings(settings: CreateCanisterSettings): [canister_settings] {\n      return [\n        {\n          controllers: settings.controllers ? [settings.controllers] : [],\n          compute_allocation: settings.compute_allocation ? [settings.compute_allocation] : [],\n          freezing_threshold: settings.freezing_threshold ? [settings.freezing_threshold] : [],\n          memory_allocation: settings.memory_allocation ? [settings.memory_allocation] : [],\n          reserved_cycles_limit: [],\n          log_visibility: [],\n        },\n      ];\n    }\n\n    const { canister_id: canisterId } = await getManagementCanister(\n      config || {},\n    ).provisional_create_canister_with_cycles({\n      amount: [],\n      settings: settingsToCanisterSettings(settings || {}),\n      specified_id: [],\n      sender_canister_version: [],\n    });\n\n    return canisterId;\n  }\n\n  public static async createAndInstallCanister(\n    interfaceFactory: IDL.InterfaceFactory,\n    fields: {\n      module: ArrayBuffer;\n      arg?: ArrayBuffer;\n    },\n    config?: CallConfig,\n  ): Promise<ActorSubclass> {\n    const canisterId = await this.createCanister(config);\n    await this.install(\n      {\n        ...fields,\n      },\n      { ...config, canisterId },\n    );\n\n    return this.createActor(interfaceFactory, { ...config, canisterId });\n  }\n\n  public static createActorClass(\n    interfaceFactory: IDL.InterfaceFactory,\n    options?: CreateActorClassOpts,\n  ): ActorConstructor {\n    const service = interfaceFactory({ IDL });\n\n    class CanisterActor extends Actor {\n      [x: string]: ActorMethod;\n\n      constructor(config: ActorConfig) {\n        if (!config.canisterId)\n          throw new AgentError(\n            `Canister ID is required, but received ${typeof config.canisterId} instead. If you are using automatically generated declarations, this may be because your application is not setting the canister ID in process.env correctly.`,\n          );\n        const canisterId =\n          typeof config.canisterId === 'string'\n            ? Principal.fromText(config.canisterId)\n            : config.canisterId;\n\n        super({\n          config: {\n            ...DEFAULT_ACTOR_CONFIG,\n            ...config,\n            canisterId,\n          },\n          service,\n        });\n\n        for (const [methodName, func] of service._fields) {\n          if (options?.httpDetails) {\n            func.annotations.push(ACTOR_METHOD_WITH_HTTP_DETAILS);\n          }\n\n          this[methodName] = _createActorMethod(this, methodName, func, config.blsVerify);\n        }\n      }\n    }\n\n    return CanisterActor;\n  }\n\n  public static createActor<T = Record<string, ActorMethod>>(\n    interfaceFactory: IDL.InterfaceFactory,\n    configuration: ActorConfig,\n  ): ActorSubclass<T> {\n    if (!configuration.canisterId) {\n      throw new AgentError(\n        `Canister ID is required, but received ${typeof configuration.canisterId} instead. If you are using automatically generated declarations, this may be because your application is not setting the canister ID in process.env correctly.`,\n      );\n    }\n    return new (this.createActorClass(interfaceFactory))(\n      configuration,\n    ) as unknown as ActorSubclass<T>;\n  }\n\n  public static createActorWithHttpDetails<T = Record<string, ActorMethod>>(\n    interfaceFactory: IDL.InterfaceFactory,\n    configuration: ActorConfig,\n  ): ActorSubclass<ActorMethodMappedWithHttpDetails<T>> {\n    return new (this.createActorClass(interfaceFactory, { httpDetails: true }))(\n      configuration,\n    ) as unknown as ActorSubclass<ActorMethodMappedWithHttpDetails<T>>;\n  }\n\n  private [metadataSymbol]: ActorMetadata;\n\n  protected constructor(metadata: ActorMetadata) {\n    this[metadataSymbol] = Object.freeze(metadata);\n  }\n}\n\n// IDL functions can have multiple return values, so decoding always\n// produces an array. Ensure that functions with single or zero return\n// values behave as expected.\nfunction decodeReturnValue(types: IDL.Type[], msg: ArrayBuffer) {\n  const returnValues = IDL.decode(types, Buffer.from(msg));\n  switch (returnValues.length) {\n    case 0:\n      return undefined;\n    case 1:\n      return returnValues[0];\n    default:\n      return returnValues;\n  }\n}\n\nconst DEFAULT_ACTOR_CONFIG = {\n  pollingStrategyFactory: strategy.defaultStrategy,\n};\n\nexport type ActorConstructor = new (config: ActorConfig) => ActorSubclass;\n\nexport const ACTOR_METHOD_WITH_HTTP_DETAILS = 'http-details';\n\nfunction _createActorMethod(\n  actor: Actor,\n  methodName: string,\n  func: IDL.FuncClass,\n  blsVerify?: CreateCertificateOptions['blsVerify'],\n): ActorMethod {\n  let caller: (options: CallConfig, ...args: unknown[]) => Promise<unknown>;\n  if (func.annotations.includes('query') || func.annotations.includes('composite_query')) {\n    caller = async (options, ...args) => {\n      // First, if there's a config transformation, call it.\n      options = {\n        ...options,\n        ...actor[metadataSymbol].config.queryTransform?.(methodName, args, {\n          ...actor[metadataSymbol].config,\n          ...options,\n        }),\n      };\n\n      const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n      const cid = Principal.from(options.canisterId || actor[metadataSymbol].config.canisterId);\n      const arg = IDL.encode(func.argTypes, args);\n\n      const result = await agent.query(cid, {\n        methodName,\n        arg,\n        effectiveCanisterId: options.effectiveCanisterId,\n      });\n\n      switch (result.status) {\n        case QueryResponseStatus.Rejected:\n          throw new QueryCallRejectedError(cid, methodName, result);\n\n        case QueryResponseStatus.Replied:\n          return func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS)\n            ? {\n                httpDetails: result.httpDetails,\n                result: decodeReturnValue(func.retTypes, result.reply.arg),\n              }\n            : decodeReturnValue(func.retTypes, result.reply.arg);\n      }\n    };\n  } else {\n    caller = async (options, ...args) => {\n      // First, if there's a config transformation, call it.\n      options = {\n        ...options,\n        ...actor[metadataSymbol].config.callTransform?.(methodName, args, {\n          ...actor[metadataSymbol].config,\n          ...options,\n        }),\n      };\n\n      const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n      const { canisterId, effectiveCanisterId, pollingStrategyFactory } = {\n        ...DEFAULT_ACTOR_CONFIG,\n        ...actor[metadataSymbol].config,\n        ...options,\n      };\n      const cid = Principal.from(canisterId);\n      const ecid = effectiveCanisterId !== undefined ? Principal.from(effectiveCanisterId) : cid;\n      const arg = IDL.encode(func.argTypes, args);\n      const { requestId, response } = await agent.call(cid, {\n        methodName,\n        arg,\n        effectiveCanisterId: ecid,\n      });\n\n      if (!response.ok || response.body /* IC-1462 */) {\n        throw new UpdateCallRejectedError(cid, methodName, requestId, response);\n      }\n\n      const pollStrategy = pollingStrategyFactory();\n      const responseBytes = await pollForResponse(agent, ecid, requestId, pollStrategy, blsVerify);\n      const shouldIncludeHttpDetails = func.annotations.includes(ACTOR_METHOD_WITH_HTTP_DETAILS);\n\n      if (responseBytes !== undefined) {\n        return shouldIncludeHttpDetails\n          ? {\n              httpDetails: response,\n              result: decodeReturnValue(func.retTypes, responseBytes),\n            }\n          : decodeReturnValue(func.retTypes, responseBytes);\n      } else if (func.retTypes.length === 0) {\n        return shouldIncludeHttpDetails\n          ? {\n              httpDetails: response,\n              result: undefined,\n            }\n          : undefined;\n      } else {\n        throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);\n      }\n    };\n  }\n\n  const handler = (...args: unknown[]) => caller({}, ...args);\n  handler.withOptions =\n    (options: CallConfig) =>\n    (...args: unknown[]) =>\n      caller(options, ...args);\n  return handler as ActorMethod;\n}\n\nexport type ManagementCanisterRecord = _SERVICE;\n\n/**\n * Create a management canister actor\n * @param config - a CallConfig\n */\nexport function getManagementCanister(config: CallConfig): ActorSubclass<ManagementCanisterRecord> {\n  function transform(\n    _methodName: string,\n    args: Record<string, unknown> & { canister_id: string }[],\n  ) {\n    if (config.effectiveCanisterId) {\n      return { effectiveCanisterId: Principal.from(config.effectiveCanisterId) };\n    }\n    const first = args[0];\n    let effectiveCanisterId = Principal.fromHex('');\n    if (first && typeof first === 'object' && first.canister_id) {\n      effectiveCanisterId = Principal.from(first.canister_id as unknown);\n    }\n    return { effectiveCanisterId };\n  }\n\n  return Actor.createActor<ManagementCanisterRecord>(managementCanisterIdl, {\n    ...config,\n    canisterId: Principal.fromHex(''),\n    ...{\n      callTransform: transform,\n      queryTransform: transform,\n    },\n  });\n}\n", "/**\n * This file is generated from the candid for asset management.\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport default ({ IDL }) => {\n  return IDL.Service({\n    retrieve: IDL.Func([IDL.Text], [IDL.Vec(IDL.Nat8)], ['query']),\n    store: IDL.Func([IDL.Text, IDL.Vec(IDL.Nat8)], [], []),\n  });\n};\n", "import { Actor, ActorConfig, ActorSubclass, CallConfig } from '../actor';\nimport assetCanister from './asset_idl';\n\nexport interface AssetCanisterRecord {\n  store(path: string, content: number[]): Promise<void>;\n  retrieve(path: string): Promise<number[]>;\n}\n\n/**\n * Create a management canister actor.\n * @param config\n */\nexport function createAssetCanisterActor(config: ActorConfig) {\n  return Actor.createActor<AssetCanisterRecord>(assetCanister, config);\n}\n", "import { Principal } from '@dfinity/principal';\nimport * as CanisterStatus from './canisterStatus/index';\nimport { IDL } from '@dfinity/candid';\nimport { HttpAgent } from './agent/http';\nimport { Actor, ActorSubclass } from './actor';\n\n/**\n * Retrieves the Candid interface for the specified canister.\n *\n * @param agent The agent to use for the request (usually an `HttpAgent`)\n * @param canisterId A string corresponding to the canister ID\n * @returns Candid source code\n */\nexport async function fetchCandid(canisterId: string, agent?: HttpAgent): Promise<string> {\n  if (!agent) {\n    // Create an anonymous `HttpAgent` (adapted from Candid UI)\n    agent = new HttpAgent();\n    if (agent.isLocal()) {\n      agent.fetchRootKey();\n    }\n  }\n\n  // Attempt to use canister metadata\n  const status = await CanisterStatus.request({\n    agent,\n    canisterId: Principal.fromText(canisterId),\n    paths: ['candid'],\n  });\n  const candid = status.get('candid') as string | undefined;\n  if (candid) {\n    return candid;\n  }\n\n  // Use `__get_candid_interface_tmp_hack` for canisters without Candid metadata\n  const tmpHackInterface: IDL.InterfaceFactory = ({ IDL }) =>\n    IDL.Service({\n      __get_candid_interface_tmp_hack: IDL.Func([], [IDL.Text], ['query']),\n    });\n  const actor: ActorSubclass = Actor.createActor(tmpHackInterface, { agent, canisterId });\n  return (await actor.__get_candid_interface_tmp_hack()) as string;\n}\n", "import { ActorSubclass } from './actor';\n\nexport * from './actor';\nexport * from './agent';\nexport * from './agent/http/transforms';\nexport * from './agent/http/types';\nexport * from './auth';\nexport * from './canisters/asset';\nexport * from './certificate';\nexport * from './der';\nexport * from './fetch_candid';\nexport * from './public_key';\nexport * from './request_id';\nexport * from './utils/bls';\nexport * from './utils/buffer';\nexport * from './utils/random';\nexport * as polling from './polling';\nimport * as CanisterStatus from './canisterStatus';\nexport * as CanisterStatus from './canisterStatus';\n/**\n * The CanisterStatus utility is used to request structured data directly from the IC public API. This data can be accessed using agent.readState, but CanisterStatus provides a helpful abstraction with some known paths.\n *\n * You can request a canisters Controllers, ModuleHash, Candid interface, Subnet, or Time, or provide a custom path {@link CanisterStatus.CustomPath} and pass arbitrary buffers for valid paths identified in https://internetcomputer.org/docs/current/references/ic-interface-spec.\n *\n * The primary method for this namespace is {@link CanisterStatus.request}\n */\n\nimport { Agent, HttpAgent } from './agent';\nimport { IDL } from '@dfinity/candid';\n\nexport * as Cbor from './cbor';\n\nexport interface GlobalInternetComputer {\n  ic: {\n    agent: Agent;\n    HttpAgent: typeof HttpAgent;\n    IDL: typeof IDL;\n    /**\n     * Simple advertisement of features in whoever is managing this `globalThis.ic`.\n     * Use Case\n     * - Scripts that know they need an ic feature can detect using this and, if not present\n     *   (e.g. old bootstrap version), they can dynamically include their own and continue\n     *   operating (e.g. polyfill).\n     *   This is useful when adding features to bootstrap. You can still deploy your canister to\n     *   an ic with old bootstrap, then just dynamically reload your own new-version bootstrap if\n     *   needed.\n     */\n    features?: {\n      /** This is falsy if authn isn't supported at all */\n      authentication?: boolean;\n    };\n    /**\n     * The Actor for the canister being used for the frontend. Normally should correspond to the\n     * canister represented by the canister id in the URL.\n     *\n     * It does not have any functions configured.\n     *\n     * If a canister ID could not be found, no actor were created and this is undefined.\n     */\n    canister: ActorSubclass | undefined;\n  };\n}\n", "import { bufEquals } from '@dfinity/agent';\nimport {\n  DerEncodedPublicKey,\n  KeyPair,\n  PublicKey,\n  Signature,\n  SignIdentity,\n  uint8ToBuf,\n  ED25519_OID,\n  unwrapDER,\n  wrapDER,\n  fromHex,\n  toHex,\n  bufFromBufLike,\n} from '@dfinity/agent';\nimport { ed25519 } from '@noble/curves/ed25519';\n\ndeclare type KeyLike = PublicKey | DerEncodedPublicKey | ArrayBuffer | ArrayBufferView;\n\nfunction isObject(value: unknown) {\n  return value !== null && typeof value === 'object';\n}\n\nexport class Ed25519PublicKey implements PublicKey {\n  /**\n   * Construct Ed25519PublicKey from an existing PublicKey\n   * @param {unknown} maybeKey - existing PublicKey, ArrayBuffer, DerEncodedPublicKey, or hex string\n   * @returns {Ed25519PublicKey} Instance of Ed25519PublicKey\n   */\n  public static from(maybeKey: unknown): Ed25519PublicKey {\n    if (typeof maybeKey === 'string') {\n      const key = fromHex(maybeKey);\n      return this.fromRaw(key);\n    } else if (isObject(maybeKey)) {\n      const key = maybeKey as KeyLike;\n      if (isObject(key) && Object.hasOwnProperty.call(key, '__derEncodedPublicKey__')) {\n        return this.fromDer(key as DerEncodedPublicKey);\n      } else if (ArrayBuffer.isView(key)) {\n        const view = key as ArrayBufferView;\n        return this.fromRaw(bufFromBufLike(view.buffer));\n      } else if (key instanceof ArrayBuffer) {\n        return this.fromRaw(key);\n      } else if ('rawKey' in key) {\n        return this.fromRaw(key.rawKey as ArrayBuffer);\n      } else if ('derKey' in key) {\n        return this.fromDer(key.derKey as DerEncodedPublicKey);\n      } else if ('toDer' in key) {\n        return this.fromDer(key.toDer() as ArrayBuffer);\n      }\n    }\n    throw new Error('Cannot construct Ed25519PublicKey from the provided key.');\n  }\n\n  public static fromRaw(rawKey: ArrayBuffer): Ed25519PublicKey {\n    return new Ed25519PublicKey(rawKey);\n  }\n\n  public static fromDer(derKey: DerEncodedPublicKey): Ed25519PublicKey {\n    return new Ed25519PublicKey(this.derDecode(derKey));\n  }\n\n  // The length of Ed25519 public keys is always 32 bytes.\n  private static RAW_KEY_LENGTH = 32;\n\n  private static derEncode(publicKey: ArrayBuffer): DerEncodedPublicKey {\n    const key = wrapDER(publicKey, ED25519_OID).buffer as DerEncodedPublicKey;\n    key.__derEncodedPublicKey__ = undefined;\n    return key;\n  }\n\n  private static derDecode(key: DerEncodedPublicKey): ArrayBuffer {\n    const unwrapped = unwrapDER(key, ED25519_OID);\n    if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    return unwrapped;\n  }\n\n  #rawKey: ArrayBuffer;\n\n  public get rawKey(): ArrayBuffer {\n    return this.#rawKey;\n  }\n\n  #derKey: DerEncodedPublicKey;\n\n  public get derKey(): DerEncodedPublicKey {\n    return this.#derKey;\n  }\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  private constructor(key: ArrayBuffer) {\n    if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    this.#rawKey = key;\n    this.#derKey = Ed25519PublicKey.derEncode(key);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this.derKey;\n  }\n\n  public toRaw(): ArrayBuffer {\n    return this.rawKey;\n  }\n}\n\n/**\n * Ed25519KeyIdentity is an implementation of SignIdentity that uses Ed25519 keys. This class is used to sign and verify messages for an agent.\n */\nexport class Ed25519KeyIdentity extends SignIdentity {\n  /**\n   * Generate a new Ed25519KeyIdentity.\n   * @param seed a 32-byte seed for the private key. If not provided, a random seed will be generated.\n   * @returns Ed25519KeyIdentity\n   */\n  public static generate(seed?: Uint8Array): Ed25519KeyIdentity {\n\n    if (seed && seed.length !== 32) {\n      throw new Error('Ed25519 Seed needs to be 32 bytes long.');\n    }\n    if (!seed) seed = ed25519.utils.randomPrivateKey();\n    // Check if the seed is all zeros\n    if(bufEquals(seed, new Uint8Array(new Array(32).fill(0)))) {\n      console.warn('Seed is all zeros. This is not a secure seed. Please provide a seed with sufficient entropy if this is a production environment.');\n    }\n    const sk = new Uint8Array(32);\n    for (let i = 0; i < 32; i++) sk[i] = new Uint8Array(seed)[i];\n\n    const pk = ed25519.getPublicKey(sk);\n    return Ed25519KeyIdentity.fromKeyPair(pk, sk);\n  }\n\n  public static fromParsedJson(obj: JsonnableEd25519KeyIdentity): Ed25519KeyIdentity {\n    const [publicKeyDer, privateKeyRaw] = obj;\n    return new Ed25519KeyIdentity(\n      Ed25519PublicKey.fromDer(fromHex(publicKeyDer) as DerEncodedPublicKey),\n      fromHex(privateKeyRaw),\n    );\n  }\n\n  public static fromJSON(json: string): Ed25519KeyIdentity {\n    const parsed = JSON.parse(json);\n    if (Array.isArray(parsed)) {\n      if (typeof parsed[0] === 'string' && typeof parsed[1] === 'string') {\n        return this.fromParsedJson([parsed[0], parsed[1]]);\n      } else {\n        throw new Error('Deserialization error: JSON must have at least 2 items.');\n      }\n    }\n    throw new Error(`Deserialization error: Invalid JSON type for string: ${JSON.stringify(json)}`);\n  }\n\n  public static fromKeyPair(publicKey: ArrayBuffer, privateKey: ArrayBuffer): Ed25519KeyIdentity {\n    return new Ed25519KeyIdentity(Ed25519PublicKey.fromRaw(publicKey), privateKey);\n  }\n\n  public static fromSecretKey(secretKey: ArrayBuffer): Ed25519KeyIdentity {\n    const publicKey = ed25519.getPublicKey(new Uint8Array(secretKey));\n    return Ed25519KeyIdentity.fromKeyPair(publicKey, secretKey);\n  }\n\n  #publicKey: Ed25519PublicKey;\n  #privateKey: Uint8Array;\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  protected constructor(publicKey: PublicKey, privateKey: ArrayBuffer) {\n    super();\n    this.#publicKey = Ed25519PublicKey.from(publicKey);\n    this.#privateKey = new Uint8Array(privateKey);\n  }\n\n  /**\n   * Serialize this key to JSON.\n   */\n  public toJSON(): JsonnableEd25519KeyIdentity {\n    return [toHex(this.#publicKey.toDer()), toHex(this.#privateKey)];\n  }\n\n  /**\n   * Return a copy of the key pair.\n   */\n  public getKeyPair(): KeyPair {\n    return {\n      secretKey: this.#privateKey,\n      publicKey: this.#publicKey,\n    };\n  }\n\n  /**\n   * Return the public key.\n   */\n  public getPublicKey(): Required<PublicKey> {\n    return this.#publicKey;\n  }\n\n  /**\n   * Signs a blob of data, with this identity's private key.\n   * @param challenge - challenge to sign with this identity's secretKey, producing a signature\n   */\n  public async sign(challenge: ArrayBuffer): Promise<Signature> {\n    const blob = new Uint8Array(challenge);\n    // Some implementations of Ed25519 private keys append a public key to the end of the private key. We only want the private key.\n    const signature = uint8ToBuf(ed25519.sign(blob, this.#privateKey.slice(0, 32)));\n    // add { __signature__: void; } to the signature to make it compatible with the agent\n\n    Object.defineProperty(signature, '__signature__', {\n      enumerable: false,\n      value: undefined,\n    });\n\n    return signature as Signature;\n  }\n\n  /**\n   * Verify\n   * @param sig - signature to verify\n   * @param msg - message to verify\n   * @param pk - public key\n   * @returns - true if the signature is valid, false otherwise\n   */\n  public static verify(\n    sig: ArrayBuffer | Uint8Array | string,\n    msg: ArrayBuffer | Uint8Array | string,\n    pk: ArrayBuffer | Uint8Array | string,\n  ) {\n    const [signature, message, publicKey] = [sig, msg, pk].map(x => {\n      if (typeof x === 'string') {\n        x = fromHex(x);\n      }\n      if (x instanceof Uint8Array) {\n        x = x.buffer;\n      }\n      return new Uint8Array(x);\n    });\n    return ed25519.verify(message, signature, publicKey);\n  }\n}\n\ntype PublicKeyHex = string;\ntype SecretKeyHex = string;\nexport type JsonnableEd25519KeyIdentity = [PublicKeyHex, SecretKeyHex];\n", "import { DerEncodedPublicKey, PublicKey, Signature, SignIdentity } from '@dfinity/agent';\n\n/**\n * Options used in a {@link ECDSAKeyIdentity}\n */\nexport type CryptoKeyOptions = {\n  extractable?: boolean;\n  keyUsages?: KeyUsage[];\n  subtleCrypto?: SubtleCrypto;\n};\n\nexport class CryptoError extends Error {\n  constructor(public readonly message: string) {\n    super(message);\n    Object.setPrototypeOf(this, CryptoError.prototype);\n  }\n}\n\nexport interface DerCryptoKey extends CryptoKey {\n  toDer: () => DerEncodedPublicKey;\n}\n\n/**\n * Utility method to ensure that a subtleCrypto implementation is provided or is available in the global context\n * @param subtleCrypto SubtleCrypto implementation\n * @returns subleCrypto\n */\nfunction _getEffectiveCrypto(subtleCrypto: CryptoKeyOptions['subtleCrypto']): SubtleCrypto {\n  if (typeof global !== 'undefined' && global['crypto'] && global['crypto']['subtle']) {\n    return global['crypto']['subtle'];\n  }\n  if (subtleCrypto) {\n    return subtleCrypto;\n  } else if (typeof crypto !== 'undefined' && crypto['subtle']) {\n    return crypto.subtle;\n  } else {\n    throw new CryptoError(\n      'Global crypto was not available and none was provided. Please inlcude a SubtleCrypto implementation. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto',\n    );\n  }\n}\n\n/**\n * An identity interface that wraps an ECDSA keypair using the P-256 named curve. Supports DER-encoding and decoding for agent calls\n */\nexport class ECDSAKeyIdentity extends SignIdentity {\n  /**\n   * Generates a randomly generated identity for use in calls to the Internet Computer.\n   * @param {CryptoKeyOptions} options optional settings\n   * @param {CryptoKeyOptions['extractable']} options.extractable - whether the key should allow itself to be used. Set to false for maximum security.\n   * @param {CryptoKeyOptions['keyUsages']} options.keyUsages - a list of key usages that the key can be used for\n   * @param {CryptoKeyOptions['subtleCrypto']} options.subtleCrypto interface\n   * @constructs ECDSAKeyIdentity\n   * @returns a {@link ECDSAKeyIdentity}\n   */\n  public static async generate(options?: CryptoKeyOptions): Promise<ECDSAKeyIdentity> {\n    const { extractable = false, keyUsages = ['sign', 'verify'], subtleCrypto } = options ?? {};\n    const effectiveCrypto = _getEffectiveCrypto(subtleCrypto);\n    const keyPair = await effectiveCrypto.generateKey(\n      {\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n      },\n      extractable,\n      keyUsages,\n    );\n    const derKey = (await effectiveCrypto.exportKey(\n      'spki',\n      keyPair.publicKey,\n    )) as DerEncodedPublicKey;\n\n    return new this(keyPair, derKey, effectiveCrypto);\n  }\n\n  /**\n   * generates an identity from a public and private key. Please ensure that you are generating these keys securely and protect the user's private key\n   * @param keyPair a CryptoKeyPair\n   * @param subtleCrypto - a SubtleCrypto interface in case one is not available globally\n   * @returns an {@link ECDSAKeyIdentity}\n   */\n  public static async fromKeyPair(\n    keyPair: CryptoKeyPair | { privateKey: CryptoKey; publicKey: CryptoKey },\n    subtleCrypto?: SubtleCrypto,\n  ): Promise<ECDSAKeyIdentity> {\n    const effectiveCrypto = _getEffectiveCrypto(subtleCrypto);\n    const derKey = (await effectiveCrypto.exportKey(\n      'spki',\n      keyPair.publicKey,\n    )) as DerEncodedPublicKey;\n    return new ECDSAKeyIdentity(keyPair, derKey, effectiveCrypto);\n  }\n\n  protected _derKey: DerEncodedPublicKey;\n  protected _keyPair: CryptoKeyPair;\n  protected _subtleCrypto: SubtleCrypto;\n\n  // `fromKeyPair` and `generate` should be used for instantiation, not this constructor.\n  protected constructor(\n    keyPair: CryptoKeyPair,\n    derKey: DerEncodedPublicKey,\n    subtleCrypto: SubtleCrypto,\n  ) {\n    super();\n    this._keyPair = keyPair;\n    this._derKey = derKey;\n    this._subtleCrypto = subtleCrypto;\n  }\n\n  /**\n   * Return the internally-used key pair.\n   * @returns a CryptoKeyPair\n   */\n  public getKeyPair(): CryptoKeyPair {\n    return this._keyPair;\n  }\n\n  /**\n   * Return the public key.\n   * @returns an {@link PublicKey & DerCryptoKey}\n   */\n  public getPublicKey(): PublicKey & DerCryptoKey {\n    const derKey = this._derKey;\n    const key: DerCryptoKey = Object.create(this._keyPair.publicKey);\n    key.toDer = function () {\n      return derKey;\n    };\n\n    return key;\n  }\n\n  /**\n   * Signs a blob of data, with this identity's private key.\n   * @param {ArrayBuffer} challenge - challenge to sign with this identity's secretKey, producing a signature\n   * @returns {Promise<Signature>} signature\n   */\n  public async sign(challenge: ArrayBuffer): Promise<Signature> {\n    const params: EcdsaParams = {\n      name: 'ECDSA',\n      hash: { name: 'SHA-256' },\n    };\n    this._keyPair.privateKey;\n    const signature = await this._subtleCrypto.sign(params, this._keyPair.privateKey, challenge);\n\n    return signature as Signature;\n  }\n}\n\nexport default ECDSAKeyIdentity;\n", "import { Identity, PublicKey } from '@dfinity/agent';\nimport { Principal } from '@dfinity/principal';\n\n/**\n * A partial delegated identity, representing a delegation chain and the public key that it targets\n */\nexport class PartialIdentity implements Identity {\n  #inner: PublicKey;\n\n  /**\n   * The raw public key of this identity.\n   */\n  get rawKey(): ArrayBuffer | undefined {\n    return this.#inner.rawKey;\n  }\n\n  /**\n   * The DER-encoded public key of this identity.\n   */\n  get derKey(): ArrayBuffer | undefined {\n    return this.#inner.derKey;\n  }\n\n  /**\n   * The DER-encoded public key of this identity.\n   */\n  public toDer(): ArrayBuffer {\n    return this.#inner.toDer();\n  }\n\n  /**\n   * The inner {@link PublicKey} used by this identity.\n   */\n  public getPublicKey(): PublicKey {\n    return this.#inner;\n  }\n\n  /**\n   * The {@link Principal} of this identity.\n   */\n  public getPrincipal(): Principal {\n    return Principal.from(this.#inner.rawKey);\n  }\n\n  /**\n   * Required for the Identity interface, but cannot implemented for just a public key.\n   */\n  public transformRequest(): Promise<never> {\n    return Promise.reject(\n      'Not implemented. You are attempting to use a partial identity to sign calls, but this identity only has access to the public key.To sign calls, use a DelegationIdentity instead.',\n    );\n  }\n\n  constructor(inner: PublicKey) {\n    this.#inner = inner;\n  }\n}\n", "import {\n  DerEncodedPublicKey,\n  fromHex,\n  HttpAgentRequest,\n  PublicKey,\n  requestIdOf,\n  Signature,\n  SignIdentity,\n  toHex,\n} from '@dfinity/agent';\nimport { Principal } from '@dfinity/principal';\nimport * as cbor from 'simple-cbor';\nimport { PartialIdentity } from './partial';\n\nconst domainSeparator = new TextEncoder().encode('\\x1Aic-request-auth-delegation');\nconst requestDomainSeparator = new TextEncoder().encode('\\x0Aic-request');\n\nfunction _parseBlob(value: unknown): ArrayBuffer {\n  if (typeof value !== 'string' || value.length < 64) {\n    throw new Error('Invalid public key.');\n  }\n\n  return fromHex(value);\n}\n\n/**\n * A single delegation object that is signed by a private key. This is constructed by\n * `DelegationChain.create()`.\n *\n * {@see DelegationChain}\n */\nexport class Delegation {\n  constructor(\n    public readonly pubkey: ArrayBuffer,\n    public readonly expiration: bigint,\n    public readonly targets?: Principal[],\n  ) {}\n\n  public toCBOR(): cbor.CborValue {\n    // Expiration field needs to be encoded as a u64 specifically.\n    return cbor.value.map({\n      pubkey: cbor.value.bytes(this.pubkey),\n      expiration: cbor.value.u64(this.expiration.toString(16), 16),\n      ...(this.targets && {\n        targets: cbor.value.array(this.targets.map(t => cbor.value.bytes(t.toUint8Array()))),\n      }),\n    });\n  }\n\n  public toJSON(): JsonnableDelegation {\n    // every string should be hex and once-de-hexed,\n    // discoverable what it is (e.g. de-hex to get JSON with a 'type' property, or de-hex to DER\n    // with an OID). After de-hex, if it's not obvious what it is, it's an ArrayBuffer.\n    return {\n      expiration: this.expiration.toString(16),\n      pubkey: toHex(this.pubkey),\n      ...(this.targets && { targets: this.targets.map(p => p.toHex()) }),\n    };\n  }\n}\n\n/**\n * Type of ReturnType<Delegation.toJSON>.\n * The goal here is to stringify all non-JSON-compatible types to some bytes representation we can\n * stringify as hex.\n * (Hex shouldn't be ambiguous ever, because you can encode as DER with semantic OIDs).\n */\ninterface JsonnableDelegation {\n  // A BigInt of Nanoseconds since epoch as hex\n  expiration: string;\n  // Hexadecimal representation of the DER public key.\n  pubkey: string;\n  // Array of strings, where each string is hex of principal blob (*NOT* textual representation).\n  targets?: string[];\n}\n\n/**\n * A signed delegation, which lends its identity to the public key in the delegation\n * object. This is constructed by `DelegationChain.create()`.\n *\n * {@see DelegationChain}\n */\nexport interface SignedDelegation {\n  delegation: Delegation;\n  signature: Signature;\n}\n\n/**\n * Sign a single delegation object for a period of time.\n * @param from The identity that lends its delegation.\n * @param to The identity that receives the delegation.\n * @param expiration An expiration date for this delegation.\n * @param targets Limit this delegation to the target principals.\n */\nasync function _createSingleDelegation(\n  from: SignIdentity,\n  to: PublicKey,\n  expiration: Date,\n  targets?: Principal[],\n): Promise<SignedDelegation> {\n  const delegation: Delegation = new Delegation(\n    to.toDer(),\n    BigInt(+expiration) * BigInt(1000000), // In nanoseconds.\n    targets,\n  );\n  // The signature is calculated by signing the concatenation of the domain separator\n  // and the message.\n  // Note: To ensure Safari treats this as a user gesture, ensure to not use async methods\n  // besides the actualy webauthn functionality (such as `sign`). Safari will de-register\n  // a user gesture if you await an async call thats not fetch, xhr, or setTimeout.\n  const challenge = new Uint8Array([\n    ...domainSeparator,\n    ...new Uint8Array(requestIdOf(delegation)),\n  ]);\n  const signature = await from.sign(challenge);\n\n  return {\n    delegation,\n    signature,\n  };\n}\n\nexport interface JsonnableDelegationChain {\n  publicKey: string;\n  delegations: Array<{\n    signature: string;\n    delegation: {\n      pubkey: string;\n      expiration: string;\n      targets?: string[];\n    };\n  }>;\n}\n\n/**\n * A chain of delegations. This is JSON Serializable.\n * This is the object to serialize and pass to a DelegationIdentity. It does not keep any\n * private keys.\n */\nexport class DelegationChain {\n  /**\n   * Create a delegation chain between two (or more) keys. By default, the expiration time\n   * will be very short (15 minutes).\n   *\n   * To build a chain of more than 2 identities, this function needs to be called multiple times,\n   * passing the previous delegation chain into the options argument. For example:\n   * @example\n   * const rootKey = createKey();\n   * const middleKey = createKey();\n   * const bottomeKey = createKey();\n   *\n   * const rootToMiddle = await DelegationChain.create(\n   *   root, middle.getPublicKey(), Date.parse('2100-01-01'),\n   * );\n   * const middleToBottom = await DelegationChain.create(\n   *   middle, bottom.getPublicKey(), Date.parse('2100-01-01'), { previous: rootToMiddle },\n   * );\n   *\n   * // We can now use a delegation identity that uses the delegation above:\n   * const identity = DelegationIdentity.fromDelegation(bottomKey, middleToBottom);\n   * @param from The identity that will delegate.\n   * @param to The identity that gets delegated. It can now sign messages as if it was the\n   *           identity above.\n   * @param expiration The length the delegation is valid. By default, 15 minutes from calling\n   *                   this function.\n   * @param options A set of options for this delegation. expiration and previous\n   * @param options.previous - Another DelegationChain that this chain should start with.\n   * @param options.targets - targets that scope the delegation (e.g. Canister Principals)\n   */\n  public static async create(\n    from: SignIdentity,\n    to: PublicKey,\n    expiration: Date = new Date(Date.now() + 15 * 60 * 1000),\n    options: {\n      previous?: DelegationChain;\n      targets?: Principal[];\n    } = {},\n  ): Promise<DelegationChain> {\n    const delegation = await _createSingleDelegation(from, to, expiration, options.targets);\n    return new DelegationChain(\n      [...(options.previous?.delegations || []), delegation],\n      options.previous?.publicKey || from.getPublicKey().toDer(),\n    );\n  }\n\n  /**\n   * Creates a DelegationChain object from a JSON string.\n   * @param json The JSON string to parse.\n   */\n  public static fromJSON(json: string | JsonnableDelegationChain): DelegationChain {\n    const { publicKey, delegations } = typeof json === 'string' ? JSON.parse(json) : json;\n    if (!Array.isArray(delegations)) {\n      throw new Error('Invalid delegations.');\n    }\n\n    const parsedDelegations: SignedDelegation[] = delegations.map(signedDelegation => {\n      const { delegation, signature } = signedDelegation;\n      const { pubkey, expiration, targets } = delegation;\n      if (targets !== undefined && !Array.isArray(targets)) {\n        throw new Error('Invalid targets.');\n      }\n\n      return {\n        delegation: new Delegation(\n          _parseBlob(pubkey),\n          BigInt('0x' + expiration), // expiration in JSON is an hexa string (See toJSON() below).\n          targets &&\n            targets.map((t: unknown) => {\n              if (typeof t !== 'string') {\n                throw new Error('Invalid target.');\n              }\n              return Principal.fromHex(t);\n            }),\n        ),\n        signature: _parseBlob(signature) as Signature,\n      };\n    });\n\n    return new this(parsedDelegations, _parseBlob(publicKey) as DerEncodedPublicKey);\n  }\n\n  /**\n   * Creates a DelegationChain object from a list of delegations and a DER-encoded public key.\n   * @param delegations The list of delegations.\n   * @param publicKey The DER-encoded public key of the key-pair signing the first delegation.\n   */\n  public static fromDelegations(\n    delegations: SignedDelegation[],\n    publicKey: DerEncodedPublicKey,\n  ): DelegationChain {\n    return new this(delegations, publicKey);\n  }\n\n  protected constructor(\n    public readonly delegations: SignedDelegation[],\n    public readonly publicKey: DerEncodedPublicKey,\n  ) {}\n\n  public toJSON(): JsonnableDelegationChain {\n    return {\n      delegations: this.delegations.map(signedDelegation => {\n        const { delegation, signature } = signedDelegation;\n        const { targets } = delegation;\n        return {\n          delegation: {\n            expiration: delegation.expiration.toString(16),\n            pubkey: toHex(delegation.pubkey),\n            ...(targets && {\n              targets: targets.map(t => t.toHex()),\n            }),\n          },\n          signature: toHex(signature),\n        };\n      }),\n      publicKey: toHex(this.publicKey),\n    };\n  }\n}\n\n/**\n * An Identity that adds delegation to a request. Everywhere in this class, the name\n * innerKey refers to the SignIdentity that is being used to sign the requests, while\n * originalKey is the identity that is being borrowed. More identities can be used\n * in the middle to delegate.\n */\nexport class DelegationIdentity extends SignIdentity {\n  /**\n   * Create a delegation without having access to delegateKey.\n   * @param key The key used to sign the reqyests.\n   * @param delegation A delegation object created using `createDelegation`.\n   */\n  public static fromDelegation(\n    key: Pick<SignIdentity, 'sign'>,\n    delegation: DelegationChain,\n  ): DelegationIdentity {\n    return new this(key, delegation);\n  }\n\n  protected constructor(\n    private _inner: Pick<SignIdentity, 'sign'>,\n    private _delegation: DelegationChain,\n  ) {\n    super();\n  }\n\n  public getDelegation(): DelegationChain {\n    return this._delegation;\n  }\n\n  public getPublicKey(): PublicKey {\n    return {\n      derKey: this._delegation.publicKey,\n      toDer: () => this._delegation.publicKey,\n    };\n  }\n  public sign(blob: ArrayBuffer): Promise<Signature> {\n    return this._inner.sign(blob);\n  }\n\n  public async transformRequest(request: HttpAgentRequest): Promise<unknown> {\n    const { body, ...fields } = request;\n    const requestId = await requestIdOf(body);\n    return {\n      ...fields,\n      body: {\n        content: body,\n        sender_sig: await this.sign(\n          new Uint8Array([...requestDomainSeparator, ...new Uint8Array(requestId)]),\n        ),\n        sender_delegation: this._delegation.delegations,\n        sender_pubkey: this._delegation.publicKey,\n      },\n    };\n  }\n}\n\n/**\n * A partial delegated identity, representing a delegation chain and the public key that it targets\n */\nexport class PartialDelegationIdentity extends PartialIdentity {\n  #delegation: DelegationChain;\n\n  /**\n   * The Delegation Chain of this identity.\n   */\n  get delegation(): DelegationChain {\n    return this.#delegation;\n  }\n\n  private constructor(inner: PublicKey, delegation: DelegationChain) {\n    super(inner);\n    this.#delegation = delegation;\n  }\n\n  /**\n   * Create a {@link PartialDelegationIdentity} from a {@link PublicKey} and a {@link DelegationChain}.\n   * @param key The {@link PublicKey} to delegate to.\n   * @param delegation a {@link DelegationChain} targeting the inner key.\n   * @constructs PartialDelegationIdentity\n   */\n  public static fromDelegation(key: PublicKey, delegation: DelegationChain) {\n    return new PartialDelegationIdentity(key, delegation);\n  }\n}\n\n/**\n * List of things to check for a delegation chain validity.\n */\nexport interface DelegationValidChecks {\n  /**\n   * Check that the scope is amongst the scopes that this delegation has access to.\n   */\n  scope?: Principal | string | Array<Principal | string>;\n}\n\n/**\n * Analyze a DelegationChain and validate that it's valid, ie. not expired and apply to the\n * scope.\n * @param chain The chain to validate.\n * @param checks Various checks to validate on the chain.\n */\nexport function isDelegationValid(chain: DelegationChain, checks?: DelegationValidChecks): boolean {\n  // Verify that the no delegation is expired. If any are in the chain, returns false.\n  for (const { delegation } of chain.delegations) {\n    // prettier-ignore\n    if (+new Date(Number(delegation.expiration / BigInt(1000000))) <= +Date.now()) {\n      return false;\n    }\n  }\n\n  // Check the scopes.\n  const scopes: Principal[] = [];\n  const maybeScope = checks?.scope;\n  if (maybeScope) {\n    if (Array.isArray(maybeScope)) {\n      scopes.push(...maybeScope.map(s => (typeof s === 'string' ? Principal.fromText(s) : s)));\n    } else {\n      scopes.push(typeof maybeScope === 'string' ? Principal.fromText(maybeScope) : maybeScope);\n    }\n  }\n\n  for (const s of scopes) {\n    const scope = s.toText();\n    for (const { delegation } of chain.delegations) {\n      if (delegation.targets === undefined) {\n        continue;\n      }\n\n      let none = true;\n      for (const target of delegation.targets) {\n        if (target.toText() === scope) {\n          none = false;\n          break;\n        }\n      }\n      if (none) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n", "import {\n  DerEncodedPublicKey,\n  PublicKey,\n  Signature,\n  SignIdentity,\n  wrapDER,\n  DER_COSE_OID,\n  fromHex,\n  toHex,\n} from '@dfinity/agent';\nimport borc from 'borc';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { bufFromBufLike } from '@dfinity/candid';\n\nfunction _coseToDerEncodedBlob(cose: ArrayBuffer): DerEncodedPublicKey {\n  return wrapDER(cose, DER_COSE_OID).buffer as DerEncodedPublicKey;\n}\n\ntype PublicKeyCredentialWithAttachment = PublicKeyCredential & {\n  // Extends `PublicKeyCredential` with an optional field introduced in the WebAuthn level 3 spec:\n  // https://w3c.github.io/webauthn/#dom-publickeycredential-authenticatorattachment\n  // Already supported by Chrome, Safari and Edge\n  // Note: `null` is included here as a possible value because Edge set this value to null in the\n  // past.\n  authenticatorAttachment: AuthenticatorAttachment | undefined | null;\n};\n\n/**\n * From the documentation;\n * The authData is a byte array described in the spec. Parsing it will involve slicing bytes from\n * the array and converting them into usable objects.\n *\n * See https://webauthn.guide/#registration (subsection \"Example: Parsing the authenticator data\").\n * @param authData The authData field of the attestation response.\n * @returns The COSE key of the authData.\n */\nfunction _authDataToCose(authData: ArrayBuffer): ArrayBuffer {\n  const dataView = new DataView(new ArrayBuffer(2));\n  const idLenBytes = authData.slice(53, 55);\n  [...new Uint8Array(idLenBytes)].forEach((v, i) => dataView.setUint8(i, v));\n  const credentialIdLength = dataView.getUint16(0);\n\n  // Get the public key object.\n  return authData.slice(55 + credentialIdLength);\n}\n\nexport class CosePublicKey implements PublicKey {\n  protected _encodedKey: DerEncodedPublicKey;\n\n  public constructor(protected _cose: ArrayBuffer) {\n    this._encodedKey = _coseToDerEncodedBlob(_cose);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this._encodedKey;\n  }\n\n  public getCose(): ArrayBuffer {\n    return this._cose;\n  }\n}\n\n/**\n * Create a challenge from a string or array. The default challenge is always the same\n * because we don't need to verify the authenticity of the key on the server (we don't\n * register our keys with the IC). Any challenge would do, even one per key, randomly\n * generated.\n * @param challenge The challenge to transform into a byte array. By default a hard\n *        coded string.\n */\nfunction _createChallengeBuffer(challenge: string | Uint8Array = '<ic0.app>'): Uint8Array {\n  if (typeof challenge === 'string') {\n    return Uint8Array.from(challenge, c => c.charCodeAt(0));\n  } else {\n    return challenge;\n  }\n}\n\n/**\n * Create a credentials to authenticate with a server. This is necessary in order in\n * WebAuthn to get credentials IDs (which give us the public key and allow us to\n * sign), but in the case of the Internet Computer, we don't actually need to register\n * it, so we don't.\n * @param credentialCreationOptions an optional CredentialCreationOptions object\n */\nasync function _createCredential(\n  credentialCreationOptions?: CredentialCreationOptions,\n): Promise<PublicKeyCredentialWithAttachment | null> {\n  const creds = (await navigator.credentials.create(\n    credentialCreationOptions ?? {\n      publicKey: {\n        authenticatorSelection: {\n          userVerification: 'preferred',\n        },\n        attestation: 'direct',\n        challenge: _createChallengeBuffer(),\n        pubKeyCredParams: [{ type: 'public-key', alg: PubKeyCoseAlgo.ECDSA_WITH_SHA256 }],\n        rp: {\n          name: 'Internet Identity Service',\n        },\n        user: {\n          id: randomBytes(16),\n          name: 'Internet Identity',\n          displayName: 'Internet Identity',\n        },\n      },\n    },\n  )) as PublicKeyCredentialWithAttachment | null;\n\n  if (creds === null) {\n    return null;\n  }\n\n  return {\n    // do _not_ use ...creds here, as creds is not enumerable in all cases\n    id: creds.id,\n    response: creds.response,\n    type: creds.type,\n    authenticatorAttachment: creds.authenticatorAttachment,\n    getClientExtensionResults: creds.getClientExtensionResults,\n    // Some password managers will return a Uint8Array, so we ensure we return an ArrayBuffer.\n    rawId: bufFromBufLike(creds.rawId),\n  };\n}\n\n// See https://www.iana.org/assignments/cose/cose.xhtml#algorithms for a complete\n// list of these algorithms. We only list the ones we support here.\nenum PubKeyCoseAlgo {\n  ECDSA_WITH_SHA256 = -7,\n}\n\n/**\n * A SignIdentity that uses `navigator.credentials`. See https://webauthn.guide/ for\n * more information about WebAuthentication.\n */\nexport class WebAuthnIdentity extends SignIdentity {\n  /**\n   * Create an identity from a JSON serialization.\n   * @param json - json to parse\n   */\n  public static fromJSON(json: string): WebAuthnIdentity {\n    const { publicKey, rawId } = JSON.parse(json);\n\n    if (typeof publicKey !== 'string' || typeof rawId !== 'string') {\n      throw new Error('Invalid JSON string.');\n    }\n\n    return new this(fromHex(rawId), fromHex(publicKey), undefined);\n  }\n\n  /**\n   * Create an identity.\n   * @param credentialCreationOptions an optional CredentialCreationOptions Challenge\n   */\n  public static async create(\n    credentialCreationOptions?: CredentialCreationOptions,\n  ): Promise<WebAuthnIdentity> {\n    const creds = await _createCredential(credentialCreationOptions);\n\n    if (!creds || creds.type !== 'public-key') {\n      throw new Error('Could not create credentials.');\n    }\n\n    const response = creds.response as AuthenticatorAttestationResponse;\n    if (response.attestationObject === undefined) {\n      throw new Error('Was expecting an attestation response.');\n    }\n\n    // Parse the attestationObject as CBOR.\n    const attObject = borc.decodeFirst(new Uint8Array(response.attestationObject));\n\n    return new this(\n      creds.rawId,\n      _authDataToCose(attObject.authData),\n      creds.authenticatorAttachment ?? undefined,\n    );\n  }\n\n  protected _publicKey: CosePublicKey;\n\n  public constructor(\n    public readonly rawId: ArrayBuffer,\n    cose: ArrayBuffer,\n    protected authenticatorAttachment: AuthenticatorAttachment | undefined,\n  ) {\n    super();\n    this._publicKey = new CosePublicKey(cose);\n  }\n\n  public getPublicKey(): PublicKey {\n    return this._publicKey;\n  }\n\n  /**\n   * WebAuthn level 3 spec introduces a new attribute on successful WebAuthn interactions,\n   * see https://w3c.github.io/webauthn/#dom-publickeycredential-authenticatorattachment.\n   * This attribute is already implemented for Chrome, Safari and Edge.\n   *\n   * Given the attribute is only available after a successful interaction, the information is\n   * provided opportunistically and might also be `undefined`.\n   */\n  public getAuthenticatorAttachment(): AuthenticatorAttachment | undefined {\n    return this.authenticatorAttachment;\n  }\n\n  public async sign(blob: ArrayBuffer): Promise<Signature> {\n    const result = (await navigator.credentials.get({\n      publicKey: {\n        allowCredentials: [\n          {\n            type: 'public-key',\n            id: this.rawId,\n          },\n        ],\n        challenge: blob,\n        userVerification: 'preferred',\n      },\n    })) as PublicKeyCredentialWithAttachment;\n\n    if (result.authenticatorAttachment !== null) {\n      this.authenticatorAttachment = result.authenticatorAttachment;\n    }\n\n    const response = result.response as AuthenticatorAssertionResponse;\n\n    const cbor = borc.encode(\n      new borc.Tagged(55799, {\n        authenticator_data: new Uint8Array(response.authenticatorData),\n        client_data_json: new TextDecoder().decode(response.clientDataJSON),\n        signature: new Uint8Array(response.signature),\n      }),\n    );\n    if (!cbor) {\n      throw new Error('failed to encode cbor');\n    }\n    return cbor.buffer as Signature;\n  }\n\n  /**\n   * Allow for JSON serialization of all information needed to reuse this identity.\n   */\n  public toJSON(): JsonnableWebAuthnIdentity {\n    return {\n      publicKey: toHex(this._publicKey.getCose()),\n      rawId: toHex(this.rawId),\n    };\n  }\n}\n\n/**\n * ReturnType<WebAuthnIdentity.toJSON>\n */\nexport interface JsonnableWebAuthnIdentity {\n  // The hexadecimal representation of the DER encoded public key.\n  publicKey: string;\n  // The string representation of the local WebAuthn Credential.id (base64url encoded).\n  rawId: string;\n}\n", "export { Ed25519KeyIdentity, Ed25519PublicKey } from './identity/ed25519';\nexport * from './identity/ecdsa';\nexport * from './identity/delegation';\nexport * from './identity/partial';\nexport { WebAuthnIdentity } from './identity/webauthn';\nexport { wrapDER, unwrapDER, DER_COSE_OID, ED25519_OID } from '@dfinity/agent';\n\n/**\n * @deprecated due to size of dependencies. Use `@dfinity/identity-secp256k1` instead.\n */\nexport class Secp256k1KeyIdentity {\n  constructor() {\n    throw new Error(\n      'Secp256k1KeyIdentity has been moved to a new repo: @dfinity/identity-secp256k1',\n    );\n  }\n}\n", "/** @module IdleManager */\ntype IdleCB = () => unknown;\nexport type IdleManagerOptions = {\n  /**\n   * Callback after the user has gone idle\n   */\n  onIdle?: IdleCB;\n  /**\n   * timeout in ms\n   * @default 30 minutes [600_000]\n   */\n  idleTimeout?: number;\n  /**\n   * capture scroll events\n   * @default false\n   */\n  captureScroll?: boolean;\n  /**\n   * scroll debounce time in ms\n   * @default 100\n   */\n  scrollDebounce?: number;\n};\n\nconst events = ['mousedown', 'mousemove', 'keydown', 'touchstart', 'wheel'];\n\n/**\n * Detects if the user has been idle for a duration of `idleTimeout` ms, and calls `onIdle` and registered callbacks.\n * By default, the IdleManager will log a user out after 10 minutes of inactivity.\n * To override these defaults, you can pass an `onIdle` callback, or configure a custom `idleTimeout` in milliseconds\n */\nexport class IdleManager {\n  callbacks: IdleCB[] = [];\n  idleTimeout: IdleManagerOptions['idleTimeout'] = 10 * 60 * 1000;\n  timeoutID?: number = undefined;\n\n  /**\n   * Creates an {@link IdleManager}\n   * @param {IdleManagerOptions} options Optional configuration\n   * @see {@link IdleManagerOptions}\n   * @param options.onIdle Callback once user has been idle. Use to prompt for fresh login, and use `Actor.agentOf(your_actor).invalidateIdentity()` to protect the user\n   * @param options.idleTimeout timeout in ms\n   * @param options.captureScroll capture scroll events\n   * @param options.scrollDebounce scroll debounce time in ms\n   */\n  public static create(\n    options: {\n      /**\n       * Callback after the user has gone idle\n       * @see {@link IdleCB}\n       */\n      onIdle?: () => unknown;\n      /**\n       * timeout in ms\n       * @default 10 minutes [600_000]\n       */\n      idleTimeout?: number;\n      /**\n       * capture scroll events\n       * @default false\n       */\n      captureScroll?: boolean;\n      /**\n       * scroll debounce time in ms\n       * @default 100\n       */\n      scrollDebounce?: number;\n    } = {},\n  ): IdleManager {\n    return new this(options);\n  }\n\n  /**\n   * @protected\n   * @param options {@link IdleManagerOptions}\n   */\n  protected constructor(options: IdleManagerOptions = {}) {\n    const { onIdle, idleTimeout = 10 * 60 * 1000 } = options || {};\n\n    this.callbacks = onIdle ? [onIdle] : [];\n    this.idleTimeout = idleTimeout;\n\n    const _resetTimer = this._resetTimer.bind(this);\n\n    window.addEventListener('load', _resetTimer, true);\n\n    events.forEach(function (name) {\n      document.addEventListener(name, _resetTimer, true);\n    });\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const debounce = (func: Function, wait: number) => {\n      let timeout: number | undefined;\n      return (...args: unknown[]) => {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const context = this;\n        const later = function () {\n          timeout = undefined;\n          func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = window.setTimeout(later, wait);\n      };\n    };\n\n    if (options?.captureScroll) {\n      // debounce scroll events\n      const scroll = debounce(_resetTimer, options?.scrollDebounce ?? 100);\n      window.addEventListener('scroll', scroll, true);\n    }\n\n    _resetTimer();\n  }\n\n  /**\n   * @param {IdleCB} callback function to be called when user goes idle\n   */\n  public registerCallback(callback: IdleCB): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Cleans up the idle manager and its listeners\n   */\n  public exit(): void {\n    clearTimeout(this.timeoutID);\n    window.removeEventListener('load', this._resetTimer, true);\n\n    const _resetTimer = this._resetTimer.bind(this);\n    events.forEach(function (name) {\n      document.removeEventListener(name, _resetTimer, true);\n    });\n    this.callbacks.forEach(cb => cb());\n  }\n\n  /**\n   * Resets the timeouts during cleanup\n   */\n  _resetTimer(): void {\n    const exit = this.exit.bind(this);\n    window.clearTimeout(this.timeoutID);\n    this.timeoutID = window.setTimeout(exit, this.idleTimeout);\n  }\n}\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "import { openDB, IDBPDatabase } from 'idb';\nimport { DB_VERSION, isBrowser, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY } from './storage';\n\ntype Database = IDBPDatabase<unknown>;\ntype IDBValidKey = string | number | Date | BufferSource | IDBValidKey[];\nconst AUTH_DB_NAME = 'auth-client-db';\nconst OBJECT_STORE_NAME = 'ic-keyval';\n\nconst _openDbStore = async (\n  dbName = AUTH_DB_NAME,\n  storeName = OBJECT_STORE_NAME,\n  version: number,\n) => {\n  // Clear legacy stored delegations\n  if (isBrowser && localStorage?.getItem(KEY_STORAGE_DELEGATION)) {\n    localStorage.removeItem(KEY_STORAGE_DELEGATION);\n    localStorage.removeItem(KEY_STORAGE_KEY);\n  }\n  return await openDB(dbName, version, {\n    upgrade: database => {\n      database.objectStoreNames;\n      if (database.objectStoreNames.contains(storeName)) {\n        database.clear(storeName);\n      }\n      database.createObjectStore(storeName);\n    },\n  });\n};\n\nasync function _getValue<T>(\n  db: Database,\n  storeName: string,\n  key: IDBValidKey,\n): Promise<T | undefined> {\n  return await db.get(storeName, key);\n}\n\nasync function _setValue<T>(\n  db: Database,\n  storeName: string,\n  key: IDBValidKey,\n  value: T,\n): Promise<IDBValidKey> {\n  return await db.put(storeName, value, key);\n}\n\nasync function _removeValue(db: Database, storeName: string, key: IDBValidKey): Promise<void> {\n  return await db.delete(storeName, key);\n}\n\nexport type DBCreateOptions = {\n  dbName?: string;\n  storeName?: string;\n  version?: number;\n};\n\n/**\n * Simple Key Value store\n * Defaults to `'auth-client-db'` with an object store of `'ic-keyval'`\n */\nexport class IdbKeyVal {\n  /**\n   * @param {DBCreateOptions} options - DBCreateOptions\n   * @param {DBCreateOptions['dbName']} options.dbName name for the indexeddb database\n   * @default\n   * @param {DBCreateOptions['storeName']} options.storeName name for the indexeddb Data Store\n   * @default\n   * @param {DBCreateOptions['version']} options.version version of the database. Increment to safely upgrade\n   * @constructs an {@link IdbKeyVal}\n   */\n  public static async create(options?: DBCreateOptions): Promise<IdbKeyVal> {\n    const { dbName = AUTH_DB_NAME, storeName = OBJECT_STORE_NAME, version = DB_VERSION } = options ?? {};\n    const db = await _openDbStore(dbName, storeName, version);\n    return new IdbKeyVal(db, storeName);\n  }\n\n  // Do not use - instead prefer create\n  private constructor(private _db: Database, private _storeName: string) {}\n\n  /**\n   * Basic setter\n   * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n   * @param value value to set\n   * @returns void\n   */\n  public async set<T>(key: IDBValidKey, value: T) {\n    return await _setValue<T>(this._db, this._storeName, key, value);\n  }\n  /**\n   * Basic getter\n   * Pass in a type T for type safety if you know the type the value will have if it is found\n   * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n   * @returns `Promise<T | null>`\n   * @example\n   * await get<string>('exampleKey') -> 'exampleValue'\n   */\n  public async get<T>(key: IDBValidKey): Promise<T | null> {\n    return (await _getValue<T>(this._db, this._storeName, key)) ?? null;\n  }\n\n  /**\n   * Remove a key\n   * @param key {@link IDBValidKey}\n   * @returns void\n   */\n  public async remove(key: IDBValidKey) {\n    return await _removeValue(this._db, this._storeName, key);\n  }\n}\n", "import { DBCreateOptions, IdbKeyVal } from './db';\n\nexport const KEY_STORAGE_KEY = 'identity';\nexport const KEY_STORAGE_DELEGATION = 'delegation';\nexport const KEY_VECTOR = 'iv';\n// Increment if any fields are modified\nexport const DB_VERSION = 1;\n\nexport const isBrowser = typeof window !== 'undefined';\n\nexport type StoredKey = string | CryptoKeyPair;\n\n/**\n * Interface for persisting user authentication data\n */\nexport interface AuthClientStorage {\n  get(key: string): Promise<StoredKey | null>;\n\n  set(key: string, value: StoredKey): Promise<void>;\n\n  remove(key: string): Promise<void>;\n}\n\n/**\n * Legacy implementation of AuthClientStorage, for use where IndexedDb is not available\n */\nexport class LocalStorage implements AuthClientStorage {\n  constructor(public readonly prefix = 'ic-', private readonly _localStorage?: Storage) {}\n\n  public get(key: string): Promise<string | null> {\n    return Promise.resolve(this._getLocalStorage().getItem(this.prefix + key));\n  }\n\n  public set(key: string, value: string): Promise<void> {\n    this._getLocalStorage().setItem(this.prefix + key, value);\n    return Promise.resolve();\n  }\n\n  public remove(key: string): Promise<void> {\n    this._getLocalStorage().removeItem(this.prefix + key);\n    return Promise.resolve();\n  }\n\n  private _getLocalStorage() {\n    if (this._localStorage) {\n      return this._localStorage;\n    }\n\n    const ls =\n      typeof window === 'undefined'\n        ? typeof global === 'undefined'\n          ? typeof self === 'undefined'\n            ? undefined\n            : self.localStorage\n          : global.localStorage\n        : window.localStorage;\n\n    if (!ls) {\n      throw new Error('Could not find local storage.');\n    }\n\n    return ls;\n  }\n}\n\n/**\n * IdbStorage is an interface for simple storage of string key-value pairs built on {@link IdbKeyVal}\n *\n * It replaces {@link LocalStorage}\n * @see implements {@link AuthClientStorage}\n */\nexport class IdbStorage implements AuthClientStorage {\n  #options: DBCreateOptions;\n\n  /**\n   * @param options - DBCreateOptions\n   * @param options.dbName - name for the indexeddb database\n   * @param options.storeName - name for the indexeddb Data Store\n   * @param options.version - version of the database. Increment to safely upgrade\n   * @constructs an {@link IdbStorage}\n   * @example\n   * ```typescript\n   * const storage = new IdbStorage({ dbName: 'my-db', storeName: 'my-store', version: 2 });\n   * ```\n   */\n  constructor(options?: DBCreateOptions) {\n    this.#options = options ?? {};\n  }\n\n  // Initializes a KeyVal on first request\n  private initializedDb: IdbKeyVal | undefined;\n  get _db(): Promise<IdbKeyVal> {\n    return new Promise(resolve => {\n      if (this.initializedDb) {\n        resolve(this.initializedDb);\n        return;\n      }\n      IdbKeyVal.create(this.#options).then(db => {\n        this.initializedDb = db;\n        resolve(db);\n      });\n    });\n  }\n\n  public async get(key: string): Promise<string | null> {\n    const db = await this._db;\n    return await db.get<string>(key);\n    // return (await db.get<string>(key)) ?? null;\n  }\n\n  public async set(key: string, value: string): Promise<void> {\n    const db = await this._db;\n    await db.set(key, value);\n  }\n\n  public async remove(key: string): Promise<void> {\n    const db = await this._db;\n    await db.remove(key);\n  }\n}\n", "/** @module AuthClient */\nimport {\n  AnonymousIdentity,\n  DerEncodedPublicKey,\n  Identity,\n  Signature,\n  SignIdentity,\n} from '@dfinity/agent';\nimport {\n  Delegation,\n  DelegationChain,\n  isDelegationValid,\n  DelegationIdentity,\n  Ed25519KeyIdentity,\n  ECDSAKeyIdentity,\n  PartialDelegationIdentity,\n} from '@dfinity/identity';\nimport { Principal } from '@dfinity/principal';\nimport { IdleManager, IdleManagerOptions } from './idleManager';\nimport {\n  AuthClientStorage,\n  IdbStorage,\n  isBrowser,\n  KEY_STORAGE_DELEGATION,\n  KEY_STORAGE_KEY,\n  KEY_VECTOR,\n  LocalStorage,\n} from './storage';\nimport { PartialIdentity } from '@dfinity/identity/lib/cjs/identity/partial';\n\nexport { AuthClientStorage, IdbStorage, LocalStorage, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY } from './storage';\nexport { IdbKeyVal, DBCreateOptions } from './db';\n\nconst IDENTITY_PROVIDER_DEFAULT = 'https://identity.ic0.app';\nconst IDENTITY_PROVIDER_ENDPOINT = '#authorize';\n\nconst ECDSA_KEY_LABEL = 'ECDSA';\nconst ED25519_KEY_LABEL = 'Ed25519';\ntype BaseKeyType = typeof ECDSA_KEY_LABEL | typeof ED25519_KEY_LABEL;\n\nconst INTERRUPT_CHECK_INTERVAL = 500;\n\nexport const ERROR_USER_INTERRUPT = 'UserInterrupt';\n\n/**\n * List of options for creating an {@link AuthClient}.\n */\nexport interface AuthClientCreateOptions {\n  /**\n   * An identity to use as the base\n   */\n  identity?: SignIdentity | PartialIdentity;\n  /**\n   * Optional storage with get, set, and remove. Uses {@link IdbStorage} by default\n   */\n  storage?: AuthClientStorage;\n  /**\n   * type to use for the base key\n   * @default 'ECDSA'\n   * If you are using a custom storage provider that does not support CryptoKey storage,\n   * you should use 'Ed25519' as the key type, as it can serialize to a string\n   */\n  keyType?: BaseKeyType;\n\n  /**\n   * Options to handle idle timeouts\n   * @default after 30 minutes, invalidates the identity\n   */\n  idleOptions?: IdleOptions;\n}\n\nexport interface IdleOptions extends IdleManagerOptions {\n  /**\n   * Disables idle functionality for {@link IdleManager}\n   * @default false\n   */\n  disableIdle?: boolean;\n\n  /**\n   * Disables default idle behavior - call logout & reload window\n   * @default false\n   */\n  disableDefaultIdleCallback?: boolean;\n}\n\nexport * from './idleManager';\n\nexport type OnSuccessFunc =\n  | (() => void | Promise<void>)\n  | ((message: InternetIdentityAuthResponseSuccess) => void | Promise<void>);\n\nexport type OnErrorFunc = (error?: string) => void | Promise<void>;\n\nexport interface AuthClientLoginOptions {\n  /**\n   * Identity provider\n   * @default \"https://identity.ic0.app\"\n   */\n  identityProvider?: string | URL;\n  /**\n   * Expiration of the authentication in nanoseconds\n   * @default  BigInt(8) hours * BigInt(3_600_000_000_000) nanoseconds\n   */\n  maxTimeToLive?: bigint;\n  /**\n   * If present, indicates whether or not the Identity Provider should allow the user to authenticate and/or register using a temporary key/PIN identity. Authenticating dapps may want to prevent users from using Temporary keys/PIN identities because Temporary keys/PIN identities are less secure than Passkeys (webauthn credentials) and because Temporary keys/PIN identities generally only live in a browser database (which may get cleared by the browser/OS).\n   */\n  allowPinAuthentication?: boolean;\n  /**\n   * Origin for Identity Provider to use while generating the delegated identity. For II, the derivation origin must authorize this origin by setting a record at `<derivation-origin>/.well-known/ii-alternative-origins`.\n   * @see https://github.com/dfinity/internet-identity/blob/main/docs/internet-identity-spec.adoc\n   */\n  derivationOrigin?: string | URL;\n  /**\n   * Auth Window feature config string\n   * @example \"toolbar=0,location=0,menubar=0,width=500,height=500,left=100,top=100\"\n   */\n  windowOpenerFeatures?: string;\n  /**\n   * Callback once login has completed\n   */\n  onSuccess?: OnSuccessFunc;\n  /**\n   * Callback in case authentication fails\n   */\n  onError?: OnErrorFunc;\n  /**\n   * Extra values to be passed in the login request during the authorize-ready phase\n   */\n  customValues?: Record<string, unknown>;\n}\n\ninterface InternetIdentityAuthRequest {\n  kind: 'authorize-client';\n  sessionPublicKey: Uint8Array;\n  maxTimeToLive?: bigint;\n  allowPinAuthentication?: boolean;\n  derivationOrigin?: string;\n}\n\nexport interface InternetIdentityAuthResponseSuccess {\n  kind: 'authorize-client-success';\n  delegations: {\n    delegation: {\n      pubkey: Uint8Array;\n      expiration: bigint;\n      targets?: Principal[];\n    };\n    signature: Uint8Array;\n  }[];\n  userPublicKey: Uint8Array;\n  authnMethod: 'passkey' | 'pin' | 'recovery';\n}\n\ninterface AuthReadyMessage {\n  kind: 'authorize-ready';\n}\n\ninterface AuthResponseSuccess {\n  kind: 'authorize-client-success';\n  delegations: {\n    delegation: {\n      pubkey: Uint8Array;\n      expiration: bigint;\n      targets?: Principal[];\n    };\n    signature: Uint8Array;\n  }[];\n  userPublicKey: Uint8Array;\n  authnMethod: 'passkey' | 'pin' | 'recovery';\n}\n\ninterface AuthResponseFailure {\n  kind: 'authorize-client-failure';\n  text: string;\n}\n\ntype IdentityServiceResponseMessage = AuthReadyMessage | AuthResponse;\ntype AuthResponse = AuthResponseSuccess | AuthResponseFailure;\n\n/**\n * Tool to manage authentication and identity\n * @see {@link AuthClient}\n */\nexport class AuthClient {\n  /**\n   * Create an AuthClient to manage authentication and identity\n   * @constructs\n   * @param {AuthClientCreateOptions} options - Options for creating an {@link AuthClient}\n   * @see {@link AuthClientCreateOptions}\n   * @param options.identity Optional Identity to use as the base\n   * @see {@link SignIdentity}\n   * @param options.storage Storage mechanism for delegration credentials\n   * @see {@link AuthClientStorage}\n   * @param options.keyType Type of key to use for the base key\n   * @param {IdleOptions} options.idleOptions Configures an {@link IdleManager}\n   * @see {@link IdleOptions}\n   * Default behavior is to clear stored identity and reload the page when a user goes idle, unless you set the disableDefaultIdleCallback flag or pass in a custom idle callback.\n   * @example\n   * const authClient = await AuthClient.create({\n   *   idleOptions: {\n   *     disableIdle: true\n   *   }\n   * })\n   */\n  public static async create(\n    options: {\n      /**\n       * An {@link SignIdentity} or {@link PartialIdentity} to authenticate via delegation.\n       */\n      identity?: SignIdentity | PartialIdentity;\n      /**\n       * {@link AuthClientStorage}\n       * @description Optional storage with get, set, and remove. Uses {@link IdbStorage} by default\n       */\n      storage?: AuthClientStorage;\n      /**\n       * type to use for the base key\n       * @default 'ECDSA'\n       * If you are using a custom storage provider that does not support CryptoKey storage,\n       * you should use 'Ed25519' as the key type, as it can serialize to a string\n       */\n      keyType?: BaseKeyType;\n      /**\n       * Options to handle idle timeouts\n       * @default after 10 minutes, invalidates the identity\n       */\n      idleOptions?: IdleOptions;\n    } = {},\n  ): Promise<AuthClient> {\n    const storage = options.storage ?? new IdbStorage();\n    const keyType = options.keyType ?? ECDSA_KEY_LABEL;\n\n    let key: null | SignIdentity | PartialIdentity = null;\n    if (options.identity) {\n      key = options.identity;\n    } else {\n      let maybeIdentityStorage = await storage.get(KEY_STORAGE_KEY);\n      if (!maybeIdentityStorage && isBrowser) {\n        // Attempt to migrate from localstorage\n        try {\n          const fallbackLocalStorage = new LocalStorage();\n          const localChain = await fallbackLocalStorage.get(KEY_STORAGE_DELEGATION);\n          const localKey = await fallbackLocalStorage.get(KEY_STORAGE_KEY);\n          // not relevant for Ed25519\n          if (localChain && localKey && keyType === ECDSA_KEY_LABEL) {\n            console.log('Discovered an identity stored in localstorage. Migrating to IndexedDB');\n            await storage.set(KEY_STORAGE_DELEGATION, localChain);\n            await storage.set(KEY_STORAGE_KEY, localKey);\n\n            maybeIdentityStorage = localChain;\n            // clean up\n            await fallbackLocalStorage.remove(KEY_STORAGE_DELEGATION);\n            await fallbackLocalStorage.remove(KEY_STORAGE_KEY);\n          }\n        } catch (error) {\n          console.error('error while attempting to recover localstorage: ' + error);\n        }\n      }\n      if (maybeIdentityStorage) {\n        try {\n          if (typeof maybeIdentityStorage === 'object') {\n            if (keyType === ED25519_KEY_LABEL && typeof maybeIdentityStorage === 'string') {\n              key = await Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n            } else {\n              key = await ECDSAKeyIdentity.fromKeyPair(maybeIdentityStorage);\n            }\n          } else if (typeof maybeIdentityStorage === 'string') {\n            // This is a legacy identity, which is a serialized Ed25519KeyIdentity.\n            key = Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n          }\n        } catch (e) {\n          // Ignore this, this means that the localStorage value isn't a valid Ed25519KeyIdentity or ECDSAKeyIdentity\n          // serialization.\n        }\n      }\n    }\n\n    let identity: SignIdentity | PartialIdentity = new AnonymousIdentity() as PartialIdentity;\n    let chain: null | DelegationChain = null;\n    if (key) {\n      try {\n        const chainStorage = await storage.get(KEY_STORAGE_DELEGATION);\n        if (typeof chainStorage === 'object' && chainStorage !== null) {\n          throw new Error(\n            'Delegation chain is incorrectly stored. A delegation chain should be stored as a string.',\n          );\n        }\n\n        if (options.identity) {\n          identity = options.identity;\n        } else if (chainStorage) {\n          chain = DelegationChain.fromJSON(chainStorage);\n\n          // Verify that the delegation isn't expired.\n          if (!isDelegationValid(chain)) {\n            await _deleteStorage(storage);\n            key = null;\n          } else {\n            // If the key is a public key, then we create a PartialDelegationIdentity.\n            if ('toDer' in key) {\n              identity = PartialDelegationIdentity.fromDelegation(key, chain);\n              // otherwise, we create a DelegationIdentity.\n            } else {\n              identity = DelegationIdentity.fromDelegation(key, chain);\n            }\n          }\n        }\n      } catch (e) {\n        console.error(e);\n        // If there was a problem loading the chain, delete the key.\n        await _deleteStorage(storage);\n        key = null;\n      }\n    }\n    let idleManager: IdleManager | undefined = undefined;\n    if (options.idleOptions?.disableIdle) {\n      idleManager = undefined;\n    }\n    // if there is a delegation chain or provided identity, setup idleManager\n    else if (chain || options.identity) {\n      idleManager = IdleManager.create(options.idleOptions);\n    }\n\n    if (!key) {\n      // Create a new key (whether or not one was in storage).\n      if (keyType === ED25519_KEY_LABEL) {\n        key = await Ed25519KeyIdentity.generate();\n        await storage.set(KEY_STORAGE_KEY, JSON.stringify((key as Ed25519KeyIdentity).toJSON()));\n      } else {\n        if (options.storage && keyType === ECDSA_KEY_LABEL) {\n          console.warn(\n            `You are using a custom storage provider that may not support CryptoKey storage. If you are using a custom storage provider that does not support CryptoKey storage, you should use '${ED25519_KEY_LABEL}' as the key type, as it can serialize to a string`,\n          );\n        }\n        key = await ECDSAKeyIdentity.generate();\n        await storage.set(KEY_STORAGE_KEY, (key as ECDSAKeyIdentity).getKeyPair());\n      }\n    }\n\n    return new this(identity, key, chain, storage, idleManager, options);\n  }\n\n  protected constructor(\n    private _identity: Identity | PartialIdentity,\n    private _key: SignIdentity | PartialIdentity,\n    private _chain: DelegationChain | null,\n    private _storage: AuthClientStorage,\n    public idleManager: IdleManager | undefined,\n    private _createOptions: AuthClientCreateOptions | undefined,\n    // A handle on the IdP window.\n    private _idpWindow?: Window,\n    // The event handler for processing events from the IdP.\n    private _eventHandler?: (event: MessageEvent) => void,\n  ) {\n    this._registerDefaultIdleCallback();\n  }\n\n  private _registerDefaultIdleCallback() {\n    const idleOptions = this._createOptions?.idleOptions;\n    /**\n     * Default behavior is to clear stored identity and reload the page.\n     * By either setting the disableDefaultIdleCallback flag or passing in a custom idle callback, we will ignore this config\n     */\n    if (!idleOptions?.onIdle && !idleOptions?.disableDefaultIdleCallback) {\n      this.idleManager?.registerCallback(() => {\n        this.logout();\n        location.reload();\n      });\n    }\n  }\n\n  private async _handleSuccess(\n    message: InternetIdentityAuthResponseSuccess,\n    onSuccess?: OnSuccessFunc,\n  ) {\n    const delegations = message.delegations.map(signedDelegation => {\n      return {\n        delegation: new Delegation(\n          signedDelegation.delegation.pubkey,\n          signedDelegation.delegation.expiration,\n          signedDelegation.delegation.targets,\n        ),\n        signature: signedDelegation.signature.buffer as Signature,\n      };\n    });\n\n    const delegationChain = DelegationChain.fromDelegations(\n      delegations,\n      message.userPublicKey.buffer as DerEncodedPublicKey,\n    );\n\n    const key = this._key;\n    if (!key) {\n      return;\n    }\n\n    this._chain = delegationChain;\n\n    if ('toDer' in key) {\n      this._identity = PartialDelegationIdentity.fromDelegation(key, this._chain);\n    } else {\n      this._identity = DelegationIdentity.fromDelegation(key, this._chain);\n    }\n\n    this._idpWindow?.close();\n    const idleOptions = this._createOptions?.idleOptions;\n    // create the idle manager on a successful login if we haven't disabled it\n    // and it doesn't already exist.\n    if (!this.idleManager && !idleOptions?.disableIdle) {\n      this.idleManager = IdleManager.create(idleOptions);\n      this._registerDefaultIdleCallback();\n    }\n\n    this._removeEventListener();\n    delete this._idpWindow;\n\n    if (this._chain) {\n      await this._storage.set(KEY_STORAGE_DELEGATION, JSON.stringify(this._chain.toJSON()));\n    }\n\n    // onSuccess should be the last thing to do to avoid consumers\n    // interfering by navigating or refreshing the page\n    onSuccess?.(message);\n  }\n\n  public getIdentity(): Identity {\n    return this._identity;\n  }\n\n  public async isAuthenticated(): Promise<boolean> {\n    return !this.getIdentity().getPrincipal().isAnonymous() && this._chain !== null;\n  }\n\n  /**\n   * AuthClient Login -\n   * Opens up a new window to authenticate with Internet Identity\n   * @param {AuthClientLoginOptions} options - Options for logging in\n   * @param options.identityProvider Identity provider\n   * @param options.maxTimeToLive Expiration of the authentication in nanoseconds\n   * @param options.allowPinAuthentication If present, indicates whether or not the Identity Provider should allow the user to authenticate and/or register using a temporary key/PIN identity. Authenticating dapps may want to prevent users from using Temporary keys/PIN identities because Temporary keys/PIN identities are less secure than Passkeys (webauthn credentials) and because Temporary keys/PIN identities generally only live in a browser database (which may get cleared by the browser/OS).\n   * @param options.derivationOrigin Origin for Identity Provider to use while generating the delegated identity\n   * @param options.windowOpenerFeatures Configures the opened authentication window\n   * @param options.onSuccess Callback once login has completed\n   * @param options.onError Callback in case authentication fails\n   * @example\n   * const authClient = await AuthClient.create();\n   * authClient.login({\n   *  identityProvider: 'http://<canisterID>.127.0.0.1:8000',\n   *  maxTimeToLive: BigInt (7) * BigInt(24) * BigInt(3_600_000_000_000), // 1 week\n   *  windowOpenerFeatures: \"toolbar=0,location=0,menubar=0,width=500,height=500,left=100,top=100\",\n   *  onSuccess: () => {\n   *    console.log('Login Successful!');\n   *  },\n   *  onError: (error) => {\n   *    console.error('Login Failed: ', error);\n   *  }\n   * });\n   */\n  public async login(options?: AuthClientLoginOptions): Promise<void> {\n    // Set default maxTimeToLive to 8 hours\n    const defaultTimeToLive = /* hours */ BigInt(8) * /* nanoseconds */ BigInt(3_600_000_000_000);\n\n    // Create the URL of the IDP. (e.g. https://XXXX/#authorize)\n    const identityProviderUrl = new URL(\n      options?.identityProvider?.toString() || IDENTITY_PROVIDER_DEFAULT,\n    );\n    // Set the correct hash if it isn't already set.\n    identityProviderUrl.hash = IDENTITY_PROVIDER_ENDPOINT;\n\n    // If `login` has been called previously, then close/remove any previous windows\n    // and event listeners.\n    this._idpWindow?.close();\n    this._removeEventListener();\n\n    // Add an event listener to handle responses.\n    this._eventHandler = this._getEventHandler(identityProviderUrl, {\n      maxTimeToLive: options?.maxTimeToLive ?? defaultTimeToLive,\n      ...options,\n    });\n    window.addEventListener('message', this._eventHandler);\n\n    // Open a new window with the IDP provider.\n    this._idpWindow =\n      window.open(identityProviderUrl.toString(), 'idpWindow', options?.windowOpenerFeatures) ??\n      undefined;\n\n    // Check if the _idpWindow is closed by user.\n    const checkInterruption = (): void => {\n      // The _idpWindow is opened and not yet closed by the client\n      if (this._idpWindow) {\n        if (this._idpWindow.closed) {\n          this._handleFailure(ERROR_USER_INTERRUPT, options?.onError);\n        } else {\n          setTimeout(checkInterruption, INTERRUPT_CHECK_INTERVAL);\n        }\n      }\n    };\n    checkInterruption();\n  }\n\n  private _getEventHandler(identityProviderUrl: URL, options?: AuthClientLoginOptions) {\n    return async (event: MessageEvent) => {\n      if (event.origin !== identityProviderUrl.origin) {\n        console.warn(\n          `WARNING: expected origin '${identityProviderUrl.origin}', got '${event.origin}' (ignoring)`,\n        );\n        return;\n      }\n\n      const message = event.data as IdentityServiceResponseMessage;\n\n      switch (message.kind) {\n        case 'authorize-ready': {\n          // IDP is ready. Send a message to request authorization.\n          const request: InternetIdentityAuthRequest = {\n            kind: 'authorize-client',\n            sessionPublicKey: new Uint8Array(this._key?.getPublicKey().toDer() as ArrayBuffer),\n            maxTimeToLive: options?.maxTimeToLive,\n            allowPinAuthentication: options?.allowPinAuthentication,\n            derivationOrigin: options?.derivationOrigin?.toString(),\n            // Pass any custom values to the IDP.\n            ...options?.customValues,\n          };\n          this._idpWindow?.postMessage(request, identityProviderUrl.origin);\n          break;\n        }\n        case 'authorize-client-success':\n          // Create the delegation chain and store it.\n          try {\n            await this._handleSuccess(message, options?.onSuccess);\n          } catch (err) {\n            this._handleFailure((err as Error).message, options?.onError);\n          }\n          break;\n        case 'authorize-client-failure':\n          this._handleFailure(message.text, options?.onError);\n          break;\n        default:\n          break;\n      }\n    };\n  }\n\n  private _handleFailure(errorMessage?: string, onError?: (error?: string) => void): void {\n    this._idpWindow?.close();\n    onError?.(errorMessage);\n    this._removeEventListener();\n    delete this._idpWindow;\n  }\n\n  private _removeEventListener() {\n    if (this._eventHandler) {\n      window.removeEventListener('message', this._eventHandler);\n    }\n    this._eventHandler = undefined;\n  }\n\n  public async logout(options: { returnTo?: string } = {}): Promise<void> {\n    await _deleteStorage(this._storage);\n\n    // Reset this auth client to a non-authenticated state.\n    this._identity = new AnonymousIdentity();\n    this._chain = null;\n\n    if (options.returnTo) {\n      try {\n        window.history.pushState({}, '', options.returnTo);\n      } catch (e) {\n        window.location.href = options.returnTo;\n      }\n    }\n  }\n}\n\nasync function _deleteStorage(storage: AuthClientStorage) {\n  await storage.remove(KEY_STORAGE_KEY);\n  await storage.remove(KEY_STORAGE_DELEGATION);\n  await storage.remove(KEY_VECTOR);\n}\n", "/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport const debounce = (func: Function, timeout?: number) => {\n  let timer: ReturnType<typeof setTimeout> | undefined;\n\n  return (...args: unknown[]) => {\n    const next = () => func(...args);\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(next, timeout !== undefined && timeout > 0 ? timeout : 300);\n  };\n};\n", "import {Principal} from '@dfinity/principal';\nimport {nonNullish} from './null.utils';\n\nconst JSON_KEY_BIGINT = '__bigint__';\nconst JSON_KEY_PRINCIPAL = '__principal__';\nconst JSON_KEY_UINT8ARRAY = '__uint8array__';\n\n/**\n * A parser that interprets revived BigInt, Principal, and Uint8Array when constructing JavaScript values or objects.\n */\nexport const jsonReplacer = (_key: string, value: unknown): unknown => {\n  if (typeof value === 'bigint') {\n    return {[JSON_KEY_BIGINT]: `${value}`};\n  }\n\n  if (nonNullish(value) && value instanceof Principal) {\n    return {[JSON_KEY_PRINCIPAL]: value.toText()};\n  }\n\n  if (nonNullish(value) && value instanceof Uint8Array) {\n    return {[JSON_KEY_UINT8ARRAY]: Array.from(value)};\n  }\n\n  return value;\n};\n\n/**\n * A function that alters the behavior of the stringification process for BigInt, Principal and Uint8Array.\n */\nexport const jsonReviver = (_key: string, value: unknown): unknown => {\n  const mapValue = <T>(key: string): T => (value as Record<string, T>)[key];\n\n  if (nonNullish(value) && typeof value === 'object' && JSON_KEY_BIGINT in value) {\n    return BigInt(mapValue(JSON_KEY_BIGINT));\n  }\n\n  if (nonNullish(value) && typeof value === 'object' && JSON_KEY_PRINCIPAL in value) {\n    return Principal.fromText(mapValue(JSON_KEY_PRINCIPAL));\n  }\n\n  if (nonNullish(value) && typeof value === 'object' && JSON_KEY_UINT8ARRAY in value) {\n    return Uint8Array.from(mapValue(JSON_KEY_UINT8ARRAY));\n  }\n\n  return value;\n};\n", "/** Is null or undefined */\nexport const isNullish = <T>(argument: T | undefined | null): argument is undefined | null =>\n  argument === null || argument === undefined;\n\n/** Not null and not undefined */\nexport const nonNullish = <T>(argument: T | undefined | null): argument is NonNullable<T> =>\n  !isNullish(argument);\n\nexport class NullishError extends Error {}\n\nexport const assertNonNullish: <T>(\n  value: T,\n  message?: string\n) => asserts value is NonNullable<T> = <T>(value: T, message?: string): void => {\n  if (isNullish(value)) {\n    throw new NullishError(message);\n  }\n};\n", "import {jsonReplacer, jsonReviver} from './json.utils';\nimport {nonNullish} from './null.utils';\n\nexport const toNullable = <T>(value?: T): [] | [T] => {\n  return nonNullish(value) ? [value] : [];\n};\n\nexport const fromNullable = <T>(value: [] | [T]): T | undefined => {\n  return value?.[0];\n};\n\nexport const toArray = async <T>(data: T): Promise<Uint8Array> => {\n  const blob: Blob = new Blob([JSON.stringify(data, jsonReplacer)], {\n    type: 'application/json; charset=utf-8'\n  });\n  return new Uint8Array(await blob.arrayBuffer());\n};\n\nexport const fromArray = async <T>(data: Uint8Array | number[]): Promise<T> => {\n  const blob: Blob = new Blob([data instanceof Uint8Array ? data : new Uint8Array(data)], {\n    type: 'application/json; charset=utf-8'\n  });\n  return JSON.parse(await blob.text(), jsonReviver);\n};\n", "export const isBrowser = () => typeof window !== `undefined`;\n", "export abstract class Store<T> {\n  private callbacks: {id: symbol; callback: (data: T | null) => void}[] = [];\n\n  protected populate(data: T | null) {\n    this.callbacks.forEach(({callback}: {id: symbol; callback: (data: T | null) => void}) =>\n      callback(data)\n    );\n  }\n\n  subscribe(callback: (data: T | null) => void): () => void {\n    const callbackId = Symbol();\n    this.callbacks.push({id: callbackId, callback});\n\n    return () =>\n      (this.callbacks = this.callbacks.filter(\n        ({id}: {id: symbol; callback: (data: T | null) => void}) => id !== callbackId\n      ));\n  }\n}\n", "import type {User} from '../types/auth.types';\nimport type {Unsubscribe} from '../types/subscription.types';\nimport {Store} from './store';\n\nexport class AuthStore extends Store<User | null> {\n  private static instance: AuthStore;\n\n  private authUser: User | null = null;\n\n  private constructor() {\n    super();\n  }\n\n  static getInstance() {\n    if (!AuthStore.instance) {\n      AuthStore.instance = new AuthStore();\n    }\n    return AuthStore.instance;\n  }\n\n  set(authUser: User | null) {\n    this.authUser = authUser;\n\n    this.populate(authUser);\n  }\n\n  get(): User | null {\n    return this.authUser;\n  }\n\n  override subscribe(callback: (data: User | null) => void): Unsubscribe {\n    const unsubscribe: () => void = super.subscribe(callback);\n\n    callback(this.authUser);\n\n    return unsubscribe;\n  }\n\n  reset() {\n    this.authUser = null;\n\n    this.populate(this.authUser);\n  }\n}\n", "export const emit = <T>({message, detail}: {message: string; detail?: T | undefined}) => {\n  const $event: CustomEvent<T> = new CustomEvent<T>(message, {detail, bubbles: true});\n  document.dispatchEvent($event);\n};\n", "// How long the delegation identity should remain valid?\n// e.g. BigInt(7 * 24 * 60 * 60 * 1000 * 1000 * 1000) = 7 days in nanoseconds\n// For Juno: 4 hours\nexport const DELEGATION_IDENTITY_EXPIRATION = BigInt(4 * 60 * 60 * 1000 * 1000 * 1000);\n\n// We consider PIN authentication as \"insecure\" because users can easily lose their PIN if they do not register a passphrase, especially since Safari clears the browser cache every two weeks in cases of inactivity.\n// That's why we disable it by default.\nexport const ALLOW_PIN_AUTHENTICATION = false;\n\nexport const II_POPUP: {width: number; height: number} = {width: 576, height: 576};\nexport const NFID_POPUP: {width: number; height: number} = {width: 505, height: 705};\n\nexport const INTERNET_COMPUTER_ORG = 'internetcomputer.org';\n\n// Worker\nexport const AUTH_TIMER_INTERVAL = 1000;\n", "export const DOCKER_CONTAINER_URL = 'http://127.0.0.1:5987';\nexport const DOCKER_INTERNET_IDENTITY_ID = 'rdmx6-jaaaa-aaaaa-aaadq-cai';\n", "import type {Environment} from '../types/env.types';\nimport {Store} from './store';\n\nexport class EnvStore extends Store<Environment | undefined> {\n  private static instance: EnvStore;\n\n  private env: Environment | undefined;\n\n  private constructor() {\n    super();\n  }\n\n  static getInstance() {\n    if (!EnvStore.instance) {\n      EnvStore.instance = new EnvStore();\n    }\n    return EnvStore.instance;\n  }\n\n  set(env: Environment | undefined) {\n    this.env = env;\n\n    this.populate(env);\n  }\n\n  get(): Environment | undefined {\n    return this.env;\n  }\n\n  override subscribe(callback: (data: Environment | null | undefined) => void): () => void {\n    const unsubscribe: () => void = super.subscribe(callback);\n\n    callback(this.env);\n\n    return unsubscribe;\n  }\n}\n", "import {isBrowser, isNullish} from '@junobuild/utils';\n\nexport const popupCenter = ({\n  width,\n  height\n}: {\n  width: number;\n  height: number;\n}): string | undefined => {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  if (isNullish(window) || isNullish(window.top)) {\n    return undefined;\n  }\n\n  const {\n    top: {innerWidth, innerHeight}\n  } = window;\n\n  const y = innerHeight / 2 + screenY - height / 2;\n  const x = innerWidth / 2 + screenX - width / 2;\n\n  return `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=no, copyhistory=no, width=${width}, height=${height}, top=${y}, left=${x}`;\n};\n", "import {isNullish, nonNullish} from '@junobuild/utils';\nimport {II_POPUP, INTERNET_COMPUTER_ORG, NFID_POPUP} from '../constants/auth.constants';\nimport {DOCKER_CONTAINER_URL, DOCKER_INTERNET_IDENTITY_ID} from '../constants/container.constants';\nimport {EnvStore} from '../stores/env.store';\nimport type {\n  InternetIdentityConfig,\n  InternetIdentityDomain,\n  NFIDConfig,\n  Provider,\n  SignInOptions\n} from '../types/auth.types';\nimport {popupCenter} from '../utils/window.utils';\n\nexport interface AuthProviderSignInOptions {\n  identityProvider: string;\n  windowOpenerFeatures?: string;\n}\n\nexport interface AuthProvider {\n  readonly id: Provider;\n  signInOptions: (options: Pick<SignInOptions, 'windowed'>) => AuthProviderSignInOptions;\n}\n\nexport class InternetIdentityProvider implements AuthProvider {\n  #domain?: InternetIdentityDomain;\n\n  constructor({domain}: InternetIdentityConfig) {\n    this.#domain = domain;\n  }\n\n  get id(): Provider {\n    return 'internet_identity';\n  }\n\n  signInOptions({windowed}: Pick<SignInOptions, 'windowed'>): AuthProviderSignInOptions {\n    const identityProviderUrl = (): string => {\n      const container = EnvStore.getInstance().get()?.container;\n\n      // Production\n      if (isNullish(container) || container === false) {\n        return `https://identity.${this.#domain ?? INTERNET_COMPUTER_ORG}`;\n      }\n\n      const env = EnvStore.getInstance().get();\n\n      const internetIdentityId =\n        nonNullish(env) && nonNullish(env?.internetIdentityId)\n          ? env.internetIdentityId\n          : DOCKER_INTERNET_IDENTITY_ID;\n\n      const {host: containerHost, protocol} = new URL(\n        container === true ? DOCKER_CONTAINER_URL : container\n      );\n\n      return /apple/i.test(navigator?.vendor)\n        ? `${protocol}//${containerHost}?canisterId=${internetIdentityId}`\n        : `${protocol}//${internetIdentityId}.${containerHost.replace('127.0.0.1', 'localhost')}`;\n    };\n\n    return {\n      ...(windowed !== false && {\n        windowOpenerFeatures: popupCenter(II_POPUP)\n      }),\n      identityProvider: identityProviderUrl()\n    };\n  }\n}\n\nexport class NFIDProvider implements AuthProvider {\n  #appName: string;\n  #logoUrl: string;\n\n  constructor({appName, logoUrl}: NFIDConfig) {\n    this.#appName = appName;\n    this.#logoUrl = logoUrl;\n  }\n\n  get id(): Provider {\n    return 'nfid';\n  }\n\n  signInOptions({windowed}: Pick<SignInOptions, 'windowed'>): AuthProviderSignInOptions {\n    return {\n      ...(windowed !== false && {\n        windowOpenerFeatures: popupCenter(NFID_POPUP)\n      }),\n      identityProvider: `https://nfid.one/authenticate/?applicationName=${encodeURI(\n        this.#appName\n      )}&applicationLogo=${encodeURI(this.#logoUrl)}`\n    };\n  }\n}\n", "import {AuthClient} from '@dfinity/auth-client';\n\nexport const createAuthClient = (): Promise<AuthClient> =>\n  AuthClient.create({\n    idleOptions: {\n      disableIdle: true,\n      disableDefaultIdleCallback: true\n    }\n  });\n", "import {fromArray} from '@junobuild/utils';\nimport type {Doc} from '../../declarations/satellite/satellite.did';\n\nexport const mapData = async <D>({data}: Pick<Doc, 'data'>): Promise<D> => {\n  try {\n    return await fromArray<D>(data);\n  } catch (err: unknown) {\n    console.error('The data parsing has failed, mapping to undefined as a fallback.', err);\n    return undefined as D;\n  }\n};\n", "import {fromArray, fromNullable, toArray, toNullable} from '@junobuild/utils';\nimport type {DelDoc, Doc as DocApi, SetDoc} from '../../declarations/satellite/satellite.did';\nimport type {Doc} from '../types/doc.types';\n\nexport const toSetDoc = async <D>(doc: Doc<D>): Promise<SetDoc> => {\n  const {data, updated_at, description} = doc;\n\n  return {\n    description: toNullable(description),\n    data: await toArray<D>(data),\n    updated_at: toNullable(updated_at)\n  };\n};\n\nexport const toDelDoc = <D>(doc: Doc<D>): DelDoc => {\n  const {updated_at} = doc;\n\n  return {\n    updated_at: toNullable(updated_at)\n  };\n};\n\nexport const fromDoc = async <D>({doc, key}: {doc: DocApi; key: string}): Promise<Doc<D>> => {\n  const {owner, description: docDescription, data, ...rest} = doc;\n\n  return {\n    key,\n    description: fromNullable(docDescription),\n    owner: owner.toText(),\n    data: await fromArray<D>(data),\n    ...rest\n  };\n};\n", "import {Principal} from '@dfinity/principal';\nimport {isNullish, toNullable} from '@junobuild/utils';\nimport type {ListParams as ListParamsApi} from '../../declarations/satellite/satellite.did';\nimport type {ListParams} from '../types/list.types';\n\nexport const toListParams = ({matcher, paginate, order, owner}: ListParams): ListParamsApi => ({\n  matcher: isNullish(matcher)\n    ? []\n    : [\n        {\n          key: toNullable(matcher.key),\n          description: toNullable(matcher.description)\n        }\n      ],\n  paginate: toNullable(\n    isNullish(paginate)\n      ? undefined\n      : {\n          start_after: toNullable(paginate.startAfter),\n          limit: toNullable(isNullish(paginate.limit) ? undefined : BigInt(paginate.limit))\n        }\n  ),\n  order: toNullable(\n    isNullish(order)\n      ? undefined\n      : {\n          desc: order.desc,\n          field:\n            order.field === 'created_at'\n              ? {CreatedAt: null}\n              : order.field === 'updated_at'\n                ? {UpdatedAt: null}\n                : {Keys: null}\n        }\n  ),\n  owner: toNullable(\n    isNullish(owner) ? undefined : typeof owner === 'string' ? Principal.fromText(owner) : owner\n  )\n});\n", "// @ts-ignore\nexport const idlFactory = ({IDL}) => {\n  const CommitBatch = IDL.Record({\n    batch_id: IDL.Nat,\n    headers: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    chunk_ids: IDL.Vec(IDL.Nat)\n  });\n  const DeleteControllersArgs = IDL.Record({\n    controllers: IDL.Vec(IDL.Principal)\n  });\n  const ControllerScope = IDL.Variant({\n    Write: IDL.Null,\n    Admin: IDL.Null\n  });\n  const Controller = IDL.Record({\n    updated_at: IDL.Nat64,\n    metadata: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    created_at: IDL.Nat64,\n    scope: ControllerScope,\n    expires_at: IDL.Opt(IDL.Nat64)\n  });\n  const DelDoc = IDL.Record({updated_at: IDL.Opt(IDL.Nat64)});\n  const RulesType = IDL.Variant({Db: IDL.Null, Storage: IDL.Null});\n  const DepositCyclesArgs = IDL.Record({\n    cycles: IDL.Nat,\n    destination_id: IDL.Principal\n  });\n  const AssetKey = IDL.Record({\n    token: IDL.Opt(IDL.Text),\n    collection: IDL.Text,\n    owner: IDL.Principal,\n    name: IDL.Text,\n    description: IDL.Opt(IDL.Text),\n    full_path: IDL.Text\n  });\n  const AssetEncodingNoContent = IDL.Record({\n    modified: IDL.Nat64,\n    sha256: IDL.Vec(IDL.Nat8),\n    total_length: IDL.Nat\n  });\n  const AssetNoContent = IDL.Record({\n    key: AssetKey,\n    updated_at: IDL.Nat64,\n    encodings: IDL.Vec(IDL.Tuple(IDL.Text, AssetEncodingNoContent)),\n    headers: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    created_at: IDL.Nat64\n  });\n  const StorageConfigIFrame = IDL.Variant({\n    Deny: IDL.Null,\n    AllowAny: IDL.Null,\n    SameOrigin: IDL.Null\n  });\n  const StorageConfigRedirect = IDL.Record({\n    status_code: IDL.Nat16,\n    location: IDL.Text\n  });\n  const StorageConfig = IDL.Record({\n    iframe: IDL.Opt(StorageConfigIFrame),\n    rewrites: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    headers: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)))),\n    redirects: IDL.Opt(IDL.Vec(IDL.Tuple(IDL.Text, StorageConfigRedirect)))\n  });\n  const Config = IDL.Record({storage: StorageConfig});\n  const Doc = IDL.Record({\n    updated_at: IDL.Nat64,\n    owner: IDL.Principal,\n    data: IDL.Vec(IDL.Nat8),\n    description: IDL.Opt(IDL.Text),\n    created_at: IDL.Nat64\n  });\n  const HttpRequest = IDL.Record({\n    url: IDL.Text,\n    method: IDL.Text,\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    certificate_version: IDL.Opt(IDL.Nat16)\n  });\n  const Memory = IDL.Variant({Heap: IDL.Null, Stable: IDL.Null});\n  const StreamingCallbackToken = IDL.Record({\n    memory: Memory,\n    token: IDL.Opt(IDL.Text),\n    sha256: IDL.Opt(IDL.Vec(IDL.Nat8)),\n    headers: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    index: IDL.Nat64,\n    encoding_type: IDL.Text,\n    full_path: IDL.Text\n  });\n  const StreamingStrategy = IDL.Variant({\n    Callback: IDL.Record({\n      token: StreamingCallbackToken,\n      callback: IDL.Func([], [], ['query'])\n    })\n  });\n  const HttpResponse = IDL.Record({\n    body: IDL.Vec(IDL.Nat8),\n    headers: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    streaming_strategy: IDL.Opt(StreamingStrategy),\n    status_code: IDL.Nat16\n  });\n  const StreamingCallbackHttpResponse = IDL.Record({\n    token: IDL.Opt(StreamingCallbackToken),\n    body: IDL.Vec(IDL.Nat8)\n  });\n  const InitAssetKey = IDL.Record({\n    token: IDL.Opt(IDL.Text),\n    collection: IDL.Text,\n    name: IDL.Text,\n    description: IDL.Opt(IDL.Text),\n    encoding_type: IDL.Opt(IDL.Text),\n    full_path: IDL.Text\n  });\n  const InitUploadResult = IDL.Record({batch_id: IDL.Nat});\n  const ListOrderField = IDL.Variant({\n    UpdatedAt: IDL.Null,\n    Keys: IDL.Null,\n    CreatedAt: IDL.Null\n  });\n  const ListOrder = IDL.Record({field: ListOrderField, desc: IDL.Bool});\n  const ListMatcher = IDL.Record({\n    key: IDL.Opt(IDL.Text),\n    description: IDL.Opt(IDL.Text)\n  });\n  const ListPaginate = IDL.Record({\n    start_after: IDL.Opt(IDL.Text),\n    limit: IDL.Opt(IDL.Nat64)\n  });\n  const ListParams = IDL.Record({\n    order: IDL.Opt(ListOrder),\n    owner: IDL.Opt(IDL.Principal),\n    matcher: IDL.Opt(ListMatcher),\n    paginate: IDL.Opt(ListPaginate)\n  });\n  const ListResults = IDL.Record({\n    matches_pages: IDL.Opt(IDL.Nat64),\n    matches_length: IDL.Nat64,\n    items_page: IDL.Opt(IDL.Nat64),\n    items: IDL.Vec(IDL.Tuple(IDL.Text, AssetNoContent)),\n    items_length: IDL.Nat64\n  });\n  const CustomDomain = IDL.Record({\n    updated_at: IDL.Nat64,\n    created_at: IDL.Nat64,\n    bn_id: IDL.Opt(IDL.Text)\n  });\n  const ListResults_1 = IDL.Record({\n    matches_pages: IDL.Opt(IDL.Nat64),\n    matches_length: IDL.Nat64,\n    items_page: IDL.Opt(IDL.Nat64),\n    items: IDL.Vec(IDL.Tuple(IDL.Text, Doc)),\n    items_length: IDL.Nat64\n  });\n  const Permission = IDL.Variant({\n    Controllers: IDL.Null,\n    Private: IDL.Null,\n    Public: IDL.Null,\n    Managed: IDL.Null\n  });\n  const Rule = IDL.Record({\n    max_capacity: IDL.Opt(IDL.Nat32),\n    memory: IDL.Opt(Memory),\n    updated_at: IDL.Nat64,\n    max_size: IDL.Opt(IDL.Nat),\n    read: Permission,\n    created_at: IDL.Nat64,\n    mutable_permissions: IDL.Opt(IDL.Bool),\n    write: Permission\n  });\n  const MemorySize = IDL.Record({stable: IDL.Nat64, heap: IDL.Nat64});\n  const SetController = IDL.Record({\n    metadata: IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text)),\n    scope: ControllerScope,\n    expires_at: IDL.Opt(IDL.Nat64)\n  });\n  const SetControllersArgs = IDL.Record({\n    controller: SetController,\n    controllers: IDL.Vec(IDL.Principal)\n  });\n  const SetDoc = IDL.Record({\n    updated_at: IDL.Opt(IDL.Nat64),\n    data: IDL.Vec(IDL.Nat8),\n    description: IDL.Opt(IDL.Text)\n  });\n  const SetRule = IDL.Record({\n    max_capacity: IDL.Opt(IDL.Nat32),\n    memory: IDL.Opt(Memory),\n    updated_at: IDL.Opt(IDL.Nat64),\n    max_size: IDL.Opt(IDL.Nat),\n    read: Permission,\n    mutable_permissions: IDL.Opt(IDL.Bool),\n    write: Permission\n  });\n  const UploadChunk = IDL.Record({\n    content: IDL.Vec(IDL.Nat8),\n    batch_id: IDL.Nat,\n    order_id: IDL.Opt(IDL.Nat)\n  });\n  const UploadChunkResult = IDL.Record({chunk_id: IDL.Nat});\n  return IDL.Service({\n    build_version: IDL.Func([], [IDL.Text], ['query']),\n    commit_asset_upload: IDL.Func([CommitBatch], [], []),\n    count_assets: IDL.Func([IDL.Text], [IDL.Nat64], ['query']),\n    count_docs: IDL.Func([IDL.Text], [IDL.Nat64], ['query']),\n    del_asset: IDL.Func([IDL.Text, IDL.Text], [], []),\n    del_assets: IDL.Func([IDL.Text], [], []),\n    del_controllers: IDL.Func(\n      [DeleteControllersArgs],\n      [IDL.Vec(IDL.Tuple(IDL.Principal, Controller))],\n      []\n    ),\n    del_custom_domain: IDL.Func([IDL.Text], [], []),\n    del_doc: IDL.Func([IDL.Text, IDL.Text, DelDoc], [], []),\n    del_docs: IDL.Func([IDL.Text], [], []),\n    del_many_assets: IDL.Func([IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text))], [], []),\n    del_many_docs: IDL.Func([IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text, DelDoc))], [], []),\n    del_rule: IDL.Func([RulesType, IDL.Text, DelDoc], [], []),\n    deposit_cycles: IDL.Func([DepositCyclesArgs], [], []),\n    get_asset: IDL.Func([IDL.Text, IDL.Text], [IDL.Opt(AssetNoContent)], ['query']),\n    get_config: IDL.Func([], [Config], []),\n    get_doc: IDL.Func([IDL.Text, IDL.Text], [IDL.Opt(Doc)], ['query']),\n    get_many_assets: IDL.Func(\n      [IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text))],\n      [IDL.Vec(IDL.Tuple(IDL.Text, IDL.Opt(AssetNoContent)))],\n      ['query']\n    ),\n    get_many_docs: IDL.Func(\n      [IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text))],\n      [IDL.Vec(IDL.Tuple(IDL.Text, IDL.Opt(Doc)))],\n      ['query']\n    ),\n    http_request: IDL.Func([HttpRequest], [HttpResponse], ['query']),\n    http_request_streaming_callback: IDL.Func(\n      [StreamingCallbackToken],\n      [StreamingCallbackHttpResponse],\n      ['query']\n    ),\n    init_asset_upload: IDL.Func([InitAssetKey], [InitUploadResult], []),\n    list_assets: IDL.Func([IDL.Text, ListParams], [ListResults], ['query']),\n    list_controllers: IDL.Func([], [IDL.Vec(IDL.Tuple(IDL.Principal, Controller))], ['query']),\n    list_custom_domains: IDL.Func([], [IDL.Vec(IDL.Tuple(IDL.Text, CustomDomain))], ['query']),\n    list_docs: IDL.Func([IDL.Text, ListParams], [ListResults_1], ['query']),\n    list_rules: IDL.Func([RulesType], [IDL.Vec(IDL.Tuple(IDL.Text, Rule))], ['query']),\n    memory_size: IDL.Func([], [MemorySize], ['query']),\n    set_config: IDL.Func([Config], [], []),\n    set_controllers: IDL.Func(\n      [SetControllersArgs],\n      [IDL.Vec(IDL.Tuple(IDL.Principal, Controller))],\n      []\n    ),\n    set_custom_domain: IDL.Func([IDL.Text, IDL.Opt(IDL.Text)], [], []),\n    set_doc: IDL.Func([IDL.Text, IDL.Text, SetDoc], [Doc], []),\n    set_many_docs: IDL.Func(\n      [IDL.Vec(IDL.Tuple(IDL.Text, IDL.Text, SetDoc))],\n      [IDL.Vec(IDL.Tuple(IDL.Text, Doc))],\n      []\n    ),\n    set_rule: IDL.Func([RulesType, IDL.Text, SetRule], [], []),\n    upload_asset_chunk: IDL.Func([UploadChunk], [UploadChunkResult], []),\n    version: IDL.Func([], [IDL.Text], ['query'])\n  });\n};\n// @ts-ignore\nexport const init = ({IDL}) => {\n  return [];\n};\n", "import type {ActorMethod, ActorSubclass} from '@dfinity/agent';\nimport {Actor, HttpAgent} from '@dfinity/agent';\nimport type {IDL} from '@dfinity/candid';\nimport {nonNullish} from '@junobuild/utils';\nimport {DOCKER_CONTAINER_URL} from '../constants/container.constants';\nimport type {Satellite} from '../types/satellite.types';\n\nexport const createActor = async <T = Record<string, ActorMethod>>({\n  satelliteId: canisterId,\n  idlFactory,\n  identity,\n  fetch,\n  container\n}: {\n  idlFactory: IDL.InterfaceFactory;\n} & Required<Pick<Satellite, 'satelliteId' | 'identity'>> &\n  Pick<Satellite, 'fetch' | 'container'>): Promise<ActorSubclass<T>> => {\n  const localActor = nonNullish(container) && container !== false;\n\n  const host = localActor\n    ? container === true\n      ? DOCKER_CONTAINER_URL\n      : container\n    : 'https://icp-api.io';\n\n  const agent: HttpAgent = new HttpAgent({identity, host, ...(fetch && {fetch})});\n\n  if (nonNullish(container)) {\n    // Fetch root key for certificate validation during development\n    await agent.fetchRootKey();\n  }\n\n  // Creates an actor with using the candid interface and the HttpAgent\n  return Actor.createActor(idlFactory, {\n    agent,\n    canisterId\n  });\n};\n", "import {nonNullish} from '@junobuild/utils';\nimport {DOCKER_CONTAINER_URL} from '../constants/container.constants';\nimport {EnvStore} from '../stores/env.store';\nimport type {Satellite} from '../types/satellite.types';\n\nexport const satelliteUrl = ({\n  satelliteId: customSatelliteId,\n  container: customContainer\n}: Satellite): string => {\n  const {satelliteId} = customOrEnvSatelliteId({satelliteId: customSatelliteId});\n  const {container} = customOrEnvContainer({container: customContainer});\n\n  if (nonNullish(container) && container !== false) {\n    const {host: containerHost, protocol} = new URL(\n      container === true ? DOCKER_CONTAINER_URL : container\n    );\n    return `${protocol}//${satelliteId ?? 'unknown'}.${containerHost.replace('127.0.0.1', 'localhost')}`;\n  }\n\n  return `https://${satelliteId ?? 'unknown'}.icp0.io`;\n};\n\nexport const customOrEnvSatelliteId = ({\n  satelliteId\n}: Pick<Satellite, 'satelliteId'>): Pick<Satellite, 'satelliteId'> =>\n  nonNullish(satelliteId)\n    ? {satelliteId}\n    : EnvStore.getInstance().get() ?? {satelliteId: undefined};\n\nexport const customOrEnvContainer = ({\n  container: customContainer\n}: Pick<Satellite, 'container'>): Pick<Satellite, 'container'> =>\n  nonNullish(customContainer)\n    ? {container: customContainer}\n    : EnvStore.getInstance().get() ?? {container: undefined};\n", "import {assertNonNullish} from '@junobuild/utils';\nimport type {_SERVICE as SatelliteActor} from '../../declarations/satellite/satellite.did';\nimport {idlFactory} from '../../declarations/satellite/satellite.factory.did.js';\nimport type {Satellite} from '../types/satellite.types';\nimport {createActor} from '../utils/actor.utils';\nimport {customOrEnvContainer, customOrEnvSatelliteId} from '../utils/env.utils';\n\nexport const getSatelliteActor = async ({\n  satelliteId: customSatelliteId,\n  container: customContainer,\n  ...rest\n}: Satellite): Promise<SatelliteActor> => {\n  const {satelliteId} = customOrEnvSatelliteId({satelliteId: customSatelliteId});\n\n  assertNonNullish(satelliteId, 'No satellite principal defined.');\n\n  const {container} = customOrEnvContainer({container: customContainer});\n\n  return createActor({\n    satelliteId,\n    container,\n    idlFactory,\n    ...rest\n  });\n};\n", "import {fromNullable, isNullish, nonNullish} from '@junobuild/utils';\nimport type {\n  DelDoc,\n  Doc as DocApi,\n  ListResults_1 as ListDocsApi,\n  _SERVICE as SatelliteActor,\n  SetDoc\n} from '../../declarations/satellite/satellite.did';\nimport type {Doc} from '../types/doc.types';\nimport type {ListParams, ListResults} from '../types/list.types';\nimport type {Satellite} from '../types/satellite.types';\nimport {mapData} from '../utils/data.utils';\nimport {fromDoc, toDelDoc, toSetDoc} from '../utils/doc.utils';\nimport {toListParams} from '../utils/list.utils';\nimport {getSatelliteActor} from './actor.api';\n\nexport const getDoc = async <D>({\n  collection,\n  key,\n  satellite\n}: {\n  collection: string;\n  satellite: Satellite;\n} & Pick<Doc<D>, 'key'>): Promise<Doc<D> | undefined> => {\n  const actor: SatelliteActor = await getSatelliteActor(satellite);\n\n  const doc: DocApi | undefined = fromNullable(await actor.get_doc(collection, key));\n\n  if (isNullish(doc)) {\n    return undefined;\n  }\n\n  return fromDoc({doc, key});\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const getManyDocs = async ({\n  docs,\n  satellite\n}: {\n  docs: ({collection: string} & Pick<Doc<any>, 'key'>)[];\n  satellite: Satellite;\n}): Promise<(Doc<any> | undefined)[]> => {\n  const {get_many_docs} = await getSatelliteActor(satellite);\n\n  const payload: [string, string][] = docs.map(({collection, key}) => [collection, key]);\n\n  const resultsDocs = await get_many_docs(payload);\n\n  const results: (Doc<any> | undefined)[] = [];\n  for (const [key, resultDoc] of resultsDocs) {\n    const doc = fromNullable(resultDoc);\n    results.push(nonNullish(doc) ? await fromDoc({key, doc}) : undefined);\n  }\n\n  return results;\n};\n/* eslint-enable */\n\nexport const setDoc = async <D>({\n  collection,\n  doc,\n  satellite\n}: {\n  collection: string;\n  doc: Doc<D>;\n  satellite: Satellite;\n}): Promise<Doc<D>> => {\n  const {set_doc} = await getSatelliteActor(satellite);\n\n  const {key} = doc;\n\n  const setDoc = await toSetDoc(doc);\n\n  const updatedDoc = await set_doc(collection, key, setDoc);\n\n  return await fromDoc({key, doc: updatedDoc});\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const setManyDocs = async ({\n  docs,\n  satellite\n}: {\n  docs: {collection: string; doc: Doc<any>}[];\n  satellite: Satellite;\n}): Promise<Doc<any>[]> => {\n  const {set_many_docs} = await getSatelliteActor(satellite);\n\n  const payload: [string, string, SetDoc][] = [];\n  for (const {collection, doc} of docs) {\n    const {key} = doc;\n    payload.push([collection, key, await toSetDoc(doc)]);\n  }\n\n  const updatedDocs = await set_many_docs(payload);\n\n  const results: Doc<any>[] = [];\n  for (const [key, updatedDoc] of updatedDocs) {\n    results.push(await fromDoc({key, doc: updatedDoc}));\n  }\n\n  return results;\n};\n/* eslint-enable */\n\nexport const deleteDoc = async <D>({\n  collection,\n  doc,\n  satellite\n}: {\n  collection: string;\n  doc: Doc<D>;\n  satellite: Satellite;\n}): Promise<void> => {\n  const {del_doc} = await getSatelliteActor(satellite);\n\n  const {key} = doc;\n\n  return del_doc(collection, key, toDelDoc(doc));\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const deleteManyDocs = async ({\n  docs,\n  satellite\n}: {\n  docs: {collection: string; doc: Doc<any>}[];\n  satellite: Satellite;\n}): Promise<void> => {\n  const {del_many_docs} = await getSatelliteActor(satellite);\n\n  const payload: [string, string, DelDoc][] = docs.map(({collection, doc}) => [\n    collection,\n    doc.key,\n    toDelDoc(doc)\n  ]);\n\n  await del_many_docs(payload);\n};\n/* eslint-enable */\n\nexport const listDocs = async <D>({\n  collection,\n  filter,\n  satellite\n}: {\n  collection: string;\n  filter: ListParams;\n  satellite: Satellite;\n}): Promise<ListResults<Doc<D>>> => {\n  const actor: SatelliteActor = await getSatelliteActor(satellite);\n\n  const {items, items_page, items_length, matches_length, matches_pages}: ListDocsApi =\n    await actor.list_docs(collection, toListParams(filter));\n\n  const docs: Doc<D>[] = [];\n\n  for (const [key, item] of items) {\n    const {data: dataArray, owner, description, ...rest} = item;\n\n    docs.push({\n      key,\n      description: fromNullable(description),\n      owner: owner.toText(),\n      data: await mapData<D>({data: dataArray}),\n      ...rest\n    });\n  }\n\n  return {\n    items: docs,\n    items_length,\n    items_page: fromNullable(items_page),\n    matches_length,\n    matches_pages: fromNullable(matches_pages)\n  };\n};\n", "import type {Identity} from '@dfinity/agent';\nimport {AnonymousIdentity} from '@dfinity/agent';\nimport {getIdentity as getAuthIdentity} from './auth.services';\n\nexport const getIdentity = (identity?: Identity): Identity => {\n  if (identity !== undefined) {\n    return identity;\n  }\n\n  const authIdentity: Identity | undefined = getAuthIdentity();\n\n  return authIdentity ?? new AnonymousIdentity();\n};\n", "import {\n  deleteDoc as deleteDocApi,\n  deleteManyDocs as deleteManyDocsApi,\n  getDoc as getDocApi,\n  getManyDocs as getManyDocsApi,\n  listDocs as listDocsApi,\n  setDoc as setDocApi,\n  setManyDocs as setManyDocsApi\n} from '../api/doc.api';\nimport type {Doc} from '../types/doc.types';\nimport type {ListParams, ListResults} from '../types/list.types';\nimport type {SatelliteOptions} from '../types/satellite.types';\nimport {getIdentity} from './identity.services';\n\nexport const getDoc = async <D>({\n  satellite,\n  ...rest\n}: {\n  collection: string;\n  satellite?: SatelliteOptions;\n} & Pick<Doc<D>, 'key'>): Promise<Doc<D> | undefined> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return getDocApi({...rest, satellite: {...satellite, identity}});\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const getManyDocs = async ({\n  satellite,\n  ...rest\n}: {\n  docs: ({collection: string} & Pick<Doc<any>, 'key'>)[];\n  satellite?: SatelliteOptions;\n}): Promise<(Doc<any> | undefined)[]> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return getManyDocsApi({...rest, satellite: {...satellite, identity}});\n};\n/* eslint-enable */\n\nexport const setDoc = async <D>({\n  satellite,\n  ...rest\n}: {\n  collection: string;\n  doc: Doc<D>;\n  satellite?: SatelliteOptions;\n}): Promise<Doc<D>> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return setDocApi({...rest, satellite: {...satellite, identity}});\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const setManyDocs = async ({\n  satellite,\n  ...rest\n}: {\n  docs: {collection: string; doc: Doc<any>}[];\n  satellite?: SatelliteOptions;\n}): Promise<Doc<any>[]> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return setManyDocsApi({...rest, satellite: {...satellite, identity}});\n};\n/* eslint-enable */\n\nexport const deleteDoc = async <D>({\n  satellite,\n  ...rest\n}: {\n  collection: string;\n  doc: Doc<D>;\n  satellite?: SatelliteOptions;\n}): Promise<void> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return deleteDocApi({...rest, satellite: {...satellite, identity}});\n};\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const deleteManyDocs = async ({\n  satellite,\n  ...rest\n}: {\n  docs: {collection: string; doc: Doc<any>}[];\n  satellite?: SatelliteOptions;\n}): Promise<void> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return deleteManyDocsApi({...rest, satellite: {...satellite, identity}});\n};\n/* eslint-enable */\n\nexport const listDocs = async <D>({\n  satellite,\n  filter,\n  ...rest\n}: {\n  collection: string;\n  filter?: ListParams;\n  satellite?: SatelliteOptions;\n}): Promise<ListResults<Doc<D>>> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return listDocsApi<D>({...rest, filter: filter ?? {}, satellite: {...satellite, identity}});\n};\n", "import type {Identity} from '@dfinity/agent';\nimport {isNullish} from '@junobuild/utils';\nimport type {Provider, User, UserData} from '../types/auth.types';\nimport {getIdentity} from './auth.services';\nimport {getDoc, setDoc} from './doc.services';\n\nexport const initUser = async (provider?: Provider): Promise<User> => {\n  const identity: Identity | undefined = getIdentity();\n\n  if (isNullish(identity)) {\n    throw new Error('No identity to initialize the user. Have you initialized Juno?');\n  }\n\n  const userId = identity.getPrincipal().toText();\n\n  const user: User | undefined = await getDoc<UserData>({\n    collection: `#user`,\n    key: userId\n  });\n\n  if (isNullish(user)) {\n    const newUser: User = await createUser({userId, provider});\n    return newUser;\n  }\n\n  return user;\n};\n\nconst createUser = async ({\n  userId,\n  ...rest\n}: {\n  userId: string;\n} & UserData): Promise<User> =>\n  setDoc<UserData>({\n    collection: `#user`,\n    doc: {\n      key: userId,\n      data: rest\n    }\n  });\n", "import type {Identity} from '@dfinity/agent';\nimport type {AuthClient} from '@dfinity/auth-client';\nimport {\n  ALLOW_PIN_AUTHENTICATION,\n  DELEGATION_IDENTITY_EXPIRATION\n} from '../constants/auth.constants';\nimport {InternetIdentityProvider} from '../providers/auth.providers';\nimport {AuthStore} from '../stores/auth.store';\nimport type {Provider, SignInOptions} from '../types/auth.types';\nimport {createAuthClient} from '../utils/auth.utils';\nimport {initUser} from './user.services';\n\nlet authClient: AuthClient | undefined;\n\nexport const initAuth = async (provider?: Provider) => {\n  authClient = authClient ?? (await createAuthClient());\n\n  const isAuthenticated: boolean = (await authClient?.isAuthenticated()) ?? false;\n\n  if (!isAuthenticated) {\n    return;\n  }\n\n  const user = await initUser(provider);\n  AuthStore.getInstance().set(user);\n};\n\nexport const signIn = async (options?: SignInOptions) =>\n  /* eslint-disable no-async-promise-executor */\n  new Promise<void>(async (resolve, reject) => {\n    authClient = authClient ?? (await createAuthClient());\n\n    const provider = options?.provider ?? new InternetIdentityProvider({});\n\n    await authClient.login({\n      onSuccess: async () => {\n        await initAuth(provider.id);\n        resolve();\n      },\n      onError: (error?: string) => reject(error),\n      maxTimeToLive: options?.maxTimeToLive ?? DELEGATION_IDENTITY_EXPIRATION,\n      allowPinAuthentication: options?.allowPin ?? ALLOW_PIN_AUTHENTICATION,\n      ...(options?.derivationOrigin !== undefined && {derivationOrigin: options.derivationOrigin}),\n      ...provider.signInOptions({\n        windowed: options?.windowed\n      })\n    });\n  });\n\nexport const signOut = async (): Promise<void> => {\n  await authClient?.logout();\n\n  // Reset local object otherwise next sign in (sign in - sign out - sign in) might not work out - i.e. agent-js might not recreate the delegation or identity if not resetted\n  authClient = undefined;\n\n  AuthStore.getInstance().reset();\n};\n\nexport const getIdentity = (): Identity | undefined => {\n  return authClient?.getIdentity();\n};\n\n/**\n * Return what can be the identity of a sign-in user or an anonymous identity.\n * Useful to load an identity in web workers.\n */\nexport const unsafeIdentity = async (): Promise<Identity> =>\n  (authClient ?? (await createAuthClient())).getIdentity();\n", "import {isNullish} from '@junobuild/utils';\nimport {AuthStore} from '../stores/auth.store';\nimport type {User} from '../types/auth.types';\nimport type {EnvironmentWorker} from '../types/env.types';\nimport type {PostMessage, PostMessageDataResponseAuth} from '../types/post-message';\nimport type {Unsubscribe} from '../types/subscription.types';\nimport {emit} from '../utils/events.utils';\nimport {signOut} from './auth.services';\n\nexport const initAuthTimeoutWorker = (auth: EnvironmentWorker): Unsubscribe => {\n  const workerUrl = auth === true ? './workers/auth.worker.js' : auth;\n  const worker = new Worker(workerUrl);\n\n  const timeoutSignOut = async () => {\n    emit({message: 'junoSignOutAuthTimer'});\n    await signOut();\n  };\n\n  worker.onmessage = async ({data}: MessageEvent<PostMessage<PostMessageDataResponseAuth>>) => {\n    const {msg, data: value} = data;\n\n    switch (msg) {\n      case 'junoSignOutAuthTimer':\n        await timeoutSignOut();\n        return;\n      case 'junoDelegationRemainingTime':\n        emit({message: 'junoDelegationRemainingTime', detail: value?.authRemainingTime});\n        return;\n    }\n  };\n\n  return AuthStore.getInstance().subscribe((user: User | null) => {\n    if (isNullish(user)) {\n      worker.postMessage({msg: 'junoStopAuthTimer'});\n      return;\n    }\n\n    worker.postMessage({msg: 'junoStartAuthTimer'});\n  });\n};\n", "import {fromNullable, isBrowser, toNullable} from '@junobuild/utils';\nimport type {\n  AssetNoContent,\n  ListResults as ListAssetsApi,\n  _SERVICE as SatelliteActor\n} from '../../declarations/satellite/satellite.did';\nimport type {ListParams, ListResults} from '../types/list.types';\nimport type {Satellite} from '../types/satellite.types';\nimport type {AssetKey, ENCODING_TYPE, Storage} from '../types/storage.types';\nimport {toListParams} from '../utils/list.utils';\nimport {getSatelliteActor} from './actor.api';\n\nexport const uploadAsset = async ({\n  data,\n  filename,\n  collection,\n  headers,\n  token,\n  fullPath,\n  encoding,\n  description,\n  satellite\n}: Required<Omit<Storage, 'token' | 'encoding' | 'description'>> &\n  Pick<Storage, 'token' | 'encoding' | 'description'> & {satellite: Satellite}): Promise<void> => {\n  const actor: SatelliteActor = await getSatelliteActor(satellite);\n\n  const {batch_id: batchId} = await actor.init_asset_upload({\n    collection,\n    full_path: fullPath,\n    name: filename,\n    token: toNullable<string>(token),\n    encoding_type: toNullable<ENCODING_TYPE>(encoding),\n    description: toNullable(description)\n  });\n\n  // https://forum.dfinity.org/t/optimal-upload-chunk-size/20444/23?u=peterparker\n  const chunkSize = 1900000;\n\n  const uploadChunks: UploadChunkParams[] = [];\n\n  // Prevent transforming chunk to arrayBuffer error: The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.\n  const clone: Blob = isBrowser() ? new Blob([await data.arrayBuffer()]) : data;\n\n  // Split data into chunks\n  let orderId = 0n;\n  for (let start = 0; start < clone.size; start += chunkSize) {\n    const chunk: Blob = clone.slice(start, start + chunkSize);\n\n    uploadChunks.push({\n      batchId,\n      chunk,\n      actor,\n      orderId\n    });\n\n    orderId++;\n  }\n\n  // Upload chunks to the IC in batch - i.e. 12 chunks uploaded at a time.\n  let chunkIds: UploadChunkResult[] = [];\n  for await (const results of batchUploadChunks({uploadChunks})) {\n    chunkIds = [...chunkIds, ...results];\n  }\n\n  const contentType: [[string, string]] | undefined =\n    headers.find(([type, _]) => type.toLowerCase() === 'content-type') === undefined &&\n    data.type !== undefined &&\n    data.type !== ''\n      ? [['Content-Type', data.type]]\n      : undefined;\n\n  await actor.commit_asset_upload({\n    batch_id: batchId,\n    chunk_ids: chunkIds.map(({chunk_id}: UploadChunkResult) => chunk_id),\n    headers: [...headers, ...(contentType ? contentType : [])]\n  });\n};\n\nasync function* batchUploadChunks({\n  uploadChunks,\n  limit = 12\n}: {\n  uploadChunks: UploadChunkParams[];\n  limit?: number;\n}): AsyncGenerator<UploadChunkResult[], void> {\n  for (let i = 0; i < uploadChunks.length; i = i + limit) {\n    const batch = uploadChunks.slice(i, i + limit);\n    const result = await Promise.all(batch.map((params) => uploadChunk(params)));\n    yield result;\n  }\n}\n\ntype UploadChunkResult = {chunk_id: bigint};\n\ntype UploadChunkParams = {\n  batchId: bigint;\n  chunk: Blob;\n  actor: SatelliteActor;\n  orderId: bigint;\n};\n\nconst uploadChunk = async ({\n  batchId,\n  chunk,\n  actor,\n  orderId\n}: UploadChunkParams): Promise<UploadChunkResult> =>\n  actor.upload_asset_chunk({\n    batch_id: batchId,\n    content: new Uint8Array(await chunk.arrayBuffer()),\n    order_id: toNullable(orderId)\n  });\n\nexport const listAssets = async ({\n  collection,\n  satellite,\n  filter\n}: {\n  collection: string;\n  satellite: Satellite;\n  filter: ListParams;\n}): Promise<ListResults<AssetNoContent>> => {\n  const actor: SatelliteActor = await getSatelliteActor(satellite);\n\n  const {\n    items: assets,\n    items_length,\n    items_page,\n    matches_length,\n    matches_pages\n  }: ListAssetsApi = await actor.list_assets(collection, toListParams(filter));\n\n  return {\n    items: assets.map(([_, asset]) => asset),\n    items_length,\n    items_page: fromNullable(items_page),\n    matches_length,\n    matches_pages: fromNullable(matches_pages)\n  };\n};\n\nexport const deleteAsset = async ({\n  collection,\n  fullPath,\n  satellite\n}: {\n  collection: string;\n  satellite: Satellite;\n} & Pick<AssetKey, 'fullPath'>): Promise<void> => {\n  const actor: SatelliteActor = await getSatelliteActor(satellite);\n\n  return actor.del_asset(collection, fullPath);\n};\n\nexport const deleteManyAssets = async ({\n  assets,\n  satellite\n}: {\n  assets: ({collection: string} & Pick<AssetKey, 'fullPath'>)[];\n  satellite: Satellite;\n}): Promise<void> => {\n  const {del_many_assets} = await getSatelliteActor(satellite);\n\n  const payload: [string, string][] = assets.map(({collection, fullPath}) => [\n    collection,\n    fullPath\n  ]);\n\n  await del_many_assets(payload);\n};\n\nexport const getAsset = async ({\n  collection,\n  fullPath,\n  satellite\n}: {\n  collection: string;\n  satellite: Satellite;\n} & Pick<AssetKey, 'fullPath'>): Promise<AssetNoContent | undefined> => {\n  const {get_asset} = await getSatelliteActor(satellite);\n  return fromNullable(await get_asset(collection, fullPath));\n};\n\nexport const getManyAssets = async ({\n  assets,\n  satellite\n}: {\n  assets: ({collection: string} & Pick<AssetKey, 'fullPath'>)[];\n  satellite: Satellite;\n}): Promise<(AssetNoContent | undefined)[]> => {\n  const {get_many_assets} = await getSatelliteActor(satellite);\n\n  const payload: [string, string][] = assets.map(({collection, fullPath}) => [\n    collection,\n    fullPath\n  ]);\n\n  const resultsAssets = await get_many_assets(payload);\n\n  return resultsAssets.map(([_, resultAsset]) => fromNullable(resultAsset));\n};\n", "export const sha256ToBase64String = (sha256: Iterable<number>): string =>\n  btoa([...sha256].map((c) => String.fromCharCode(c)).join(''));\n", "import {fromNullable} from '@junobuild/utils';\nimport type {AssetNoContent} from '../../declarations/satellite/satellite.did';\nimport {\n  deleteAsset as deleteAssetApi,\n  deleteManyAssets as deleteManyAssetsApi,\n  getAsset as getAssetApi,\n  getManyAssets as getManyAssetsApi,\n  listAssets as listAssetsApi,\n  uploadAsset as uploadAssetApi\n} from '../api/storage.api';\nimport type {ListParams, ListResults} from '../types/list.types';\nimport type {SatelliteOptions} from '../types/satellite.types';\nimport type {Asset, AssetEncoding, AssetKey, Assets, Storage} from '../types/storage.types';\nimport {sha256ToBase64String} from '../utils/crypto.utils';\nimport {satelliteUrl} from '../utils/env.utils';\nimport {getIdentity} from './identity.services';\n\nexport const uploadBlob = async (\n  params: Storage & {satellite?: SatelliteOptions}\n): Promise<AssetKey> => uploadAssetIC(params);\n\nexport const uploadFile = async (\n  params: Partial<Pick<Storage, 'filename'>> &\n    Omit<Storage, 'filename' | 'data'> & {data: File} & {satellite?: SatelliteOptions}\n): Promise<AssetKey> =>\n  uploadAssetIC({\n    filename: params.data.name,\n    ...params\n  });\n\nconst uploadAssetIC = async ({\n  filename: storageFilename,\n  data,\n  collection,\n  headers = [],\n  fullPath: storagePath,\n  token,\n  satellite: satelliteOptions,\n  encoding,\n  description\n}: Storage & {satellite?: SatelliteOptions}): Promise<AssetKey> => {\n  const identity = getIdentity(satelliteOptions?.identity);\n\n  // The IC certification does not currently support encoding\n  const filename: string = decodeURI(storageFilename);\n  const fullPath: string = storagePath ?? `/${collection}/${filename}`;\n\n  const satellite = {...satelliteOptions, identity};\n\n  await uploadAssetApi({\n    data,\n    filename,\n    collection,\n    token,\n    headers,\n    fullPath,\n    encoding,\n    satellite,\n    description\n  });\n\n  return {\n    downloadUrl: `${satelliteUrl(satellite)}${fullPath}${token !== undefined ? `?token=${token}` : ''}`,\n    fullPath,\n    name: filename\n  };\n};\n\nexport const listAssets = async ({\n  collection,\n  satellite: satelliteOptions,\n  filter\n}: {\n  collection: string;\n  satellite?: SatelliteOptions;\n  filter?: ListParams;\n}): Promise<Assets> => {\n  const satellite = {...satelliteOptions, identity: getIdentity(satelliteOptions?.identity)};\n\n  const {items, ...rest}: ListResults<AssetNoContent> = await listAssetsApi({\n    collection,\n    satellite,\n    filter: filter ?? {}\n  });\n\n  const host: string = satelliteUrl(satellite);\n\n  return {\n    assets: items.map(\n      ({\n        key: {full_path, token: t, name, owner, description},\n        headers,\n        encodings,\n        created_at,\n        updated_at\n      }: AssetNoContent) => {\n        const token = fromNullable(t);\n\n        return {\n          fullPath: full_path,\n          description: fromNullable(description),\n          name,\n          downloadUrl: `${host}${full_path}${token !== undefined ? `?token=${token}` : ''}`,\n          token,\n          headers,\n          encodings: encodings.reduce(\n            (acc, [type, {modified, sha256, total_length}]) => ({\n              ...acc,\n              [type]: {\n                modified,\n                sha256: sha256ToBase64String(sha256),\n                total_length\n              }\n            }),\n            {} as Record<string, AssetEncoding>\n          ),\n          owner: owner.toText(),\n          created_at,\n          updated_at\n        } as Asset;\n      }\n    ),\n    ...rest\n  };\n};\n\nexport const deleteAsset = async ({\n  collection,\n  fullPath,\n  satellite\n}: {\n  collection: string;\n  satellite?: SatelliteOptions;\n} & Pick<AssetKey, 'fullPath'>): Promise<void> =>\n  deleteAssetApi({\n    collection,\n    fullPath,\n    satellite: {...satellite, identity: getIdentity(satellite?.identity)}\n  });\n\nexport const deleteManyAssets = async ({\n  assets,\n  satellite\n}: {\n  assets: ({collection: string} & Pick<AssetKey, 'fullPath'>)[];\n  satellite?: SatelliteOptions;\n} & Pick<AssetKey, 'fullPath'>): Promise<void> =>\n  deleteManyAssetsApi({\n    assets,\n    satellite: {...satellite, identity: getIdentity(satellite?.identity)}\n  });\n\nexport const getAsset = async ({\n  satellite,\n  ...rest\n}: {\n  collection: string;\n  satellite?: SatelliteOptions;\n} & Pick<AssetKey, 'fullPath'>): Promise<AssetNoContent | undefined> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return getAssetApi({...rest, satellite: {...satellite, identity}});\n};\n\nexport const getManyAssets = async ({\n  satellite,\n  ...rest\n}: {\n  assets: ({collection: string} & Pick<AssetKey, 'fullPath'>)[];\n  satellite?: SatelliteOptions;\n}): Promise<(AssetNoContent | undefined)[]> => {\n  const identity = getIdentity(satellite?.identity);\n\n  return getManyAssetsApi({...rest, satellite: {...satellite, identity}});\n};\n", "import {initAuthTimeoutWorker} from './services/auth-timout.services';\nimport {initAuth} from './services/auth.services';\nimport {AuthStore} from './stores/auth.store';\nimport {EnvStore} from './stores/env.store';\nimport type {User} from './types/auth.types';\nimport type {Environment} from './types/env.types';\nimport type {Unsubscribe} from './types/subscription.types';\n\nexport * from './providers/auth.providers';\nexport {signIn, signOut, unsafeIdentity} from './services/auth.services';\nexport * from './services/doc.services';\nexport * from './services/storage.services';\nexport * from './types/auth.types';\nexport * from './types/doc.types';\nexport * from './types/env.types';\nexport {ListOrder, ListPaginate, ListParams, ListResults} from './types/list.types';\nexport * from './types/satellite.types';\nexport * from './types/storage.types';\nexport * from './types/subscription.types';\n\nexport const initJuno = async (env: Environment): Promise<Unsubscribe[]> => {\n  EnvStore.getInstance().set(env);\n\n  await initAuth();\n\n  const authSubscribe =\n    env.workers?.auth !== undefined ? initAuthTimeoutWorker(env.workers.auth) : undefined;\n\n  return [...(authSubscribe ? [authSubscribe] : [])];\n};\n\nexport const authSubscribe = (callback: (authUser: User | null) => void): Unsubscribe =>\n  AuthStore.getInstance().subscribe(callback);\n"],
  "mappings": "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EAEjB,CACT,CAIA,IAAIK,GAAY,CAEdK,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAE,EAEAC,EAEAC,EAEAC,EACA+D,GACAA,GACAA,GACAA,GAEA9D,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAC,EAEAC,EAEAE,EAEAC,EACAyD,GACAA,GACAA,GACAA,GAEAxD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EAEAI,GAEAE,GAEAC,GAEAC,GACAgD,GACAA,GACAA,GAEA/C,GAEAC,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GAEA0C,GACAA,GACAA,GACAzC,GAEAC,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GAEAoC,GACAA,GACAA,GACAnC,GAEAC,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GACAA,GAEAC,GAEAC,GAEAC,GAEAC,GACA8B,GACAA,GACAA,GAEA7B,GAEAC,GAE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",
  "names": ["alphabet", "lookupTable", "i", "encode", "input", "skip", "bits", "output", "encodeByte", "byte", "exports", "decode", "o", "decodeChar", "char", "val", "c", "lookUpTable", "getCrc32", "buf", "b", "crc", "i", "t", "exports", "number", "n", "exports", "bool", "b", "isBytes", "a", "bytes", "lengths", "hash", "h", "exists", "instance", "checkFinished", "output", "out", "min", "assert", "nc", "exports", "crypto_1", "_assert_js_1", "isBytes", "a", "exports", "u8", "arr", "u32", "createView", "rotr", "word", "shift", "rotl", "byteSwap", "n", "byteSwap32", "i", "hexes", "_", "bytesToHex", "bytes", "hex", "asciis", "asciiToBase16", "char", "hexToBytes", "hl", "al", "array", "ai", "hi", "n1", "n2", "nextTick", "asyncLoop", "iters", "tick", "cb", "ts", "diff", "utf8ToBytes", "str", "toBytes", "data", "concatBytes", "arrays", "sum", "res", "pad", "Hash", "toStr", "checkOpts", "defaults", "opts", "wrapConstructor", "hashCons", "hashC", "msg", "tmp", "wrapConstructorWithOpts", "wrapXOFConstructorWithOpts", "randomBytes", "bytesLength", "_assert_js_1", "utils_js_1", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "Chi", "a", "b", "c", "exports", "Maj", "HashMD", "blockLen", "outputLen", "padOffset", "data", "buffer", "len", "pos", "take", "dataView", "out", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "_md_js_1", "utils_js_1", "SHA256_K", "SHA256_IV", "SHA256_W", "SHA256", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "s1", "sigma1", "T1", "T2", "SHA224", "exports", "sha256_1", "sha224", "data", "exports", "base32_1", "getCrc_1", "sha224_1", "exports", "SELF_AUTHENTICATING_SUFFIX", "ANONYMOUS_SUFFIX", "MANAGEMENT_CANISTER_PRINCIPAL_HEX_STR", "fromHexString", "hexString", "_a", "byte", "toHexString", "bytes", "str", "Principal", "_Principal", "_arr", "publicKey", "sha", "other", "hex", "text", "maybePrincipal", "obj", "canisterIdNoDash", "arr", "principal", "checksumArrayBuf", "checksum", "array", "matches", "i", "cmp", "require_base64_js", "__commonJSMin", "exports", "byteLength", "toByteArray", "fromByteArray", "lookup", "revLookup", "Arr", "code", "i", "len", "getLens", "b64", "validLen", "placeHoldersLen", "lens", "_byteLength", "tmp", "arr", "curByte", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "extraBytes", "parts", "maxChunkLength", "len2", "require_ieee754", "__commonJSMin", "exports", "buffer", "offset", "isLE", "mLen", "nBytes", "e", "m", "eLen", "eMax", "eBias", "nBits", "i", "d", "s", "value", "rt", "require_buffer", "__commonJSMin", "exports", "base64", "ieee754", "customInspectSymbol", "Buffer", "SlowBuffer", "K_MAX_LENGTH", "typedArraySupport", "arr", "proto", "createBuffer", "length", "buf", "arg", "encodingOrOffset", "allocUnsafe", "from", "value", "fromString", "fromArrayView", "isInstance", "fromArrayBuffer", "valueOf", "b", "fromObject", "assertSize", "size", "alloc", "fill", "encoding", "checked", "string", "byteLength", "actual", "fromArrayLike", "array", "i", "arrayView", "copy", "byteOffset", "obj", "len", "numberIsNaN", "a", "x", "y", "list", "buffer", "pos", "mustMatch", "loweredCase", "utf8ToBytes", "base64ToBytes", "slowToString", "start", "end", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "n", "m", "str", "max", "target", "thisStart", "thisEnd", "thisCopy", "targetCopy", "bidirectionalIndexOf", "val", "dir", "arrayIndexOf", "indexSize", "arrLength", "valLength", "read", "foundIndex", "found", "j", "hexWrite", "offset", "remaining", "strLen", "parsed", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "base64Write", "ucs2Write", "utf16leToBytes", "res", "firstByte", "codePoint", "bytesPerSequence", "secondByte", "thirdByte", "fourthByte", "tempCodePoint", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "codePoints", "ret", "out", "hexSliceLookupTable", "bytes", "newBuf", "checkOffset", "ext", "noAssert", "mul", "defineBigIntMethod", "validateNumber", "first", "last", "boundsError", "lo", "hi", "checkInt", "min", "maxBytes", "wrtBigUInt64LE", "checkIntBI", "wrtBigUInt64BE", "limit", "sub", "checkIEEE754", "writeFloat", "littleEndian", "writeDouble", "targetStart", "code", "errors", "E", "sym", "getMessage", "Base", "name", "range", "input", "msg", "received", "addNumericalSeparator", "checkBounds", "type", "INVALID_BASE64_RE", "base64clean", "units", "leadSurrogate", "byteArray", "c", "src", "dst", "alphabet", "table", "i16", "fn", "BufferBigIntNotDefined", "ReplicaRejectCode", "exports", "AgentError", "_AgentError", "message", "exports", "concat", "buffers", "result", "acc", "curr", "index", "b", "exports", "toHexString", "bytes", "str", "byte", "fromHexString", "hexString", "_a", "PipeArrayBuffer", "buffer", "length", "bufFromBufLike", "num", "buf", "offset", "amount", "v", "uint8ToBuf", "arr", "bufLike", "idlHash", "s", "array", "h", "c", "idlLabelToId", "label", "num", "exports", "buffer_1", "eob", "safeRead", "pipe", "num", "exports", "safeReadUint8", "byte", "lebEncode", "value", "byteLength", "i", "lebDecode", "weight", "slebEncode", "isNeg", "getLowerBytes", "bytes", "slebDecode", "pipeView", "len", "writeUIntLE", "writeIntLE", "mul", "sub", "readUIntLE", "val", "readIntLE", "ilog2", "n", "nBig", "exports", "iexp2", "principal_1", "buffer_1", "hash_1", "leb128_1", "bigint_math_1", "magicNumber", "toReadableString_max", "zipWith", "xs", "ys", "f", "x", "TypeTable", "obj", "type", "buf", "idx", "knot", "knotIdx", "len", "typeName", "Visitor", "t", "data", "ty", "fields", "components", "i", "exports", "Type", "toReadableString", "typeTable", "PrimitiveType", "ConstructType", "RecClass", "EmptyClass", "v", "d", "UnknownClass", "b", "decodedValue", "typeFunc", "BoolClass", "NullClass", "ReservedClass", "TextClass", "IntClass", "NatClass", "FloatClass", "_bits", "view", "opcode", "bytes", "FixedIntClass", "min", "max", "ok", "offset", "num", "FixedNatClass", "VecClass", "_VecClass", "_type", "bits", "e", "encoded", "opCode", "buffer", "vec", "rets", "OptClass", "_OptClass", "opt", "RecordClass", "_RecordClass", "a", "res", "key", "k", "values", "bufs", "c", "T", "_", "value", "record", "expectedRecordIdx", "actualRecordIdx", "hash", "expectKey", "expectType", "expectedId", "actualId", "TupleClass", "_TupleClass", "_components", "tuple", "wireType", "VariantClass", "_VariantClass", "name", "variant", "wireHash", "_RecClass", "decodePrincipalId", "PrincipalClass", "FuncClass", "argTypes", "retTypes", "annotations", "types", "principal", "methodName", "canister", "method", "methodLen", "arg", "argLen", "args", "retLen", "annLen", "anns", "mLen", "annon", "str", "ann", "ServiceClass", "func", "meths", "label", "labelBuf", "labelLen", "_key", "encode", "magic", "table", "typs", "vals", "decode", "magicBuffer", "readTypeTable", "pipe", "objectLength", "prevHash", "argLength", "returnValues", "returnValuesLength", "annotationLength", "servLength", "methods", "nameLength", "funcName", "funcType", "rawList", "length", "rawTable", "rawTypes", "Rec", "getType", "buildType", "entry", "Vec", "Opt", "Record", "Tuple", "Variant", "Func", "rec", "typeRef", "Service", "output", "ind", "ret", "InputBox", "idl", "ui", "status", "config", "value", "input", "err", "dom", "container", "label", "exports", "InputForm", "e", "form", "oldContainer", "RecordForm", "fields", "key", "type", "v", "_", "i", "TupleForm", "components", "VariantForm", "index", "variant", "select", "selected", "OptionForm", "ty", "opt", "VecForm", "len", "t", "IDL", "__importStar", "principal_1", "UI", "InputConfig", "parsePrimitive", "FormConfig", "renderInput", "inputBox", "config", "exports", "recordForm", "fields", "tupleForm", "components", "variantForm", "optForm", "ty", "vecForm", "Render", "t", "d", "input", "container", "form", "select", "key", "type", "option", "checkbox", "len", "Parse", "v", "x", "Random", "signed", "num", "renderValue", "value", "RenderValue", "open", "i", "selected", "require_types", "__commonJSMin", "exports", "__exportStar", "exports", "__importStar", "require_bignumber", "__commonJSMin", "exports", "module", "globalObject", "BigNumber", "isNumeric", "mathceil", "mathfloor", "bignumberError", "tooManyDigits", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "POWS_TEN", "SQRT_BASE", "MAX", "clone", "configObject", "div", "convertBase", "parseNumeric", "P", "ONE", "DECIMAL_PLACES", "ROUNDING_MODE", "TO_EXP_NEG", "TO_EXP_POS", "MIN_EXP", "MAX_EXP", "CRYPTO", "MODULO_MODE", "POW_PRECISION", "FORMAT", "ALPHABET", "alphabetHasNormalDecimalDigits", "v", "b", "alphabet", "c", "caseChanged", "e", "i", "isNum", "len", "str", "x", "intCheck", "round", "obj", "p", "n", "s", "out", "maxOrMin", "pow2_53", "random53bitInt", "dp", "a", "k", "rand", "args", "sum", "decimal", "toBaseOut", "baseIn", "baseOut", "j", "arr", "arrL", "sign", "callerIsToString", "d", "r", "xc", "y", "rm", "toFixedPoint", "coeffToString", "multiply", "base", "m", "temp", "xlo", "xhi", "carry", "klo", "khi", "compare", "aL", "bL", "cmp", "subtract", "more", "prod", "prodL", "q", "qc", "rem", "remL", "rem0", "xi", "xL", "yc0", "yL", "yz", "yc", "bitFloor", "format", "id", "c0", "ne", "toExponential", "normalise", "basePrefix", "dotAfter", "dotBefore", "isInfinityOrNaN", "whitespaceOrPlus", "p1", "p2", "sd", "ni", "rd", "pows10", "valueOf", "half", "isModExp", "nIsBig", "nIsNeg", "nIsOdd", "isOdd", "t", "xLTy", "xe", "ye", "xcL", "ycL", "ylo", "yhi", "zc", "sqrtBase", "rep", "g1", "g2", "groupSeparator", "intPart", "fractionPart", "isNeg", "intDigits", "md", "d0", "d1", "d2", "exp", "n0", "n1", "l", "min", "max", "name", "zs", "require_decoder_asm", "__commonJSMin", "exports", "module", "stdlib", "foreign", "buffer", "heap", "pushInt", "pushInt32", "pushInt32Neg", "pushInt64", "pushInt64Neg", "pushFloat", "pushFloatSingle", "pushFloatDouble", "pushTrue", "pushFalse", "pushUndefined", "pushNull", "pushInfinity", "pushInfinityNeg", "pushNaN", "pushNaNNeg", "pushArrayStart", "pushArrayStartFixed", "pushArrayStartFixed32", "pushArrayStartFixed64", "pushObjectStart", "pushObjectStartFixed", "pushObjectStartFixed32", "pushObjectStartFixed64", "pushByteString", "pushByteStringStart", "pushUtf8String", "pushUtf8StringStart", "pushSimpleUnassigned", "pushTagStart", "pushTagStart4", "pushTagStart8", "pushTagUnassigned", "pushBreak", "pow", "offset", "inputLength", "code", "parse", "input", "jumpTable", "checkOffset", "n", "readUInt16", "readUInt32", "INT_P", "octet", "UINT_P_8", "UINT_P_16", "UINT_P_32", "UINT_P_64", "INT_N", "UINT_N_8", "UINT_N_16", "val", "UINT_N_32", "UINT_N_64", "BYTE_STRING", "start", "end", "step", "BYTE_STRING_8", "length", "BYTE_STRING_16", "BYTE_STRING_32", "BYTE_STRING_64", "BYTE_STRING_BREAK", "UTF8_STRING", "UTF8_STRING_8", "UTF8_STRING_16", "UTF8_STRING_32", "UTF8_STRING_64", "UTF8_STRING_BREAK", "ARRAY", "ARRAY_8", "ARRAY_16", "ARRAY_32", "ARRAY_64", "ARRAY_BREAK", "MAP", "MAP_8", "MAP_16", "MAP_32", "MAP_64", "MAP_BREAK", "TAG_KNOWN", "TAG_BIGNUM_POS", "TAG_BIGNUM_NEG", "TAG_FRAC", "TAG_BIGNUM_FLOAT", "TAG_UNASSIGNED", "TAG_BASE64_URL", "TAG_BASE64", "TAG_BASE16", "TAG_MORE_1", "TAG_MORE_2", "TAG_MORE_4", "TAG_MORE_8", "SIMPLE_UNASSIGNED", "SIMPLE_FALSE", "SIMPLE_TRUE", "SIMPLE_NULL", "SIMPLE_UNDEFINED", "SIMPLE_BYTE", "SIMPLE_FLOAT_HALF", "f", "g", "sign", "exp", "mant", "r", "SIMPLE_FLOAT_SINGLE", "SIMPLE_FLOAT_DOUBLE", "ERROR", "BREAK", "require_constants", "__commonJSMin", "exports", "Bignumber", "require_utils", "__commonJSMin", "exports", "Buffer", "Bignumber", "constants", "SHIFT32", "SHIFT16", "MAX_SAFE_HIGH", "buf", "exp", "mant", "sign", "toHex", "n", "len", "res", "i", "obj", "keys", "length", "f", "g", "f1", "f2", "g1", "g2", "half", "u32", "u", "s16", "a", "b", "lenA", "lenB", "x", "count", "require_simple", "__commonJSMin", "exports", "module", "constants", "MT", "SIMPLE", "SYMS", "Simple", "_Simple", "value", "gen", "obj", "val", "hasParent", "require_tagged", "__commonJSMin", "exports", "module", "Tagged", "_Tagged", "tag", "value", "err", "gen", "converters", "er", "f", "error", "require_url", "__commonJSMin", "exports", "module", "URL", "URLSearchParams", "format", "defaultBase", "URLWithLegacySupport", "url", "base", "require_relative", "__commonJSMin", "exports", "module", "URLWithLegacySupport", "format", "url", "location", "protocolMap", "defaultProtocol", "protocol", "urlParsed", "base", "require_iso_url", "__commonJSMin", "exports", "module", "URLWithLegacySupport", "format", "URLSearchParams", "defaultBase", "relative", "require_decoder", "__commonJSMin", "exports", "module", "Buffer", "ieee754", "Bignumber", "parser", "utils", "c", "Simple", "Tagged", "URL", "Decoder", "_Decoder", "opts", "val", "v", "p", "hasChildren", "obj", "type", "len", "tagNumber", "value", "typ", "arr", "raw", "start", "end", "f", "g", "f1", "f2", "g1", "g2", "a", "b", "d", "e", "h", "len1", "len2", "len3", "len4", "tag", "input", "code", "enc", "require_diagnose", "__commonJSMin", "exports", "module", "Buffer", "Decoder", "utils", "Diagnose", "_Diagnose", "tagNumber", "value", "val", "f", "g", "f1", "f2", "g1", "g2", "fl", "a", "b", "c", "d", "e", "h", "raw", "len", "start", "end", "arr", "map", "list", "collectObject", "obj", "input", "enc", "acc", "key", "require_encoder", "__commonJSMin", "exports", "module", "Buffer", "URL", "Bignumber", "utils", "constants", "MT", "NUMBYTES", "SHIFT32", "SYMS", "TAG", "HALF", "FLOAT", "DOUBLE", "TRUE", "FALSE", "UNDEFINED", "NULL", "MAXINT_BN", "BUF_NAN", "BUF_INF_NEG", "BUF_INF_POS", "toType", "obj", "Encoder", "_Encoder", "options", "addTypes", "len", "type", "fun", "old", "val", "method", "half", "b2", "b4", "mt", "orig", "m", "gen", "j", "tag", "x", "str", "buf", "dec", "slide", "i", "f", "keys", "keyLength", "k", "map", "a", "typ", "result", "resultLength", "resultMethod", "offset", "size", "res", "index", "length", "tmp", "o", "enc", "require_src", "__commonJSMin", "exports", "concat", "buffers", "result", "acc", "curr", "index", "b", "exports", "toHex", "buffer", "x", "hexRe", "fromHex", "hex", "compare", "b1", "b2", "u1", "u2", "bufEquals", "uint8ToBuf", "arr", "bufFromBufLike", "bufLike", "candid_1", "borc_1", "__importDefault", "sha256_1", "buffer_1", "hash", "data", "exports", "hashValue", "value", "hashString", "vals", "hashOfMap", "encoded", "requestIdOf", "request", "map", "sorted", "key", "hashedKey", "hashedValue", "k1", "k2", "concatenated", "x", "principal_1", "request_id_1", "buffer_1", "domainSeparator", "SignIdentity", "request", "body", "fields", "__rest", "requestId", "exports", "AnonymousIdentity", "createIdentityDescriptor", "identity", "MAX_U64_NUMBER", "_concat", "a", "args", "newBuffer", "acc", "b", "i", "_serializeValue", "major", "minor", "value", "length", "bytes", "byte", "_serializeNumber", "_serializeString", "str", "utf8", "charcode", "tagged", "tag", "exports", "raw", "uSmall", "n", "u8", "radix", "u16", "u32", "u64", "iSmall", "i8", "i16", "i32", "i64", "done", "newI64", "x", "number", "string", "array", "items", "map", "stable", "entries", "keyA", "keyB", "k", "v", "singleFloat", "f", "single", "doubleFloat", "bool", "true_", "false_", "null_", "undefined_", "cbor", "__importStar", "BufferClasses", "JsonDefaultCborEncoder", "_serializer", "_stable", "value", "x", "m", "key", "item", "exports", "ToCborEncoder", "CborSerializer", "stable", "s", "name", "encoder", "chosenEncoder", "SelfDescribeCborSerializer", "__export", "value", "__importStar", "exports", "borc_1", "__importDefault", "cbor", "__importStar", "simple_cbor_1", "buffer_1", "PrincipalEncoder", "value", "v", "BufferEncoder", "BigIntEncoder", "serializer", "CborTag", "exports", "encode", "decodePositiveBigInt", "buf", "len", "res", "i", "Uint8ArrayDecoder", "raw", "start", "end", "decode", "input", "buffer", "val", "randomNumber", "array", "exports", "random_1", "SubmitRequestType", "exports", "makeNonce", "buffer", "view", "rand1", "rand2", "rand3", "rand4", "candid_1", "cbor", "__importStar", "types_1", "NANOSECONDS_PER_MILLISECONDS", "REPLICA_PERMITTED_DRIFT_MILLISECONDS", "Expiry", "deltaInMSec", "rounded_down_nanos", "exports", "makeNonceTransform", "nonceFn", "request", "headers", "makeExpiryTransform", "delayInMilliseconds", "httpHeadersTransform", "headerFields", "value", "key", "errors_1", "AgentHTTPResponseError", "message", "response", "exports", "_0n", "_1n", "_2n", "isBytes", "a", "exports", "abytes", "item", "hexes", "_", "i", "bytesToHex", "bytes", "hex", "numberToHexUnpadded", "num", "hexToNumber", "asciis", "asciiToBase16", "char", "hexToBytes", "hl", "al", "array", "ai", "hi", "n1", "n2", "bytesToNumberBE", "bytesToNumberLE", "numberToBytesBE", "n", "len", "numberToBytesLE", "numberToVarBytesBE", "ensureBytes", "title", "expectedLength", "res", "e", "concatBytes", "arrays", "sum", "pad", "equalBytes", "b", "diff", "utf8ToBytes", "str", "bitLen", "bitGet", "pos", "bitSet", "value", "bitMask", "u8n", "data", "u8fr", "arr", "createHmacDrbg", "hashLen", "qByteLen", "hmacFn", "v", "k", "reset", "h", "reseed", "seed", "gen", "out", "sl", "pred", "validatorFns", "val", "object", "validateObject", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "utils_js_1", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "exports", "pow", "num", "power", "modulo", "res", "pow2", "x", "invert", "number", "y", "u", "v", "q", "r", "m", "n", "tonelliShanks", "P", "legendreC", "Q", "S", "Z", "p1div4", "Fp", "root", "Q1div2", "g", "t2", "ge", "FpSqrt", "c1", "n2", "nv", "i", "isNegativeLE", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "FpPow", "f", "p", "d", "FpInvertBatch", "nums", "tmp", "lastMultiplied", "acc", "inverted", "FpDiv", "lhs", "rhs", "FpIsSquare", "legendreConst", "nLength", "nBitLength", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "BITS", "BYTES", "sqrtP", "lst", "c", "bytes", "FpSqrtOdd", "elm", "FpSqrtEven", "hashToPrivateScalar", "hash", "groupOrder", "hashLen", "minLen", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "len", "fieldLen", "reduced", "modular_js_1", "utils_js_1", "os2ip", "i2osp", "value", "length", "res", "i", "strxor", "a", "b", "arr", "anum", "item", "expand_message_xmd", "msg", "DST", "lenInBytes", "H", "b_in_bytes", "r_in_bytes", "ell", "DST_prime", "Z_pad", "l_i_b_str", "b_0", "args", "exports", "expand_message_xof", "k", "dkLen", "hash_to_field", "count", "options", "p", "m", "hash", "expand", "_DST", "log2p", "L", "len_in_bytes", "prb", "u", "e", "j", "elm_offset", "tv", "isogenyMap", "field", "map", "COEFF", "x", "y", "xNum", "xDen", "yNum", "yDen", "val", "acc", "createHasher", "Point", "mapToCurve", "def", "u0", "u1", "P", "modular_js_1", "utils_js_1", "_0n", "_1n", "wNAF", "c", "bits", "constTimeNegate", "condition", "item", "neg", "opts", "W", "windows", "windowSize", "elm", "n", "p", "d", "points", "base", "window", "i", "precomputes", "mask", "maxNumber", "shiftBy", "offset", "wbits", "offset1", "offset2", "cond1", "cond2", "P", "precomputesMap", "transform", "comp", "exports", "validateBasic", "curve", "mod", "ut", "utils_js_1", "curve_js_1", "validatePointOpts", "curve", "opts", "endo", "Fp", "a", "b2n", "h2b", "exports", "m", "data", "E", "len", "res", "hex", "l", "r", "sBytes", "s", "rBytesLeft", "sig", "slice", "h", "num", "shl", "rhl", "sl", "rl", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "toBytes", "_c", "point", "_isCompressed", "fromBytes", "bytes", "tail", "x", "y", "weierstrassEquation", "b", "x2", "x3", "isWithinCurveOrder", "assertGE", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "n", "pointPrecomputes", "assertPrjPoint", "other", "Point", "px", "py", "pz", "p", "is0", "i", "points", "toInv", "P", "privateKey", "windowSize", "left", "right", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "wnaf", "comp", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "G", "mul", "sum", "iz", "z", "ax", "ay", "zz", "cofactor", "isTorsionFree", "clearCofactor", "isCompressed", "_bits", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invN", "cat", "head", "y2", "sqrtError", "suffix", "isYOdd", "numToNByteStr", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "slcNum", "from", "to", "Signature", "recovery", "msgHash", "rec", "bits2int_modN", "radj", "prefix", "ir", "u1", "u2", "utils", "length", "getPublicKey", "isProbPub", "item", "arr", "str", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "verify", "signature", "publicKey", "sg", "_sig", "derError", "error", "is", "R", "SWUFpSqrtRatio", "Z", "o", "c1", "_2n_pow_c1_1", "_2n_pow_c1", "c2", "c3", "c4", "c5", "c6", "c7", "sqrtRatio", "u", "v", "tv1", "tv2", "tv3", "tv5", "tv4", "isQR", "tvv5", "e1", "y1", "mapToCurveSimpleSWU", "tv6", "isValid", "value", "modular_js_1", "utils_js_1", "hash_to_curve_js_1", "weierstrass_js_1", "_2n", "_3n", "bls", "CURVE", "Fp", "Fr", "Fp2", "Fp6", "Fp12", "BLS_X_LEN", "calcPairingPrecomputes", "p", "x", "y", "Qx", "Qy", "Qz", "Rx", "Ry", "Rz", "ell_coeff", "i", "t0", "t1", "t2", "t3", "t4", "t5", "millerLoop", "ell", "g1", "Px", "Py", "f12", "j", "E", "F", "utils", "length", "G1_", "G1", "pairingPrecomputes", "point", "G2_", "G2", "ShortSignature", "Signature", "pairing", "Q", "P", "withFinalExponent", "Qa", "looped", "normP1", "normP1Hash", "htfOpts", "normP2", "normP2Hash", "getPublicKey", "privateKey", "getPublicKeyForShortSignatures", "sign", "message", "msgPoint", "sigPoint", "signShortSignature", "verify", "signature", "publicKey", "Hm", "G", "S", "ePHm", "eGS", "exp", "verifyShortSignature", "eHmP", "eSG", "aggregatePublicKeys", "publicKeys", "aggAffine", "sum", "aggregateSignatures", "signatures", "s", "aggregateShortSignatures", "verifyBatch", "messages", "sig", "nMessages", "nPublicKeys", "paired", "groupPublicKey", "subMessage", "product", "a", "b", "exports", "sha256_1", "utils_1", "bls_js_1", "mod", "utils_js_1", "weierstrass_js_1", "hash_to_curve_js_1", "_0n", "_1n", "_2n", "_3n", "_4n", "_8n", "_16n", "Fp_raw", "Fp", "Fr", "Fp2Add", "c0", "c1", "r0", "r1", "Fp2Subtract", "Fp2Multiply", "rhs", "t1", "t2", "o0", "o1", "Fp2Square", "a", "b", "c", "FP2_ORDER", "Fp2", "num", "power", "nums", "lhs", "factor", "candidateSqrt", "check", "R", "FP2_ROOTS_OF_UNITY", "divisor", "r", "index", "root", "x1", "x2", "re1", "im1", "re2", "im2", "x", "x0", "sign_0", "zero_0", "sign_1", "t0", "tuple", "fps", "n", "FP2_FROBENIUS_COEFFICIENTS", "item", "rv1", "pair", "Fp6Add", "c2", "r2", "Fp6Subtract", "Fp6Multiply", "Fp6Square", "t3", "t4", "Fp6", "FP6_FROBENIUS_COEFFICIENTS_1", "FP6_FROBENIUS_COEFFICIENTS_2", "b1", "b0", "BLS_X", "BLS_X_LEN", "Fp12Add", "Fp12Subtract", "Fp12Multiply", "Fp12Square", "ab", "Fp4Square", "a2", "b2", "Fp12", "t", "coeff", "FP12_FROBENIUS_COEFFICIENTS", "o4", "c0c0", "c0c1", "c0c2", "c1c0", "c1c1", "c1c2", "t5", "t6", "t7", "t8", "t9", "z", "i", "t2_t5_pow_q2", "t4_t1_pow_q3", "t6_t1c_pow_q1", "t7_t3c_t1", "isogenyMapG2", "isogenyMapG1", "j", "G2_SWU", "G1_SWU", "ut_root", "wsq", "wcu", "wsq_inv", "wcu_inv", "psi", "y", "y2", "G2psi", "P", "affine", "p", "PSI2_C1", "psi2", "G2psi2", "htfDefaults", "COMPRESSED_ZERO", "setMask", "parseMask", "bytes", "mask", "compressed", "infinity", "sort", "signatureG1ToRawBytes", "point", "isZero", "exports", "signatureG2ToRawBytes", "len", "y0", "y1", "z2", "cubicRootOfUnityModP", "phi", "_c", "scalars", "value", "compressedValue", "right", "isCompressed", "hex", "aflag", "L", "slc", "from", "to", "x_1", "x_0", "Y_bit", "flag", "half", "z1", "aflag1", "isGreater", "bls12_381_1", "buffer_1", "blsVerify", "pk", "sig", "msg", "primaryKey", "signature", "message", "exports", "candid_1", "decodeLeb128", "buf", "exports", "decodeTime", "decoded", "cbor", "__importStar", "errors_1", "request_id_1", "buffer_1", "principal_1", "bls", "leb_1", "CertificateVerificationError", "reason", "exports", "NodeId", "hashTreeToString", "tree", "indent", "s", "x", "labelToString", "label", "decoder", "left", "right", "sub", "isBufferEqual", "a", "b", "a8", "b8", "Certificate", "_Certificate", "certificate", "_rootKey", "_canisterId", "_blsVerify", "_maxAgeInMinutes", "options", "cert", "blsVerify", "path", "lookupResultToBuffer", "lookup_path", "rootHash", "reconstruct", "derKey", "sig", "key", "extractDER", "msg", "domain_sep", "sigVer", "lookupTime", "FIVE_MINUTES_IN_MSEC", "MAX_AGE_IN_MSEC", "now", "earliestCertificateTime", "fiveMinutesFromNow", "certTime", "d", "check_canister_ranges", "publicKeyLookup", "DER_PREFIX", "KEY_LENGTH", "buf", "expectedLength", "prefix", "result", "len", "str", "t", "find_label", "flatten_forks", "l", "trees", "p", "params", "canisterId", "subnetId", "rangeLookup", "v", "r", "principal_1", "errors_1", "certificate_1", "buffer_1", "Cbor", "__importStar", "leb_1", "CustomPath", "key", "path", "decodeStrategy", "exports", "request", "options", "agent", "paths", "canisterId", "uniquePaths", "encodedPaths", "status", "promises", "index", "response", "cert", "lookup", "data", "decodeControllers", "decodeHex", "decodeCbor", "decodeUtf8", "error", "_a", "fetchNodeKeys", "certificate", "root_key", "tree", "delegation", "subnetId", "nodeTree", "nodeForks", "nodeKeys", "fork", "node_id", "derEncodedPublicKey", "encodePath", "encoder", "encode", "arg", "canisterBuffer", "metaPath", "encoded", "buf", "U32_MASK64", "_32n", "fromBig", "n", "le", "exports", "split", "lst", "Ah", "Al", "h", "l", "toBig", "shrSH", "_l", "s", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "_h", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "Bh", "Bl", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "u64", "_md_js_1", "_u64_js_1", "utils_js_1", "SHA512_Kh", "SHA512_Kl", "n", "SHA512_W_H", "SHA512_W_L", "SHA512", "Ah", "Al", "Bh", "Bl", "Ch", "Cl", "Dh", "Dl", "Eh", "El", "Fh", "Fl", "Gh", "Gl", "Hh", "Hl", "view", "offset", "i", "W15h", "W15l", "s0h", "s0l", "W2h", "W2l", "s1h", "s1l", "SUMl", "SUMh", "sigma1h", "sigma1l", "CHIh", "CHIl", "T1ll", "T1h", "T1l", "sigma0h", "sigma0l", "MAJh", "MAJl", "All", "exports", "SHA512_224", "SHA512_256", "SHA384", "modular_js_1", "ut", "utils_js_1", "curve_js_1", "_0n", "_1n", "_2n", "_8n", "VERIFY_DEFAULT", "validateOpts", "curve", "opts", "twistedEdwards", "curveDef", "CURVE", "Fp", "CURVE_ORDER", "prehash", "cHash", "randomBytes", "nByteLength", "cofactor", "MASK", "modP", "uvRatio", "u", "v", "adjustScalarBytes", "bytes", "domain", "data", "ctx", "phflag", "inBig", "n", "inRange", "max", "in0MaskRange", "assertInRange", "assertGE0", "pointPrecomputes", "isPoint", "other", "Point", "ex", "ey", "ez", "et", "p", "x", "y", "points", "toInv", "i", "windowSize", "a", "d", "X", "Y", "Z", "T", "X2", "Y2", "Z2", "Z4", "aX2", "left", "right", "XY", "ZT", "X1", "Y1", "Z1", "X1Z2", "X2Z1", "Y1Z2", "Y2Z1", "A", "B", "C", "D", "x1y1", "E", "G", "F", "H", "X3", "Y3", "T3", "Z3", "T1", "T2", "wnaf", "scalar", "f", "I", "iz", "z", "is0", "ax", "ay", "zz", "hex", "zip215", "len", "normed", "lastByte", "y2", "isValid", "isXOdd", "isLastByteOdd", "privKey", "getExtendedPublicKey", "modN", "modN_LE", "hash", "key", "hashed", "head", "prefix", "point", "pointBytes", "getPublicKey", "hashDomainToScalar", "context", "msgs", "msg", "sign", "options", "r", "R", "k", "s", "res", "verifyOpts", "verify", "sig", "publicKey", "SB", "exports", "modular_js_1", "utils_js_1", "_0n", "_1n", "validateOpts", "curve", "montgomery", "curveDef", "CURVE", "P", "modP", "n", "montgomeryBits", "montgomeryBytes", "fieldLen", "adjustScalarBytes", "bytes", "powPminus2", "x", "cswap", "swap", "x_2", "x_3", "dummy", "assertFieldElement", "a24", "montgomeryLadder", "pointU", "scalar", "u", "x_1", "z_2", "z_3", "sw", "t", "k_t", "A", "AA", "B", "BB", "E", "C", "D", "DA", "CB", "dacb", "da_cb", "z2", "encodeUCoordinate", "decodeUCoordinate", "uEnc", "decodeScalar", "len", "scalarMult", "_scalar", "pu", "GuBytes", "scalarMultBase", "privateKey", "publicKey", "exports", "sha512_1", "utils_1", "edwards_js_1", "montgomery_js_1", "modular_js_1", "utils_js_1", "hash_to_curve_js_1", "ED25519_P", "ED25519_SQRT_M1", "_0n", "_1n", "_2n", "_5n", "_10n", "_20n", "_40n", "_80n", "ed25519_pow_2_252_3", "x", "P", "b2", "b4", "b5", "b10", "b20", "b40", "b80", "b160", "b240", "b250", "adjustScalarBytes", "bytes", "uvRatio", "u", "v", "v3", "v7", "pow", "vx2", "root1", "root2", "useRoot1", "useRoot2", "noRoot", "exports", "Fp", "ed25519Defaults", "ed25519_domain", "data", "ctx", "phflag", "pow_p_5_8", "edwardsToMontgomeryPub", "edwardsPub", "y", "edwardsToMontgomeryPriv", "edwardsPriv", "hashed", "ELL2_C1", "ELL2_C2", "ELL2_C3", "ELL2_C4", "ELL2_J", "map_to_curve_elligator2_curve25519", "tv1", "xd", "x1n", "tv2", "gxd", "gx1", "tv3", "y11", "y12", "e1", "y1", "x2n", "y21", "y22", "gx2", "e2", "y2", "e3", "xn", "e4", "ELL2_C1_EDWARDS", "map_to_curve_elligator2_edwards25519", "xMn", "xMd", "yMn", "yMd", "yn", "yd", "e", "inv", "htf", "scalars", "assertRstPoint", "other", "RistPoint", "SQRT_M1", "SQRT_AD_MINUS_ONE", "INVSQRT_A_MINUS_D", "ONE_MINUS_D_SQ", "D_MINUS_ONE_SQ", "invertSqrt", "number", "MAX_255B", "bytes255ToNumberLE", "calcElligatorRistrettoMap", "r0", "d", "mod", "r", "Ns", "c", "D", "Ns_D_is_sq", "s", "s_", "Nt", "s2", "W0", "W1", "W2", "W3", "_RistPoint", "ep", "ap", "hex", "r1", "R1", "r2", "R2", "a", "emsg", "u1", "u2", "u1_2", "u2_2", "isValid", "I", "Dx", "Dy", "t", "z", "u2sq", "invsqrt", "D1", "D2", "zInv", "_x", "_y", "X1", "Y1", "X2", "Y2", "one", "two", "scalar", "hashToRistretto255", "msg", "options", "DST", "uniform_bytes", "ExpirableMap", "options", "_ExpirableMap_inner", "_ExpirableMap_expirationTime", "_a", "_b", "source", "expirationTime", "currentTime", "__classPrivateFieldSet", "key", "value", "entry", "__classPrivateFieldGet", "iterator", "callbackfn", "thisArg", "exports", "buffer_1", "encodeLenBytes", "len", "exports", "encodeLen", "buf", "offset", "decodeLenBytes", "decodeLen", "lenBytes", "wrapDER", "payload", "oid", "bitStringHeaderLength", "unwrapDER", "derEncoded", "expect", "n", "msg", "payloadLen", "result", "der_1", "Ed25519PublicKey", "_Ed25519PublicKey", "key", "_Ed25519PublicKey_rawKey", "_Ed25519PublicKey_derKey", "__classPrivateFieldSet", "rawKey", "derKey", "publicKey", "unwrapped", "__classPrivateFieldGet", "exports", "Observable", "target", "_", "args", "__classPrivateFieldGet", "_Observable_instances", "_Observable_call", "func", "observer", "data", "rest", "exports", "message", "ObservableLog", "_ObservableLog_instances", "_ObservableLog_call", "error", "principal_1", "errors_1", "auth_1", "cbor", "__importStar", "request_id_1", "buffer_1", "transforms_1", "types_1", "errors_2", "canisterStatus_1", "certificate_1", "ed25519_1", "expirableMap_1", "public_key_1", "leb_1", "observable_1", "__exportStar", "exports", "types_2", "RequestStatusResponseStatus", "DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS", "IC0_DOMAIN", "IC0_SUB_DOMAIN", "ICP0_DOMAIN", "ICP0_SUB_DOMAIN", "ICP_API_DOMAIN", "ICP_API_SUB_DOMAIN", "HttpDefaultFetchError", "message", "IdentityInvalidError", "getDefaultFetch", "defaultFetch", "HttpAgent", "_HttpAgent", "options", "_HttpAgent_waterMark", "_HttpAgent_queryPipeline", "_HttpAgent_updatePipeline", "_HttpAgent_subnetKeys", "_HttpAgent_verifyQuerySignatures", "_HttpAgent_verifyQueryResponse", "queryResponse", "subnetStatus", "__classPrivateFieldGet", "status", "signatures", "requestId", "domainSeparator", "sig", "timestamp", "identity", "nodeId", "hash", "reply", "reject_code", "reject_message", "error_code", "separatorWithHash", "pubKey", "rawKey", "location", "knownHosts", "remoteHosts", "hostname", "knownHost", "host", "__classPrivateFieldSet", "_a", "name", "password", "log", "type", "fn", "priority", "x", "canisterId", "id", "canister", "ecid", "sender", "ingress_expiry", "submit", "transformedRequest", "body", "request", "response", "responseBuffer", "responseBody", "tries", "error", "responseText", "errorMessage", "fields", "makeQuery", "args", "_HttpAgent_instances", "_HttpAgent_requestAndRetryQuery", "getSubnetStatus", "query", "updatedSubnetStatus", "decodedResponse", "parsedTime", "tree", "decoded", "timeLookup", "date", "CanisterStatus", "callTime", "replicaTime", "headers", "effectiveCanisterId", "subnetResponse", "p", "r", "r2", "fetchResponse", "_b", "timeStampInMs", "principal_1", "ProxyMessageKind", "exports", "ProxyStubAgent", "_frontend", "_agent", "msg", "response", "ProxyAgent", "_backend", "id", "maybePromise", "resolve", "reject", "principal", "canisterId", "fields", "rootKey", "__exportStar", "exports", "getDefaultAgent", "agent", "buffer_1", "FIVE_MINUTES_IN_MSEC", "defaultStrategy", "chain", "conditionalDelay", "once", "backoff", "timeout", "exports", "first", "condition", "timeInMsec", "canisterId", "requestId", "status", "resolve", "maxAttempts", "count", "attempts", "throttle", "throttleInMsec", "end", "startingThrottleInMsec", "backoffFactor", "currentThrottling", "strategies", "a", "agent_1", "certificate_1", "buffer_1", "exports", "__importStar", "strategy_1", "pollForResponse", "agent", "canisterId", "requestId", "strategy", "request", "blsVerify", "path", "currentRequest", "_a", "state", "cert", "maybeBuf", "status", "rejectCode", "rejectMessage", "exports", "IDL", "bitcoin_network", "bitcoin_address", "bitcoin_get_balance_args", "satoshi", "bitcoin_get_balance_result", "bitcoin_get_balance_query_args", "bitcoin_get_balance_query_result", "bitcoin_get_current_fee_percentiles_args", "millisatoshi_per_byte", "bitcoin_get_current_fee_percentiles_result", "bitcoin_get_utxos_args", "block_hash", "outpoint", "utxo", "bitcoin_get_utxos_result", "bitcoin_get_utxos_query_args", "bitcoin_get_utxos_query_result", "bitcoin_send_transaction_args", "canister_id", "canister_info_args", "change_origin", "change_details", "change", "canister_info_result", "canister_status_args", "log_visibility", "definite_canister_settings", "canister_status_result", "clear_chunk_store_args", "canister_settings", "create_canister_args", "create_canister_result", "delete_canister_args", "deposit_cycles_args", "ecdsa_curve", "ecdsa_public_key_args", "ecdsa_public_key_result", "fetch_canister_logs_args", "canister_log_record", "fetch_canister_logs_result", "http_header", "http_request_result", "http_request_args", "chunk_hash", "install_chunked_code_args", "wasm_module", "install_code_args", "node_metrics_history_args", "node_metrics", "node_metrics_history_result", "provisional_create_canister_with_cycles_args", "provisional_create_canister_with_cycles_result", "provisional_top_up_canister_args", "raw_rand_result", "sign_with_ecdsa_args", "sign_with_ecdsa_result", "start_canister_args", "stop_canister_args", "stored_chunks_args", "stored_chunks_result", "uninstall_code_args", "update_settings_args", "upload_chunk_args", "upload_chunk_result", "buffer_1", "agent_1", "errors_1", "candid_1", "polling_1", "principal_1", "buffer_2", "management_idl_1", "__importDefault", "ActorCallError", "canisterId", "methodName", "type", "props", "n", "exports", "QueryCallRejectedError", "result", "_a", "UpdateCallRejectedError", "requestId", "response", "metadataSymbol", "Actor", "_Actor", "metadata", "actor", "fields", "config", "mode", "arg", "wasmModule", "getManagementCanister", "settings", "settingsToCanisterSettings", "interfaceFactory", "options", "service", "CanisterActor", "DEFAULT_ACTOR_CONFIG", "func", "_createActorMethod", "configuration", "decodeReturnValue", "types", "msg", "returnValues", "blsVerify", "caller", "args", "_b", "agent", "cid", "effectiveCanisterId", "pollingStrategyFactory", "ecid", "pollStrategy", "responseBytes", "shouldIncludeHttpDetails", "handler", "transform", "_methodName", "first", "exports", "IDL", "actor_1", "asset_idl_1", "__importDefault", "createAssetCanisterActor", "config", "exports", "principal_1", "CanisterStatus", "__importStar", "http_1", "actor_1", "fetchCandid", "canisterId", "agent", "candid", "tmpHackInterface", "IDL", "exports", "__exportStar", "exports", "__importStar", "agent_1", "agent_2", "ed25519_1", "isObject", "value", "Ed25519PublicKey", "_Ed25519PublicKey", "key", "_Ed25519PublicKey_rawKey", "_Ed25519PublicKey_derKey", "__classPrivateFieldSet", "maybeKey", "view", "rawKey", "derKey", "publicKey", "unwrapped", "__classPrivateFieldGet", "exports", "Ed25519KeyIdentity", "_Ed25519KeyIdentity", "privateKey", "_Ed25519KeyIdentity_publicKey", "_Ed25519KeyIdentity_privateKey", "seed", "sk", "pk", "obj", "publicKeyDer", "privateKeyRaw", "json", "parsed", "secretKey", "challenge", "blob", "signature", "sig", "msg", "message", "x", "agent_1", "CryptoError", "_CryptoError", "message", "exports", "_getEffectiveCrypto", "subtleCrypto", "ECDSAKeyIdentity", "_ECDSAKeyIdentity", "keyPair", "derKey", "options", "extractable", "keyUsages", "effectiveCrypto", "key", "challenge", "params", "principal_1", "PartialIdentity", "inner", "_PartialIdentity_inner", "__classPrivateFieldSet", "__classPrivateFieldGet", "exports", "agent_1", "principal_1", "cbor", "__importStar", "partial_1", "domainSeparator", "requestDomainSeparator", "_parseBlob", "value", "Delegation", "pubkey", "expiration", "targets", "t", "p", "exports", "_createSingleDelegation", "from", "to", "delegation", "challenge", "signature", "DelegationChain", "_DelegationChain", "delegations", "publicKey", "options", "_a", "_b", "json", "parsedDelegations", "signedDelegation", "DelegationIdentity", "_inner", "_delegation", "key", "blob", "request", "body", "fields", "__rest", "requestId", "PartialDelegationIdentity", "_PartialDelegationIdentity", "inner", "_PartialDelegationIdentity_delegation", "__classPrivateFieldSet", "__classPrivateFieldGet", "isDelegationValid", "chain", "checks", "scopes", "maybeScope", "s", "scope", "none", "target", "agent_1", "borc_1", "__importDefault", "utils_1", "candid_1", "_coseToDerEncodedBlob", "cose", "_authDataToCose", "authData", "dataView", "idLenBytes", "v", "i", "credentialIdLength", "CosePublicKey", "_cose", "exports", "_createChallengeBuffer", "challenge", "c", "_createCredential", "credentialCreationOptions", "creds", "PubKeyCoseAlgo", "WebAuthnIdentity", "rawId", "authenticatorAttachment", "json", "publicKey", "response", "attObject", "_a", "blob", "result", "cbor", "ed25519_1", "exports", "__exportStar", "webauthn_1", "agent_1", "Secp256k1KeyIdentity", "events", "IdleManager", "options", "onIdle", "idleTimeout", "_resetTimer", "name", "debounce", "func", "wait", "timeout", "args", "context", "later", "scroll", "_a", "callback", "cb", "exit", "exports", "getIdbProxyableTypes", "idbProxyableTypes", "getCursorAdvanceMethods", "cursorAdvanceMethods", "promisifyRequest", "request", "promise", "resolve", "reject", "unlisten", "success", "error", "wrap", "value", "cursorRequestMap", "reverseTransformCache", "cacheDonePromiseForTransaction", "tx", "transactionDoneMap", "done", "complete", "replaceTraps", "callback", "idbProxyTraps", "wrapFunction", "func", "storeNames", "args", "unwrap", "transactionStoreNamesMap", "transformCachableValue", "instanceOfAny", "transformCache", "newValue", "init_wrap_idb_value", "__esmMin", "object", "constructors", "c", "target", "prop", "receiver", "build_exports", "__export", "deleteDB", "openDB", "unwrap", "wrap", "name", "version", "blocked", "upgrade", "blocking", "terminated", "request", "openPromise", "event", "db", "getMethod", "target", "prop", "cachedMethods", "targetFuncName", "useIndex", "isWrite", "writeMethods", "readMethods", "method", "storeName", "args", "tx", "init_build", "__esmMin", "init_wrap_idb_value", "replaceTraps", "oldTraps", "receiver", "idb_1", "storage_1", "AUTH_DB_NAME", "OBJECT_STORE_NAME", "_openDbStore", "dbName", "storeName", "version", "database", "_getValue", "db", "key", "_setValue", "value", "_removeValue", "IdbKeyVal", "_IdbKeyVal", "_db", "_storeName", "options", "_a", "exports", "db_1", "exports", "LocalStorage", "prefix", "_localStorage", "key", "value", "ls", "IdbStorage", "options", "_IdbStorage_options", "__classPrivateFieldSet", "resolve", "__classPrivateFieldGet", "db", "agent_1", "identity_1", "idleManager_1", "storage_1", "storage_2", "exports", "db_1", "IDENTITY_PROVIDER_DEFAULT", "IDENTITY_PROVIDER_ENDPOINT", "ECDSA_KEY_LABEL", "ED25519_KEY_LABEL", "INTERRUPT_CHECK_INTERVAL", "__exportStar", "AuthClient", "_identity", "_key", "_chain", "_storage", "idleManager", "_createOptions", "_idpWindow", "_eventHandler", "options", "storage", "_a", "keyType", "_b", "key", "maybeIdentityStorage", "fallbackLocalStorage", "localChain", "localKey", "error", "identity", "chain", "chainStorage", "_deleteStorage", "e", "_c", "idleOptions", "message", "onSuccess", "delegations", "signedDelegation", "delegationChain", "defaultTimeToLive", "identityProviderUrl", "_d", "checkInterruption", "event", "request", "err", "errorMessage", "onError", "import_principal", "isNullish", "argument", "nonNullish", "NullishError", "assertNonNullish", "value", "message", "JSON_KEY_BIGINT", "JSON_KEY_PRINCIPAL", "JSON_KEY_UINT8ARRAY", "jsonReplacer", "_key", "Principal", "jsonReviver", "mapValue", "key", "toNullable", "fromNullable", "toArray", "data", "blob", "fromArray", "isBrowser", "Store", "data", "callback", "callbackId", "id", "AuthStore", "_AuthStore", "Store", "authUser", "callback", "unsubscribe", "emit", "message", "detail", "$event", "DELEGATION_IDENTITY_EXPIRATION", "ALLOW_PIN_AUTHENTICATION", "II_POPUP", "NFID_POPUP", "INTERNET_COMPUTER_ORG", "DOCKER_CONTAINER_URL", "DOCKER_INTERNET_IDENTITY_ID", "EnvStore", "_EnvStore", "Store", "env", "callback", "unsubscribe", "popupCenter", "width", "height", "h", "c", "innerWidth", "innerHeight", "y", "x", "InternetIdentityProvider", "#domain", "domain", "windowed", "identityProviderUrl", "container", "EnvStore", "c", "INTERNET_COMPUTER_ORG", "env", "internetIdentityId", "t", "DOCKER_INTERNET_IDENTITY_ID", "containerHost", "protocol", "DOCKER_CONTAINER_URL", "popupCenter", "II_POPUP", "NFIDProvider", "#appName", "#logoUrl", "appName", "logoUrl", "NFID_POPUP", "import_auth_client", "createAuthClient", "mapData", "data", "B", "err", "toSetDoc", "doc", "data", "updated_at", "description", "g", "R", "toDelDoc", "fromDoc", "key", "owner", "docDescription", "rest", "j", "B", "import_principal", "toListParams", "matcher", "paginate", "order", "owner", "c", "g", "idlFactory", "IDL", "CommitBatch", "DeleteControllersArgs", "ControllerScope", "Controller", "DelDoc", "RulesType", "DepositCyclesArgs", "AssetKey", "AssetEncodingNoContent", "AssetNoContent", "StorageConfigIFrame", "StorageConfigRedirect", "StorageConfig", "Config", "Doc", "HttpRequest", "Memory", "StreamingCallbackToken", "StreamingStrategy", "HttpResponse", "StreamingCallbackHttpResponse", "InitAssetKey", "InitUploadResult", "ListOrderField", "ListOrder", "ListMatcher", "ListPaginate", "ListParams", "ListResults", "CustomDomain", "ListResults_1", "Permission", "Rule", "MemorySize", "SetController", "SetControllersArgs", "SetDoc", "SetRule", "UploadChunk", "UploadChunkResult", "import_agent", "createActor", "canisterId", "idlFactory", "identity", "fetch", "container", "host", "t", "DOCKER_CONTAINER_URL", "agent", "satelliteUrl", "customSatelliteId", "customContainer", "satelliteId", "customOrEnvSatelliteId", "container", "customOrEnvContainer", "t", "containerHost", "protocol", "DOCKER_CONTAINER_URL", "EnvStore", "getSatelliteActor", "customSatelliteId", "customContainer", "rest", "satelliteId", "customOrEnvSatelliteId", "x", "container", "customOrEnvContainer", "createActor", "idlFactory", "getDoc", "collection", "key", "satellite", "actor", "getSatelliteActor", "doc", "j", "c", "fromDoc", "getManyDocs", "docs", "get_many_docs", "payload", "resultsDocs", "results", "resultDoc", "t", "setDoc", "set_doc", "toSetDoc", "updatedDoc", "setManyDocs", "set_many_docs", "updatedDocs", "deleteDoc", "del_doc", "toDelDoc", "deleteManyDocs", "del_many_docs", "listDocs", "filter", "items", "items_page", "items_length", "matches_length", "matches_pages", "toListParams", "item", "dataArray", "owner", "description", "rest", "mapData", "import_agent", "getIdentity", "identity", "getDoc", "satellite", "rest", "identity", "getIdentity", "getManyDocs", "setDoc", "setManyDocs", "deleteDoc", "deleteManyDocs", "listDocs", "filter", "initUser", "provider", "identity", "getIdentity", "c", "userId", "user", "getDoc", "createUser", "rest", "setDoc", "authClient", "initAuth", "provider", "createAuthClient", "user", "initUser", "AuthStore", "signIn", "options", "resolve", "reject", "InternetIdentityProvider", "error", "DELEGATION_IDENTITY_EXPIRATION", "ALLOW_PIN_AUTHENTICATION", "signOut", "getIdentity", "unsafeIdentity", "initAuthTimeoutWorker", "auth", "workerUrl", "worker", "timeoutSignOut", "emit", "signOut", "data", "msg", "value", "AuthStore", "user", "c", "uploadAsset", "data", "filename", "collection", "headers", "token", "fullPath", "encoding", "description", "satellite", "actor", "getSatelliteActor", "batchId", "g", "chunkSize", "uploadChunks", "clone", "h", "orderId", "start", "chunk", "chunkIds", "results", "batchUploadChunks", "contentType", "type", "_", "chunk_id", "limit", "i", "batch", "params", "uploadChunk", "listAssets", "filter", "assets", "items_length", "items_page", "matches_length", "matches_pages", "toListParams", "asset", "j", "deleteAsset", "deleteManyAssets", "del_many_assets", "payload", "getAsset", "get_asset", "getManyAssets", "get_many_assets", "resultAsset", "sha256ToBase64String", "sha256", "c", "uploadBlob", "params", "uploadAssetIC", "uploadFile", "storageFilename", "data", "collection", "headers", "storagePath", "token", "satelliteOptions", "encoding", "description", "identity", "getIdentity", "filename", "fullPath", "satellite", "uploadAsset", "satelliteUrl", "listAssets", "filter", "items", "rest", "host", "full_path", "t", "name", "owner", "encodings", "created_at", "updated_at", "j", "acc", "type", "modified", "sha256", "total_length", "sha256ToBase64String", "deleteAsset", "deleteManyAssets", "assets", "getAsset", "getManyAssets", "initJuno", "env", "EnvStore", "initAuth", "authSubscribe", "initAuthTimeoutWorker", "callback", "AuthStore"]
}
